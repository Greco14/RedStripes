{"version":3,"file":"odatajs-4.0.0-beta-01.min.js","sources":["odatajs-4.0.0-beta-01.js"],"names":["e","t","n","r","s","o","u","a","require","i","Error","f","exports","call","length",1,"module","odatajs","oData","store","cache","window","node","./lib/cache.js","./lib/odata.js","./lib/odatajs.js","./lib/store.js",2,"appendPage","operation","page","intersection","intersectRanges","start","end","c","getJsonValueArraryLength","d","concatJsonValueArray","sliceJsonValueArray","x","y","result","xLast","yLast","resultIndex","resultLast","checkZeroGreater","val","name","undefined","message","isNaN","isFinite","checkUndefinedGreaterThanZero","checkUndefinedOrNumber","removeFromArray","arr","item","len","splice","estimateSize","object","size","type","snapToPageBoundaries","lowIndex","highIndex","pageSize","Math","floor","ceil","DataCacheOperation","stateMachine","promise","isCancelable","index","count","data","pending","stateData","cacheState","that","this","p","OPERATION_STATE_START","canceled","oncomplete","cancel","state","OPERATION_STATE_ERROR","OPERATION_STATE_END","OPERATION_STATE_CANCEL","transition","complete","djsassert","error","err","run","wait","OPERATION_STATE_WAIT","operationStateMachine","opTargetState","CACHE_STATE_INIT","fireCanceled","fireRejected","fireResolved","handled","DataCache","options","cacheFailure","stats","counts","netReads","prefetches","cacheReads","clearOperations","readOperations","prefetchOperations","actualCacheSize","allDataLocal","cacheSize","undefinedDefault","collectionCount","highestSavedPage","highestSavedPageSize","overflowed","prefetchSize","version","pendingOperations","source","cacheSource","ODataCacheSource","storeReq","createStore","mechanism","onidle","idle","deferred","createDeferred","delay","resolve","request","reject","extend","abort","clear","op","destroyStateMachine","queueAndStart","filterForward","predicate","filter","filterBack","readRange","readStateMachine","ToObservable","toObservable","utils","inBrowser","Rx","Observable","obs","disposed","errorCallback","onError","successCallback","value","onNext","onCompleted","then","Dispose","dispose","cacheFailureCallback","changeState","newState","operations","concat","clearStore","CACHE_STATE_DESTROY","DjsDeferred","close","dequeueOperation","removed","CACHE_STATE_IDLE","fetchPage","read","backwards","parseInt10","max","returnData","pendingReadRange","readMore","readIndex","readCount","dataIndex","element","unshift","push","nextIndex","initialPage","initialIndex","initialCount","fireOnIdle","prefetch","CACHE_STATE_READ","prefetchStateMachine","queue","readPage","key","storeFailureCallback","contains","contained","_","savePage","pageBytes","addOrUpdate","updateSettings","saveSettings","success","settings","sourceId","identifier","pageCount","pageIndex","cancelStateMachine","DESTROY_STATE_CLEAR","CACHE_STATE_PREFETCH","READ_STATE_LOCAL","READ_STATE_DONE","min","readSaveStateMachine","CACHE_STATE_WRITE","range","isPrefetch","found","READ_STATE_SOURCE","READ_STATE_SAVE","saved","assigned","settingsVersion","indexOf","createDataCache","isArray","normalizeURI","prototype","reason","./cache/source","./odatajs.js",3,"appendQueryOption","uri","queryOption","separator","appendSegment","segment","queryPortion","substr","buildODataRequest","method","requestUri","user","password","enableJsonpCallback","callbackParameterName","formatQueryString","queryForData","queryForDataInternal","currentRequest","odataRequest","newData","nextLink","substring","property","httpClient","metadata","normalizeURICase","encodeURI","decodeURI","toString","queryOptions","./../odata.js","./../odatajs.js",4,"dispatchHandler","handlerMethod","requestOrResponse","context","handlers","odataUtils","odataHandler","handler","odataMetadata","odataNet","net","odataJson","json","batch","throwErrorCallback","defined","MAX_DATA_SERVICE_VERSION","invokeRequest","metadataParser","prepareRequest","jsonHandler","textHandler","defaultSuccess","alert","JSON","stringify","defaultError","defaultHandler","response","body","headers","write","maxDataServiceVersion","accept","defaultMetadata","urlOrRequest","String","defaultHttpClient","recognizeDates","bIsSuccessHandlerError","parseMetadata","csdlMetadataDocument","batchHandler","partHandler","metadataHandler","./odata/batch.js","./odata/handler.js","./odata/json.js","./odata/metadata.js","./odata/net.js","./odata/utils.js","./odatajs/utils.js",5,"hex16","random","createBoundary","prefix","currentBoundary","boundaries","batchParser","text","boundary","contentType","properties","__batchResponses","readBatch","handlerContext","batchSerializer","cType","batchMediaType","mediaType","writeBatch","delimiter","readTo","readLine","partEnd","responses","position","changeResponses","partHeaders","readHeaders","partContentType","readResponse","__changeResponses","pop","statusCode","parts","line","pos","responseHeaderRegex","exec","normalizeHeaders","statusText","match","responseStatusRegex","str","isBatch","batchBoundary","batchParts","__batchRequests","writeBatchPartDelimiter","writeBatchPart","contentTypeProperties","part","nested","changeSet","__changeRequests","changeSetBoundary","partContext","writeRequest","trimString","./handler.js","./utils.js",6,"contentTypeParts","split","contentTypeParams","contentTypeToString","createReadWriteContext","dataServiceVersion","rwContext","fixRequestHeader","fixDataServiceVersionHeader","dsv","maxVersion","getRequestOrResponseHeader","getContentType","getDataServiceVersion","matches","versionRE","handlerAccepts","handlerRead","parseCallback","readContext","handlerWrite","serializeCallback","writeContext","textParse","textSerialize","oDataUtils",7,"minutesToOffset","minutes","sign","hours","formatNumberWidth","parseJsonDateString","jsonDateRE","Date","mins","current","getUTCMinutes","setUTCMinutes","__edmType","__offset","valueOf","jsonParser","metadataContentType","model","parse","payloadFormat","getFormatKind","readPayloadMinimal","readPayloadFull","addType","fullName","addTypeNoEdm","addTypeColNoEdm","isObject","hasOwnProperty","isGeographyEdmType","isGeometryEdmType","convertDatesNoEdm","typeFromObject","jsonSerializer","jsonContentType","newdata","formatJsonRequestPayload","isPrimitive","newArrayData","isJsonSerializableProperty","jsonMakePayloadInfo","kind","parseContextUriFragment","fragments","ret","detectedPayloadKind","PAYLOADTYPE_SVCDOC","PAYLOADTYPE_VALUE","isNullProperty","PAYLOADTYPE_ENTITY_REF_LINKS","PAYLOADTYPE_ENTITY_REF_LINK","typeName","fragmentParts","fragment","rCount","charAt","inPharenthesis","startsWith","PAYLOADTYPE_COLLECTION","lookupEntityType","lookupComplexType","projection","jsonIsPrimitiveType","container","lookupDefaultEntityContainer","entitySet","lookupEntitySet","entityType","PAYLOADTYPE_FEED","singleton","lookupSingleton","PAYLOADTYPE_ENTRY","endsWith","lookupProperty","tmp12","PAYLOADTYPE_PROPERTY","deltaKind","DELTATYPE_FEED","DELTATYPE_DELETED_ENTRY","DELTATYPE_LINK","DELTATYPE_DELETED_LINK","createPayloadInfo","metadataUri","contextUrlAnnotation","fragmentStart","lastIndexOf","baseURI","payloadInfo","readPayloadMinimalProperty","readPayloadMinimalFeed","readPayloadMinimalEntry","readPayloadMinimalCollection","PAYLOADTYPE_LINKS","jsonGetEntryKey","entityModel","entityInstanceKey","entityKeys","propertyRef","formatLiteral","first","collectionInfo","readPayloadMinimalObject","entries","items","entryInfo","contentTypeOdata","entry","feedInfo","formatRowLiteral","encodeURIComponent","replace","convertByteArrayToHexString","convertDates","propertyName","parseDate","parseDateTimeOffset","parseDuration","parseTime","checkProperties","objectInfoType","curType","propertyValue","baseType","isCollectionType","readPayloadMinimalComplexObject","propertyType","objectInfo","keyType","lastIdSegment","jsonSerializableMetadata","isPrimitiveEdmType","oDataHandler","odataNs","odataAnnotationPrefix","formatDateTimeOffset","formatDuration","getCanonicalTimezone","isComplex","XXXparseDateTime","jsonMediaType",8,"schemaElement","attributes","elements","ns","scriptCase","firstTwo","toUpperCase","toLowerCase","getChildSchema","parentSchema","candidateName","elementName","multipleElements","isEdmNamespace","nsURI","edmNs1","parseConceptualModelElement","localName","xmlLocalName","xmlNamespaceURI","elementSchema","schema","xmlAttributes","attribute","xmlnsNS","schemaName","odataMetaXmlNs","xmlChildElements","child","childSchema","xmlInnerText","doc","xmlParse","root","xmlFirstChildElement","oDSxml","xml","xmlNS","ado","http","adoDs","edmxNs","xmlMediaType","Action","ActionImport","Annotation","AnnotationPath","Annotations","Apply","And","Or","Not","Eq","Ne","Gt","Ge","Lt","Le","Binary","Bool","Cast","Collection","ComplexType","DateTimeOffset","Decimal","Duration","EntityContainer","EntitySet","EntityType","EnumMember","EnumType","Float","Function","FunctionImport","Guid","If","Int","IsOf","Key","LabeledElement","LabeledElementReference","Member","NavigationProperty","NavigationPropertyBinding","NavigationPropertyPath","Null","OnDelete","Path","Parameter","Property","PropertyPath","PropertyRef","PropertyValue","Record","ReferentialConstraint","ReturnType","Schema","Singleton","Term","TimeOfDay","TypeDefinition","UrlRef","Edmx","DataServices","Reference","Include","IncludeAnnotations",9,"canUseJSONP","createIFrame","url","iframe","document","createElement","style","display","attributeEncodedUrl","html","getElementsByTagName","appendChild","writeHtmlToIFrame","createXmlHttpRequest","XMLHttpRequest","exception","ActiveXObject","isAbsoluteUrl","isLocalUrl","location","locationDomain","protocol","host","removeCallback","tick","ticks","removeIFrame","parentNode","removeChild","readResponseHeaders","xhr","responseHeaders","getAllResponseHeaders","header","frameDocument","contentWindow","contentDocument","open","done","handleTimeout","onreadystatechange","readyState","status","responseText","setRequestHeader","timeoutMS","timeout","ontimeout","send","timeoutId","tickText","succeeded","clearTimeout","Content-Type","OData-Version","setTimeout","queryStringParams","qIndex",10,"forEachSchema","callback","dataServices","formatMilliseconds","ms","formatDateTimeOffsetJSON","getTime","hasOffset","isDateTimeOffset","offset","timezone","parseTimezone","getUTCHours","h","m","setUTCHours","year","getUTCFullYear","month","getUTCMonth","getUTCMilliseconds","__ns","getUTCDate","getUTCSeconds","days","seconds","width","append","getCollectionType","isCollection","colData","results","collectionTypeRE","test","isDate","isDeferred","__metadata","__deferred","isEntry","isFeed","feedData","geographyEdmTypes","geographyTypes","geometryEdmTypes","geometryTypes","isNamedStream","mediaResource","__mediaresource","media_src","primitiveEdmTypes","navigationPropertyKind","propertyModel","relationship","find","lookupInMetadata","lookupInSchema","entitySets","singletons","entityContainer","lookupEntityContainer","lookupFunctionImport","functionImports","functionImport","lookupNavigationPropertyType","navigationProperty","rel","association","nameOnly","removeNamespace","namespace","associations","role","toRole","lookupNavigationPropertyEntitySet","sourceEntitySetName","associationSet","containers","associationSets","j","getEntitySetInfo","entitySetName","info","containerName","left","right","leftParts","rightParts","leftVersion","rightVersion","lowerName","normalName","normalHeaders","parseBool","parseDateTimeMaybeOffset","withOffset","nullOnError","parseDateTimeRE","direction","setUTCFullYear","parseTimeOfDay","parseTimeOfDayRE","duration","parseTimeRE","years","months","parseFloat","offsetHours","offsetMinutes","Accept","async","traverseInternal","owner","traverse","dataItemTypeName","valueTypeName","EDM","EDM_BOOLEAN","EDM_BYTE","EDM_SBYTE","EDM_INT16","EDM_INT32","EDM_INT64","EDM_SINGLE","EDM_DOUBLE","EDM_DECIMAL","EDM_STRING","EDM_BINARY","EDM_DATE","EDM_DATETIMEOFFSET","EDM_DURATION","EDM_GUID","EDM_TIMEOFDAY","GEOGRAPHY","EDM_GEOGRAPHY","EDM_GEOGRAPHY_POINT","EDM_GEOGRAPHY_LINESTRING","EDM_GEOGRAPHY_POLYGON","EDM_GEOGRAPHY_COLLECTION","EDM_GEOGRAPHY_MULTIPOLYGON","EDM_GEOGRAPHY_MULTILINESTRING","EDM_GEOGRAPHY_MULTIPOINT","GEOGRAPHY_POINT","GEOGRAPHY_LINESTRING","GEOGRAPHY_POLYGON","GEOGRAPHY_COLLECTION","GEOGRAPHY_MULTIPOLYGON","GEOGRAPHY_MULTILINESTRING","GEOGRAPHY_MULTIPOINT","GEOMETRY","EDM_GEOMETRY","EDM_GEOMETRY_POINT","EDM_GEOMETRY_LINESTRING","EDM_GEOMETRY_POLYGON","EDM_GEOMETRY_COLLECTION","EDM_GEOMETRY_MULTIPOLYGON","EDM_GEOMETRY_MULTILINESTRING","EDM_GEOMETRY_MULTIPOINT","GEOMETRY_POINT","GEOMETRY_LINESTRING","GEOMETRY_POLYGON","GEOMETRY_COLLECTION","GEOMETRY_MULTIPOLYGON","GEOMETRY_MULTILINESTRING","GEOMETRY_MULTIPOINT","GEOJSON_POINT","GEOJSON_LINESTRING","GEOJSON_POLYGON","GEOJSON_MULTIPOINT","GEOJSON_MULTILINESTRING","GEOJSON_MULTIPOLYGON","GEOJSON_GEOMETRYCOLLECTION","content-type","content-encoding","content-length","odata-version","accept-charset","if-match","if-none-match","odata-isolation","odata-maxversion","prefer","content-id","content-transfer-encoding","etag","odata-entityid","preference-applied","retry-after",11,"major","minor","build","./odatajs/deferred.js","./odatajs/xml.js",12,"forwardCall","thisValue","returnValue","apply","arguments","_arguments","_done","_fail","_resolved","_rejected","jQuery","Deferred","fulfilledHandler","errorHandler",13,"b","args","Array","slice","condition","target","values","Object","parseInt","renameProperty","obj","oldName","newName","trim","defaultValue","getURIInfo","isAbsolute","uriRegEx","uriPartNames","scheme","getURIFromInfo","uriInfo","authority","path","query","uriAuthorityRegEx","pctEncodingRegEx","base","baseInfo","normInfo","mergeUriPathWithBase","removeDotsFromPath","uriPath","basePath","atob","decodeBase64","binaryStr","charCodeAt","hexValue","hexValues","binaryString","base65IndexValue","getBase64IndexValue","binaryValue","addBase64Padding","byteArray","numberOfBytes","intValue","character","asciiCode","asciiOfA","differenceBetweenZanda","concatData","keys","input","search","format","defaultFormatKind","formatKind","normalizedFormat","activeXObject","progId",14,"hasLeadingOrTrailingWhitespace","re","isWhitespace","ws","isWhitespacePreserveContext","domElement","nodeType","xmlAttributeValue","isXmlNSDeclaration","domAttribute","nodeName","safeSetProperty","setProperty","msXmlDom3","msxml3","msXmlDom","msxml","msXmlParse","dom","loadXML","parseError","errorCode","xmlThrowParserError","srcText","exceptionOrReason","errorXmlText","domParser","DOMParser","parseFromString","documentElement","namespaceURI","mozillaParserErroNS","srcTextElement","xmlNodeValue","xhtmlNS","xmlFirstDescendantElement","siblings","cursor","firstChild","nextSibling","shift","xmlQualifiedName","xmlAppendText","domNode","textNode","attr","xmlAttributeNode","xmlNewAttribute","ownerDocument","xmlAppendChild","onAttributeCallback","getNamedItemNS","getQualifiedItem","xmlBaseURI","onElementCallback","xmlTraverse","xmlFindElementByPath","xmlFindNodeByPath","lastSegmentStart","nodePath","parentPath","xmlFirstElementMaybeRecursive","getElementsByTagNameNS","recursive","firstElement","isExpectedNamespace","isExpectedNodeName","xmlElement","whitespacePreserveContext","whitespaceAlreadyRemoved","preserveWhiteSpace","shouldInclude","baseName","nodeValue","onChildCallback","subtrees","proceed","xmlSiblingElement","sibling","xmlDom","implementation","createDocument","xmlAppendChildren","parent","children","xmlNewText","setAttributeNodeNS","setAttributeNode","qualifiedName","createAttributeNS","createNode","xmlNewElement","nampespaceURI","createElementNS","xmlNewNSDeclaration","xmlNewFragment","tempDom","tempRoot","imported","importNode","createDocumentFragment","importedChild","createTextNode","xmlNewNodeByPath","xmlFindNode","xmlNewNode","xmlNode","childNode","xmlSerialize","xmlSerializer","XMLSerializer","serializer","serializeToString","xmlSerializeDescendants","childNodes","fragmentRoot","w3org",15,"defaultStoreMechanism","DomStore","isSupported","factory","mechanisms","create","IndexedDBStore","MemoryStore","indexeddb","memory","./store/dom.js","./store/indexeddb.js","./store/memory.js",16,"domStoreDateToJSON","newValue","v","domStoreJSONToDate","qualifyDomStoreKey","unqualifyDomStoreKey","localStorage","add","fullKey","oldDateToJSON","toJSON","storedValue","setItem","code","number","removeItem","getItem","getAllKeys","remove","update",17,"getError","errorFunc","errName","errObj","ex","openStoreDb","storeName","dbName","indexedDB","onblocked","onerror","onupgradeneeded","db","objectStoreNames","createObjectStore","onsuccess","event","versionRequest","setVersion","transaction","onversionchange","openTransaction","mode","storeDb","mozIndexedDB","webkitIndexedDB","msIndexedDB","IDBKeyRange","webkitIDBKeyRange","IDBTransaction","webkitIDBTransaction","IDBT_READ_ONLY","READ_ONLY","IDBT_READ_WRITE","READ_WRITE","onabort","objectStore","record","put","get","openCursor","only","pair",18,"validateKeyInput","messageString","holes","getErrorCallback"],"mappings":"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","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\n\nvar odatajs = require('./lib/odatajs.js');\n\nodatajs.oData = require('./lib/odata.js');\nodatajs.store = require('./lib/store.js');\nodatajs.cache = require('./lib/cache.js');\n\nif (typeof window !== 'undefined') {\n    //expose to browsers window object\n    window.odatajs = odatajs;\n} else {\n    //expose in commonjs style\n    odatajs.node = \"node\";\n    module.exports = odatajs;\n}\n\n},{\"./lib/cache.js\":2,\"./lib/odata.js\":4,\"./lib/odatajs.js\":11,\"./lib/store.js\":15}],2:[function(require,module,exports){\n\n\n /** @module cache */\n\nvar odatajs = require('./odatajs.js');\nvar utils = odatajs.utils;\nvar deferred = odatajs.deferred;\nvar storeReq = odatajs.store;\nvar cacheSource = require('./cache/source');\n\n\nvar assigned = utils.assigned;\nvar delay = utils.delay;\nvar extend = utils.extend;\nvar djsassert = utils.djsassert;\nvar isArray = utils.isArray;\nvar normalizeURI = utils.normalizeURI;\nvar parseInt10 = utils.parseInt10;\nvar undefinedDefault = utils.undefinedDefault;\n\nvar createDeferred = deferred.createDeferred;\nvar DjsDeferred = deferred.DjsDeferred;\n\n\nvar getJsonValueArraryLength = utils.getJsonValueArraryLength;\nvar sliceJsonValueArray = utils.sliceJsonValueArray;\nvar concatJsonValueArray = utils.concatJsonValueArray;\n\n\n\n/** Appends a page's data to the operation data.\n * @param {Object} operation - Operation with  (i)ndex, (c)ount and (d)ata.\n * @param {Object} page - Page with (i)ndex, (c)ount and (d)ata.\n */\nfunction appendPage(operation, page) {\n\n    var intersection = intersectRanges(operation, page);\n    var start = 0;\n    var end = 0;\n    if (intersection) {\n        start = intersection.i - page.i;\n        end = start + (operation.c - getJsonValueArraryLength(operation.d));\n    }\n\n    operation.d = concatJsonValueArray(operation.d, sliceJsonValueArray(page.d, start, end));\n}\n\n/** Returns the {(i)ndex, (c)ount} range for the intersection of x and y.\n * @param {Object} x - Range with (i)ndex and (c)ount members.\n * @param {Object} y - Range with (i)ndex and (c)ount members.\n * @returns {Object} The intersection (i)ndex and (c)ount; undefined if there is no intersection.\n */\nfunction intersectRanges(x, y) {\n\n    var xLast = x.i + x.c;\n    var yLast = y.i + y.c;\n    var resultIndex = (x.i > y.i) ? x.i : y.i;\n    var resultLast = (xLast < yLast) ? xLast : yLast;\n    var result;\n    if (resultLast >= resultIndex) {\n        result = { i: resultIndex, c: resultLast - resultIndex };\n    }\n\n    return result;\n}\n\n/** Checks whether val is a defined number with value zero or greater.\n * @param {Number} val - Value to check.\n * @param {String} name - Parameter name to use in exception.\n * @throws Throws an exception if the check fails\n */\nfunction checkZeroGreater(val, name) {\n\n    if (val === undefined || typeof val !== \"number\") {\n        throw { message: \"'\" + name + \"' must be a number.\" };\n    }\n\n    if (isNaN(val) || val < 0 || !isFinite(val)) {\n        throw { message: \"'\" + name + \"' must be greater than or equal to zero.\" };\n    }\n}\n\n/** Checks whether val is undefined or a number with value greater than zero.\n * @param {Number} val - Value to check.\n * @param {String} name - Parameter name to use in exception.\n * @throws Throws an exception if the check fails\n */\nfunction checkUndefinedGreaterThanZero(val, name) {\n\n    if (val !== undefined) {\n        if (typeof val !== \"number\") {\n            throw { message: \"'\" + name + \"' must be a number.\" };\n        }\n\n        if (isNaN(val) || val <= 0 || !isFinite(val)) {\n            throw { message: \"'\" + name + \"' must be greater than zero.\" };\n        }\n    }\n}\n\n/** Checks whether val is undefined or a number\n * @param {Number} val - Value to check.\n * @param {String} name - Parameter name to use in exception.\n * @throws Throws an exception if the check fails\n */\nfunction checkUndefinedOrNumber(val, name) {\n    if (val !== undefined && (typeof val !== \"number\" || isNaN(val) || !isFinite(val))) {\n        throw { message: \"'\" + name + \"' must be a number.\" };\n    }\n}\n\n/** Performs a linear search on the specified array and removes the first instance of 'item'.\n * @param {Array} arr - Array to search.\n * @param {*} item - Item being sought.\n * @returns {Boolean} true if the item was removed otherwise false\n */\nfunction removeFromArray(arr, item) {\n\n    var i, len;\n    for (i = 0, len = arr.length; i < len; i++) {\n        if (arr[i] === item) {\n            arr.splice(i, 1);\n            return true;\n        }\n    }\n\n    return false;\n}\n\n/** Estimates the size of an object in bytes.\n * Object trees are traversed recursively\n * @param {Object} object - Object to determine the size of.\n * @returns {Integer} Estimated size of the object in bytes.\n */\nfunction estimateSize(object) {\n    var size = 0;\n    var type = typeof object;\n\n    if (type === \"object\" && object) {\n        for (var name in object) {\n            size += name.length * 2 + estimateSize(object[name]);\n        }\n    } else if (type === \"string\") {\n        size = object.length * 2;\n    } else {\n        size = 8;\n    }\n    return size;\n}\n\n/** Snaps low and high indices into page sizes and returns a range.\n * @param {Number} lowIndex - Low index to snap to a lower value.\n * @param {Number} highIndex - High index to snap to a higher value.\n * @param {Number} pageSize - Page size to snap to.\n * @returns {Object} A range with (i)ndex and (c)ount of elements.\n */\nfunction snapToPageBoundaries(lowIndex, highIndex, pageSize) {\n    lowIndex = Math.floor(lowIndex / pageSize) * pageSize;\n    highIndex = Math.ceil((highIndex + 1) / pageSize) * pageSize;\n    return { i: lowIndex, c: highIndex - lowIndex };\n}\n\n// The DataCache is implemented using state machines.  The following constants are used to properly\n// identify and label the states that these machines transition to.\nvar CACHE_STATE_DESTROY  = \"destroy\";\nvar CACHE_STATE_IDLE     = \"idle\";\nvar CACHE_STATE_INIT     = \"init\";\nvar CACHE_STATE_READ     = \"read\";\nvar CACHE_STATE_PREFETCH = \"prefetch\";\nvar CACHE_STATE_WRITE    = \"write\";\n\n// DataCacheOperation state machine states.\n// Transitions on operations also depend on the cache current of the cache.\nvar OPERATION_STATE_CANCEL = \"cancel\";\nvar OPERATION_STATE_END    = \"end\";\nvar OPERATION_STATE_ERROR  = \"error\";\nvar OPERATION_STATE_START  = \"start\";\nvar OPERATION_STATE_WAIT   = \"wait\";\n\n// Destroy state machine states\nvar DESTROY_STATE_CLEAR = \"clear\";\n\n// Read / Prefetch state machine states\nvar READ_STATE_DONE   = \"done\";\nvar READ_STATE_LOCAL  = \"local\";\nvar READ_STATE_SAVE   = \"save\";\nvar READ_STATE_SOURCE = \"source\";\n\n/** Creates a new operation object.\n * @class DataCacheOperation\n * @param {Function} stateMachine - State machine that describes the specific behavior of the operation.\n * @param {DjsDeferred} promise - Promise for requested values.\n * @param {Boolean} isCancelable - Whether this operation can be canceled or not.\n * @param {Number} index - Index of first item requested.\n * @param {Number} count - Count of items requested.\n * @param {Array} data - Array with the items requested by the operation.\n * @param {Number} pending - Total number of pending prefetch records.\n * @returns {DataCacheOperation} A new data cache operation instance.\n */\nfunction DataCacheOperation(stateMachine, promise, isCancelable, index, count, data, pending) {\n\n    /// <field name=\"p\" type=\"DjsDeferred\">Promise for requested values.</field>\n    /// <field name=\"i\" type=\"Number\">Index of first item requested.</field>\n    /// <field name=\"c\" type=\"Number\">Count of items requested.</field>\n    /// <field name=\"d\" type=\"Array\">Array with the items requested by the operation.</field>\n    /// <field name=\"s\" type=\"Array\">Current state of the operation.</field>\n    /// <field name=\"canceled\" type=\"Boolean\">Whether the operation has been canceled.</field>\n    /// <field name=\"pending\" type=\"Number\">Total number of pending prefetch records.</field>\n    /// <field name=\"oncomplete\" type=\"Function\">Callback executed when the operation reaches the end state.</field>\n\n    var stateData;\n    var cacheState;\n    var that = this;\n\n    that.p = promise;\n    that.i = index;\n    that.c = count;\n    that.d = data;\n    that.s = OPERATION_STATE_START;\n\n    that.canceled = false;\n    that.pending = pending;\n    that.oncomplete = null;\n\n    /** Transitions this operation to the cancel state and sets the canceled flag to true.\n     * The function is a no-op if the operation is non-cancelable.</summary>\n     * @method DataCacheOperation#cancel\n     */\n    that.cancel = function cancel() {\n\n        if (!isCancelable) {\n            return;\n        }\n\n        var state = that.s;\n        if (state !== OPERATION_STATE_ERROR && state !== OPERATION_STATE_END && state !== OPERATION_STATE_CANCEL) {\n            that.canceled = true;\n            transition(OPERATION_STATE_CANCEL, stateData);\n        }\n    };\n\n    /** Transitions this operation to the end state.\n     * @method DataCacheOperation#complete\n     */\n    that.complete = function () {\n\n        djsassert(that.s !== OPERATION_STATE_END, \"DataCacheOperation.complete() - operation is in the end state\", that);\n        transition(OPERATION_STATE_END, stateData);\n    };\n\n    /** Transitions this operation to the error state.\n     * @method DataCacheOperation#error\n     */\n    that.error = function (err) {\n        if (!that.canceled) {\n            djsassert(that.s !== OPERATION_STATE_END, \"DataCacheOperation.error() - operation is in the end state\", that);\n            djsassert(that.s !== OPERATION_STATE_ERROR, \"DataCacheOperation.error() - operation is in the error state\", that);\n            transition(OPERATION_STATE_ERROR, err);\n        }\n    };\n\n    /** Executes the operation's current state in the context of a new cache state.\n     * @method DataCacheOperation#run\n     * @param {Object} state - New cache state.\n     */\n    that.run = function (state) {\n\n        cacheState = state;\n        that.transition(that.s, stateData);\n    };\n\n    /** Transitions this operation to the wait state.\n     * @method DataCacheOperation#wait\n     */\n    that.wait = function (data) {\n\n        djsassert(that.s !== OPERATION_STATE_END, \"DataCacheOperation.wait() - operation is in the end state\", that);\n        transition(OPERATION_STATE_WAIT, data);\n    };\n\n    /** State machine that describes all operations common behavior.\n     * @method DataCacheOperation#operationStateMachine\n     * @param {Object} opTargetState - Operation state to transition to.\n     * @param {Object} cacheState - Current cache state.\n     * @param {Object} [data] - Additional data passed to the state.\n     */\n    var operationStateMachine = function (opTargetState, cacheState, data) {\n\n        switch (opTargetState) {\n            case OPERATION_STATE_START:\n                // Initial state of the operation. The operation will remain in this state until the cache has been fully initialized.\n                if (cacheState !== CACHE_STATE_INIT) {\n                    stateMachine(that, opTargetState, cacheState, data);\n                }\n                break;\n\n            case OPERATION_STATE_WAIT:\n                // Wait state indicating that the operation is active but waiting for an asynchronous operation to complete.\n                stateMachine(that, opTargetState, cacheState, data);\n                break;\n\n            case OPERATION_STATE_CANCEL:\n                // Cancel state.\n                stateMachine(that, opTargetState, cacheState, data);\n                that.fireCanceled();\n                transition(OPERATION_STATE_END);\n                break;\n\n            case OPERATION_STATE_ERROR:\n                // Error state. Data is expected to be an object detailing the error condition.\n                stateMachine(that, opTargetState, cacheState, data);\n                that.canceled = true;\n                that.fireRejected(data);\n                transition(OPERATION_STATE_END);\n                break;\n\n            case OPERATION_STATE_END:\n                // Final state of the operation.\n                if (that.oncomplete) {\n                    that.oncomplete(that);\n                }\n                if (!that.canceled) {\n                    that.fireResolved();\n                }\n                stateMachine(that, opTargetState, cacheState, data);\n                break;\n\n            default:\n                // Any other state is passed down to the state machine describing the operation's specific behavior.\n                // DATAJS INTERNAL START \n                if (true) {\n                    // Check that the state machine actually handled the sate.\n                    var handled = stateMachine(that, opTargetState, cacheState, data);\n                    djsassert(handled, \"Bad operation state: \" + opTargetState + \" cacheState: \" + cacheState, this);\n                } else {\n                    // DATAJS INTERNAL END \n                    stateMachine(that, opTargetState, cacheState, data);\n                    // DATAJS INTERNAL START\n                }\n                // DATAJS INTERNAL END\n                break;\n        }\n    };\n\n\n\n    /** Transitions this operation to a new state.\n     * @method DataCacheOperation#transition\n     * @param {Object} state - State to transition the operation to.\n     * @param {Object} [data] - \n     */\n    var transition = function (state, data) {\n        that.s = state;\n        stateData = data;\n        operationStateMachine(state, cacheState, data);\n    };\n    \n    that.transition = transition;\n    \n    return that;\n}\n\n/** Fires a resolved notification as necessary.\n * @method DataCacheOperation#fireResolved\n */\nDataCacheOperation.prototype.fireResolved = function () {\n\n    // Fire the resolve just once.\n    var p = this.p;\n    if (p) {\n        this.p = null;\n        p.resolve(this.d);\n    }\n};\n\n/** Fires a rejected notification as necessary.\n * @method DataCacheOperation#fireRejected\n */\nDataCacheOperation.prototype.fireRejected = function (reason) {\n\n    // Fire the rejection just once.\n    var p = this.p;\n    if (p) {\n        this.p = null;\n        p.reject(reason);\n    }\n};\n\n/** Fires a canceled notification as necessary.\n * @method DataCacheOperation#fireCanceled\n */\nDataCacheOperation.prototype.fireCanceled = function () {\n\n    this.fireRejected({ canceled: true, message: \"Operation canceled\" });\n};\n\n\n/** Creates a data cache for a collection that is efficiently loaded on-demand.\n * @class DataCache\n * @param options - Options for the data cache, including name, source, pageSize,\n * prefetchSize, cacheSize, storage mechanism, and initial prefetch and local-data handler.\n * @returns {DataCache} A new data cache instance.\n */\nfunction DataCache(options) {\n\n    var state = CACHE_STATE_INIT;\n    var stats = { counts: 0, netReads: 0, prefetches: 0, cacheReads: 0 };\n\n    var clearOperations = [];\n    var readOperations = [];\n    var prefetchOperations = [];\n\n    var actualCacheSize = 0;                                             // Actual cache size in bytes.\n    var allDataLocal = false;                                            // Whether all data is local.\n    var cacheSize = undefinedDefault(options.cacheSize, 1048576);        // Requested cache size in bytes, default 1 MB.\n    var collectionCount = 0;                                             // Number of elements in the server collection.\n    var highestSavedPage = 0;                                            // Highest index of all the saved pages.\n    var highestSavedPageSize = 0;                                        // Item count of the saved page with the highest index.\n    var overflowed = cacheSize === 0;                                    // If the cache has overflowed (actualCacheSize > cacheSize or cacheSize == 0);\n    var pageSize = undefinedDefault(options.pageSize, 50);               // Number of elements to store per page.\n    var prefetchSize = undefinedDefault(options.prefetchSize, pageSize); // Number of elements to prefetch from the source when the cache is idling.\n    var version = \"1.0\";\n    var cacheFailure;\n\n    var pendingOperations = 0;\n\n    var source = options.source;\n    if (typeof source === \"string\") {\n        // Create a new cache source.\n        source = new cacheSource.ODataCacheSource(options);\n    }\n    source.options = options;\n\n    // Create a cache local store.\n    var store = storeReq.createStore(options.name, options.mechanism);\n\n    var that = this;\n\n    that.onidle = options.idle;\n    that.stats = stats;\n\n    /** Counts the number of items in the collection.\n     * @method DataCache#count\n     * @returns {Object} A promise with the number of items.\n     */\n    that.count = function () {\n\n        if (cacheFailure) {\n            throw cacheFailure;\n        }\n\n        var deferred = createDeferred();\n        var canceled = false;\n\n        if (allDataLocal) {\n            delay(function () {\n                deferred.resolve(collectionCount);\n            });\n\n            return deferred.promise();\n        }\n\n        // TODO: Consider returning the local data count instead once allDataLocal flag is set to true.\n        var request = source.count(function (count) {\n            request = null;\n            stats.counts++;\n            deferred.resolve(count);\n        }, function (err) {\n            request = null;\n            deferred.reject(extend(err, { canceled: canceled }));\n        });\n\n        return extend(deferred.promise(), {\n\n             /** Aborts the count operation (used within promise callback)\n              * @method DataCache#cancelCount\n              */\n            cancel: function () {\n               \n                if (request) {\n                    canceled = true;\n                    request.abort();\n                    request = null;\n                }\n            }\n        });\n    };\n\n    /** Cancels all running operations and clears all local data associated with this cache.\n     * New read requests made while a clear operation is in progress will not be canceled.\n     * Instead they will be queued for execution once the operation is completed.\n     * @method DataCache#clear\n     * @returns {Object} A promise that has no value and can't be canceled.\n     */\n    that.clear = function () {\n\n        if (cacheFailure) {\n            throw cacheFailure;\n        }\n\n        if (clearOperations.length === 0) {\n            var deferred = createDeferred();\n            var op = new DataCacheOperation(destroyStateMachine, deferred, false);\n            queueAndStart(op, clearOperations);\n            return deferred.promise();\n        }\n        return clearOperations[0].p;\n    };\n\n    /** Filters the cache data based a predicate.\n     * Specifying a negative count value will yield all the items in the cache that satisfy the predicate.\n     * @method DataCache#filterForward\n     * @param {Number} index - The index of the item to start filtering forward from.\n     * @param {Number} count - Maximum number of items to include in the result.\n     * @param {Function} predicate - Callback function returning a boolean that determines whether an item should be included in the result or not.\n     * @returns {DjsDeferred} A promise for an array of results.\n     */\n    that.filterForward = function (index, count, predicate) {\n        return filter(index, count, predicate, false);\n    };\n\n    /** Filters the cache data based a predicate.\n     * Specifying a negative count value will yield all the items in the cache that satisfy the predicate.\n     * @method DataCache#filterBack\n     * @param {Number} index - The index of the item to start filtering backward from.\n     * @param {Number} count - Maximum number of items to include in the result.\n     * @param {Function} predicate - Callback function returning a boolean that determines whether an item should be included in the result or not.\n     * @returns {DjsDeferred} A promise for an array of results.\n     */\n    that.filterBack = function (index, count, predicate) {\n        return filter(index, count, predicate, true);\n    };\n\n    /** Reads a range of adjacent records.\n     * New read requests made while a clear operation is in progress will not be canceled.\n     * Instead they will be queued for execution once the operation is completed.\n     * @method DataCache#readRange\n     * @param {Number} index - Zero-based index of record range to read.\n     * @param {Number} count - Number of records in the range.\n     * @returns {DjsDeferred} A promise for an array of records; less records may be returned if the\n     * end of the collection is found.\n     */\n    that.readRange = function (index, count) {\n\n        checkZeroGreater(index, \"index\");\n        checkZeroGreater(count, \"count\");\n\n        if (cacheFailure) {\n            throw cacheFailure;\n        }\n\n        var deferred = createDeferred();\n\n        // Merging read operations would be a nice optimization here.\n        var op = new DataCacheOperation(readStateMachine, deferred, true, index, count, {}, 0);\n        queueAndStart(op, readOperations);\n\n        return extend(deferred.promise(), {\n            cancel: function () {\n                /** Aborts the readRange operation  (used within promise callback)\n                 * @method DataCache#cancelReadRange\n                 */\n                op.cancel();\n            }\n        });\n    };\n\n    /** Creates an Observable object that enumerates all the cache contents.\n     * @method DataCache#toObservable\n     * @returns A new Observable object that enumerates all the cache contents.\n     */\n    that.ToObservable = that.toObservable = function () {\n        if ( !utils.inBrowser()) {\n            throw { message: \"Only in broser supported\" };\n        }\n\n        if (!window.Rx || !window.Rx.Observable) {\n            throw { message: \"Rx library not available - include rx.js\" };\n        }\n\n        if (cacheFailure) {\n            throw cacheFailure;\n        }\n\n        return new window.Rx.Observable(function (obs) {\n            var disposed = false;\n            var index = 0;\n\n            var errorCallback = function (error) {\n                if (!disposed) {\n                    obs.onError(error);\n                }\n            };\n\n            var successCallback = function (data) {\n                if (!disposed) {\n                    var i, len;\n                    for (i = 0, len = data.value.length; i < len; i++) {\n                        // The wrapper automatically checks for Dispose\n                        // on the observer, so we don't need to check it here.\n                        obs.onNext(data.value[i]);\n                    }\n\n                    if (data.value.length < pageSize) {\n                        obs.onCompleted();\n                    } else {\n                        index += pageSize;\n                        that.readRange(index, pageSize).then(successCallback, errorCallback);\n                    }\n                }\n            };\n\n            that.readRange(index, pageSize).then(successCallback, errorCallback);\n\n            return { Dispose: function () { \n                obs.dispose(); // otherwise the check isStopped obs.onNext(data.value[i]);\n                disposed = true; \n                } };\n        });\n    };\n\n    /** Creates a function that handles a callback by setting the cache into failure mode.\n     * @method DataCache~cacheFailureCallback\n     * @param {String} message - Message text.\n     * @returns {Function} Function to use as error callback.\n     * This function will specifically handle problems with critical store resources\n     * during cache initialization.\n     */\n    var cacheFailureCallback = function (message) {\n        \n\n        return function (error) {\n            cacheFailure = { message: message, error: error };\n\n            // Destroy any pending clear or read operations.\n            // At this point there should be no prefetch operations.\n            // Count operations will go through but are benign because they\n            // won't interact with the store.\n            djsassert(prefetchOperations.length === 0, \"prefetchOperations.length === 0\");\n            var i, len;\n            for (i = 0, len = readOperations.length; i < len; i++) {\n                readOperations[i].fireRejected(cacheFailure);\n            }\n            for (i = 0, len = clearOperations.length; i < len; i++) {\n                clearOperations[i].fireRejected(cacheFailure);\n            }\n\n            // Null out the operation arrays.\n            readOperations = clearOperations = null;\n        };\n    };\n\n    /** Updates the cache's state and signals all pending operations of the change.\n     * @method DataCache~changeState\n     * @param {Object} newState - New cache state.\n     * This method is a no-op if the cache's current state and the new state are the same.</remarks>\n     */\n    var changeState = function (newState) {\n\n        if (newState !== state) {\n            state = newState;\n            var operations = clearOperations.concat(readOperations, prefetchOperations);\n            var i, len;\n            for (i = 0, len = operations.length; i < len; i++) {\n                operations[i].run(state);\n            }\n        }\n    };\n\n    /** Removes all the data stored in the cache.\n     * @method DataCache~clearStore\n     * @returns {DjsDeferred} A promise with no value.\n     */\n    var clearStore = function () {\n        djsassert(state === CACHE_STATE_DESTROY || state === CACHE_STATE_INIT, \"DataCache.clearStore() - cache is not on the destroy or initialize state, current sate = \" + state);\n\n        var deferred = new DjsDeferred();\n        store.clear(function () {\n\n            // Reset the cache settings.\n            actualCacheSize = 0;\n            allDataLocal = false;\n            collectionCount = 0;\n            highestSavedPage = 0;\n            highestSavedPageSize = 0;\n            overflowed = cacheSize === 0;\n\n            // version is not reset, in case there is other state in eg V1.1 that is still around.\n\n            // Reset the cache stats.\n            stats = { counts: 0, netReads: 0, prefetches: 0, cacheReads: 0 };\n            that.stats = stats;\n\n            store.close();\n            deferred.resolve();\n        }, function (err) {\n            deferred.reject(err);\n        });\n        return deferred;\n    };\n\n    /** Removes an operation from the caches queues and changes the cache state to idle.\n     * @method DataCache~dequeueOperation\n     * @param {DataCacheOperation} operation - Operation to dequeue.\n     * This method is used as a handler for the operation's oncomplete event.</remarks>\n    */\n    var dequeueOperation = function (operation) {\n\n        var removed = removeFromArray(clearOperations, operation);\n        if (!removed) {\n            removed = removeFromArray(readOperations, operation);\n            if (!removed) {\n                removeFromArray(prefetchOperations, operation);\n            }\n        }\n\n        pendingOperations--;\n        changeState(CACHE_STATE_IDLE);\n    };\n\n    /** Requests data from the cache source.\n     * @method DataCache~fetchPage\n     * @param {Number} start - Zero-based index of items to request.\n     * @returns {DjsDeferred} A promise for a page object with (i)ndex, (c)ount, (d)ata.\n     */\n    var fetchPage = function (start) {\n\n        djsassert(state !== CACHE_STATE_DESTROY, \"DataCache.fetchPage() - cache is on the destroy state\");\n        djsassert(state !== CACHE_STATE_IDLE, \"DataCache.fetchPage() - cache is on the idle state\");\n\n        var deferred = new DjsDeferred();\n        var canceled = false;\n\n        var request = source.read(start, pageSize, function (data) {\n            var length = getJsonValueArraryLength(data);\n            var page = { i: start, c: length, d: data };\n            deferred.resolve(page);\n        }, function (err) {\n            deferred.reject(err);\n        });\n\n        return extend(deferred, {\n            cancel: function () {\n                if (request) {\n                    request.abort();\n                    canceled = true;\n                    request = null;\n                }\n            }\n        });\n    };\n\n    /** Filters the cache data based a predicate.\n     * @method DataCache~filter\n     * @param {Number} index - The index of the item to start filtering from.\n     * @param {Number} count - Maximum number of items to include in the result.\n     * @param {Function} predicate - Callback function returning a boolean that determines whether an item should be included in the result or not.\n     * @param {Boolean} backwards - True if the filtering should move backward from the specified index, falsey otherwise.\n     * Specifying a negative count value will yield all the items in the cache that satisfy the predicate.\n     * @returns {DjsDeferred} A promise for an array of results.\n     */\n    var filter = function (index, count, predicate, backwards) {\n\n        index = parseInt10(index);\n        count = parseInt10(count);\n\n        if (isNaN(index)) {\n            throw { message: \"'index' must be a valid number.\", index: index };\n        }\n        if (isNaN(count)) {\n            throw { message: \"'count' must be a valid number.\", count: count };\n        }\n\n        if (cacheFailure) {\n            throw cacheFailure;\n        }\n\n        index = Math.max(index, 0);\n\n        var deferred = createDeferred();\n        var returnData = {};\n        returnData.value = [];\n        var canceled = false;\n        var pendingReadRange = null;\n\n        var readMore = function (readIndex, readCount) {\n            if (!canceled) {\n                if (count > 0 && returnData.value.length >= count) {\n                    deferred.resolve(returnData);\n                } else {\n                    pendingReadRange = that.readRange(readIndex, readCount).then(function (data) {\n                        if (data[\"@odata.context\"] && !returnData[\"@odata.context\"]) {\n                            returnData[\"@odata.context\"] = data[\"@odata.context\"];\n                        }\n                        \n                        for (var i = 0, length = data.value.length; i < length && (count < 0 || returnData.value.length < count); i++) {\n                            var dataIndex = backwards ? length - i - 1 : i;\n                            var item = data.value[dataIndex];\n                            if (predicate(item)) {\n                                var element = {\n                                    index: readIndex + dataIndex,\n                                    item: item\n                                };\n\n                                backwards ? returnData.value.unshift(element) : returnData.value.push(element);\n                            }\n                        }\n\n                        // Have we reached the end of the collection?\n                        if ((!backwards && data.value.length < readCount) || (backwards && readIndex <= 0)) {\n                            deferred.resolve(returnData);\n                        } else {\n                            var nextIndex = backwards ? Math.max(readIndex - pageSize, 0) : readIndex + readCount;\n                            readMore(nextIndex, pageSize);\n                        }\n                    }, function (err) {\n                        deferred.reject(err);\n                    });\n                }\n            }\n        };\n\n        // Initially, we read from the given starting index to the next/previous page boundary\n        var initialPage = snapToPageBoundaries(index, index, pageSize);\n        var initialIndex = backwards ? initialPage.i : index;\n        var initialCount = backwards ? index - initialPage.i + 1 : initialPage.i + initialPage.c - index;\n        readMore(initialIndex, initialCount);\n\n        return extend(deferred.promise(), {\n            /** Aborts the filter operation (used within promise callback)\n            * @method DataCache#cancelFilter\n             */\n            cancel: function () {\n\n                if (pendingReadRange) {\n                    pendingReadRange.cancel();\n                }\n                canceled = true;\n            }\n        });\n    };\n\n    /** Fires an onidle event if any functions are assigned.\n     * @method DataCache~fireOnIdle\n    */\n    var fireOnIdle = function () {\n\n        if (that.onidle && pendingOperations === 0) {\n            that.onidle();\n        }\n    };\n\n    /** Creates and starts a new prefetch operation.\n     * @method DataCache~prefetch\n     * @param {Number} start - Zero-based index of the items to prefetch.\n     * This method is a no-op if any of the following conditions is true:\n     *     1.- prefetchSize is 0\n     *     2.- All data has been read and stored locally in the cache.\n     *     3.- There is already an all data prefetch operation queued.\n     *     4.- The cache has run out of available space (overflowed).\n    */\n    var prefetch = function (start) {\n        \n\n        if (allDataLocal || prefetchSize === 0 || overflowed) {\n            return;\n        }\n\n        djsassert(state === CACHE_STATE_READ, \"DataCache.prefetch() - cache is not on the read state, current state: \" + state);\n\n        if (prefetchOperations.length === 0 || (prefetchOperations[0] && prefetchOperations[0].c !== -1)) {\n            // Merging prefetch operations would be a nice optimization here.\n            var op = new DataCacheOperation(prefetchStateMachine, null, true, start, prefetchSize, null, prefetchSize);\n            queueAndStart(op, prefetchOperations);\n        }\n    };\n\n    /** Queues an operation and runs it.\n     * @param {DataCacheOperation} op - Operation to queue.\n     * @param {Array} queue - Array that will store the operation.\n     */\n    var queueAndStart = function (op, queue) {\n\n        op.oncomplete = dequeueOperation;\n        queue.push(op);\n        pendingOperations++;\n        op.run(state);\n    };\n\n    /** Requests a page from the cache local store.\n     * @method DataCache~readPage    \n     * @param {Number} key - Zero-based index of the reuqested page.\n     * @returns {DjsDeferred} A promise for a found flag and page object with (i)ndex, (c)ount, (d)ata, and (t)icks.\n     */\n    var readPage = function (key) {\n\n        djsassert(state !== CACHE_STATE_DESTROY, \"DataCache.readPage() - cache is on the destroy state\");\n\n        var canceled = false;\n        var deferred = extend(new DjsDeferred(), {\n            /** Aborts the readPage operation. (used within promise callback)\n             * @method DataCache#cancelReadPage\n             */\n            cancel: function () {\n                canceled = true;\n            }\n        });\n\n        var error = storeFailureCallback(deferred, \"Read page from store failure\");\n\n        store.contains(key, function (contained) {\n            if (canceled) {\n                return;\n            }\n            if (contained) {\n                store.read(key, function (_, data) {\n                    if (!canceled) {\n                        deferred.resolve(data !== undefined, data);\n                    }\n                }, error);\n                return;\n            }\n            deferred.resolve(false);\n        }, error);\n        return deferred;\n    };\n\n    /** Saves a page to the cache local store.\n     * @method DataCache~savePage    \n     * @param {Number} key - Zero-based index of the requested page.\n     * @param {Object} page - Object with (i)ndex, (c)ount, (d)ata, and (t)icks.\n     * @returns {DjsDeferred} A promise with no value.\n     */\n    var savePage = function (key, page) {\n\n        djsassert(state !== CACHE_STATE_DESTROY, \"DataCache.savePage() - cache is on the destroy state\");\n        djsassert(state !== CACHE_STATE_IDLE, \"DataCache.savePage() - cache is on the idle state\");\n\n        var canceled = false;\n\n        var deferred = extend(new DjsDeferred(), {\n            /** Aborts the savePage operation. (used within promise callback)\n             * @method DataCache#cancelReadPage\n             */\n            cancel: function () {\n                canceled = true;\n            }\n        });\n\n        var error = storeFailureCallback(deferred, \"Save page to store failure\");\n\n        var resolve = function () {\n            deferred.resolve(true);\n        };\n\n        if (page.c > 0) {\n            var pageBytes = estimateSize(page);\n            overflowed = cacheSize >= 0 && cacheSize < actualCacheSize + pageBytes;\n\n            if (!overflowed) {\n                store.addOrUpdate(key, page, function () {\n                    updateSettings(page, pageBytes);\n                    saveSettings(resolve, error);\n                }, error);\n            } else {\n                resolve();\n            }\n        } else {\n            updateSettings(page, 0);\n            saveSettings(resolve, error);\n        }\n        return deferred;\n    };\n\n    /** Saves the cache's current settings to the local store.\n     * @method DataCache~saveSettings    \n     * @param {Function} success - Success callback.\n     * @param {Function} error - Errror callback.\n     */\n    var saveSettings = function (success, error) {\n\n        var settings = {\n            actualCacheSize: actualCacheSize,\n            allDataLocal: allDataLocal,\n            cacheSize: cacheSize,\n            collectionCount: collectionCount,\n            highestSavedPage: highestSavedPage,\n            highestSavedPageSize: highestSavedPageSize,\n            pageSize: pageSize,\n            sourceId: source.identifier,\n            version: version\n        };\n\n        store.addOrUpdate(\"__settings\", settings, success, error);\n    };\n\n    /** Creates a function that handles a store error.\n     * @method DataCache~storeFailureCallback    \n     * @param {DjsDeferred} deferred - Deferred object to resolve.\n     * @param {String} message - Message text.\n     * @returns {Function} Function to use as error callback.\n    \n     * This function will specifically handle problems when interacting with the store.\n     */\n    var storeFailureCallback = function (deferred/*, message*/) {\n        \n\n        return function (/*error*/) {\n            // var console = windo1w.console;\n            // if (console && console.log) {\n            //    console.log(message);\n            //    console.dir(error);\n            // }\n            deferred.resolve(false);\n        };\n    };\n\n    /** Updates the cache's settings based on a page object.\n     * @method DataCache~updateSettings    \n     * @param {Object} page - Object with (i)ndex, (c)ount, (d)ata.\n     * @param {Number} pageBytes - Size of the page in bytes.\n     */\n    var updateSettings = function (page, pageBytes) {\n\n        var pageCount = page.c;\n        var pageIndex = page.i;\n\n        // Detect the collection size.\n        if (pageCount === 0) {\n            if (highestSavedPage === pageIndex - pageSize) {\n                collectionCount = highestSavedPage + highestSavedPageSize;\n            }\n        } else {\n            highestSavedPage = Math.max(highestSavedPage, pageIndex);\n            if (highestSavedPage === pageIndex) {\n                highestSavedPageSize = pageCount;\n            }\n            actualCacheSize += pageBytes;\n            if (pageCount < pageSize && !collectionCount) {\n                collectionCount = pageIndex + pageCount;\n            }\n        }\n\n        // Detect the end of the collection.\n        if (!allDataLocal && collectionCount === highestSavedPage + highestSavedPageSize) {\n            allDataLocal = true;\n        }\n    };\n\n    /** State machine describing the behavior for cancelling a read or prefetch operation.\n     * @method DataCache~cancelStateMachine    \n     * @param {DataCacheOperation} operation - Operation being run.\n     * @param {Object} opTargetState - Operation state to transition to.\n     * @param {Object} cacheState - Current cache state.\n     * @param {Object} [data] - \n     * This state machine contains behavior common to read and prefetch operations.\n     */\n    var cancelStateMachine = function (operation, opTargetState, cacheState, data) {\n        \n\n        var canceled = operation.canceled && opTargetState !== OPERATION_STATE_END;\n        if (canceled) {\n            if (opTargetState === OPERATION_STATE_CANCEL) {\n                // Cancel state.\n                // Data is expected to be any pending request made to the cache.\n                if (data && data.cancel) {\n                    data.cancel();\n                }\n            }\n        }\n        return canceled;\n    };\n\n    /** State machine describing the behavior of a clear operation.\n     * @method DataCache~destroyStateMachine    \n     * @param {DataCacheOperation} operation - Operation being run.\n     * @param {Object} opTargetState - Operation state to transition to.\n     * @param {Object} cacheState - Current cache state.\n    \n     * Clear operations have the highest priority and can't be interrupted by other operations; however,\n     * they will preempt any other operation currently executing.\n     */\n    var destroyStateMachine = function (operation, opTargetState, cacheState) {\n        \n\n        var transition = operation.transition;\n\n        // Signal the cache that a clear operation is running.\n        if (cacheState !== CACHE_STATE_DESTROY) {\n            changeState(CACHE_STATE_DESTROY);\n            return true;\n        }\n\n        switch (opTargetState) {\n            case OPERATION_STATE_START:\n                // Initial state of the operation.\n                transition(DESTROY_STATE_CLEAR);\n                break;\n\n            case OPERATION_STATE_END:\n                // State that signals the operation is done.\n                fireOnIdle();\n                break;\n\n            case DESTROY_STATE_CLEAR:\n                // State that clears all the local data of the cache.\n                clearStore().then(function () {\n                    // Terminate the operation once the local store has been cleared.\n                    operation.complete();\n                });\n                // Wait until the clear request completes.\n                operation.wait();\n                break;\n\n            default:\n                return false;\n        }\n        return true;\n    };\n\n    /** State machine describing the behavior of a prefetch operation.\n     * @method DataCache~prefetchStateMachine    \n     * @param {DataCacheOperation} operation - Operation being run.\n     * @param {Object} opTargetState - Operation state to transition to.\n     * @param {Object} cacheState - Current cache state.\n     * @param {Object} [data] - \n    \n     *  Prefetch operations have the lowest priority and will be interrupted by operations of\n     *  other kinds. A preempted prefetch operation will resume its execution only when the state\n     *  of the cache returns to idle.\n     * \n     *  If a clear operation starts executing then all the prefetch operations are canceled,\n     *  even if they haven't started executing yet.\n     */\n    var prefetchStateMachine = function (operation, opTargetState, cacheState, data) {\n        \n\n        // Handle cancelation\n        if (!cancelStateMachine(operation, opTargetState, cacheState, data)) {\n\n            var transition = operation.transition;\n\n            // Handle preemption\n            if (cacheState !== CACHE_STATE_PREFETCH) {\n                if (cacheState === CACHE_STATE_DESTROY) {\n                    if (opTargetState !== OPERATION_STATE_CANCEL) {\n                        operation.cancel();\n                    }\n                } else if (cacheState === CACHE_STATE_IDLE) {\n                    // Signal the cache that a prefetch operation is running.\n                    changeState(CACHE_STATE_PREFETCH);\n                }\n                return true;\n            }\n\n            switch (opTargetState) {\n                case OPERATION_STATE_START:\n                    // Initial state of the operation.\n                    if (prefetchOperations[0] === operation) {\n                        transition(READ_STATE_LOCAL, operation.i);\n                    }\n                    break;\n\n                case READ_STATE_DONE:\n                    // State that determines if the operation can be resolved or has to\n                    // continue processing.\n                    // Data is expected to be the read page.\n                    var pending = operation.pending;\n\n                    if (pending > 0) {\n                        pending -= Math.min(pending, data.c);\n                    }\n\n                    // Are we done, or has all the data been stored?\n                    if (allDataLocal || pending === 0 || data.c < pageSize || overflowed) {\n                        operation.complete();\n                    } else {\n                        // Continue processing the operation.\n                        operation.pending = pending;\n                        transition(READ_STATE_LOCAL, data.i + pageSize);\n                    }\n                    break;\n\n                default:\n                    return readSaveStateMachine(operation, opTargetState, cacheState, data, true);\n            }\n        }\n        return true;\n    };\n\n    /** State machine describing the behavior of a read operation.\n     * @method DataCache~readStateMachine    \n     * @param {DataCacheOperation} operation - Operation being run.\n     * @param {Object} opTargetState - Operation state to transition to.\n     * @param {Object} cacheState - Current cache state.\n     * @param {Object} [data] - \n    \n     * Read operations have a higher priority than prefetch operations, but lower than\n     * clear operations. They will preempt any prefetch operation currently running\n     * but will be interrupted by a clear operation.\n     *          \n     * If a clear operation starts executing then all the currently running\n     * read operations are canceled. Read operations that haven't started yet will\n     * wait in the start state until the destory operation finishes.\n     */\n    var readStateMachine = function (operation, opTargetState, cacheState, data) {\n        \n\n        // Handle cancelation\n        if (!cancelStateMachine(operation, opTargetState, cacheState, data)) {\n\n            var transition = operation.transition;\n\n            // Handle preemption\n            if (cacheState !== CACHE_STATE_READ && opTargetState !== OPERATION_STATE_START) {\n                if (cacheState === CACHE_STATE_DESTROY) {\n                    if (opTargetState !== OPERATION_STATE_START) {\n                        operation.cancel();\n                    }\n                } else if (cacheState !== CACHE_STATE_WRITE) {\n                    // Signal the cache that a read operation is running.\n                    djsassert(state == CACHE_STATE_IDLE || state === CACHE_STATE_PREFETCH, \"DataCache.readStateMachine() - cache is not on the read or idle state.\");\n                    changeState(CACHE_STATE_READ);\n                }\n\n                return true;\n            }\n\n            switch (opTargetState) {\n                case OPERATION_STATE_START:\n                    // Initial state of the operation.\n                    // Wait until the cache is idle or prefetching.\n                    if (cacheState === CACHE_STATE_IDLE || cacheState === CACHE_STATE_PREFETCH) {\n                        // Signal the cache that a read operation is running.\n                        changeState(CACHE_STATE_READ);\n                        if (operation.c >= 0) {\n                            // Snap the requested range to a page boundary.\n                            var range = snapToPageBoundaries(operation.i, operation.c, pageSize);\n                            transition(READ_STATE_LOCAL, range.i);\n                        } else {\n                            transition(READ_STATE_DONE, operation);\n                        }\n                    }\n                    break;\n\n                case READ_STATE_DONE:\n                    // State that determines if the operation can be resolved or has to\n                    // continue processing.\n                    // Data is expected to be the read page.\n                    appendPage(operation, data);\n                    var len = getJsonValueArraryLength(operation.d);\n                    // Are we done?\n                    if (operation.c === len || data.c < pageSize) {\n                        // Update the stats, request for a prefetch operation.\n                        stats.cacheReads++;\n                        prefetch(data.i + data.c);\n                        // Terminate the operation.\n                        operation.complete();\n                    } else {\n                        // Continue processing the operation.\n                        transition(READ_STATE_LOCAL, data.i + pageSize);\n                    }\n                    break;\n\n                default:\n                    return readSaveStateMachine(operation, opTargetState, cacheState, data, false);\n            }\n        }\n\n        return true;\n    };\n\n    /** State machine describing the behavior for reading and saving data into the cache.\n     * @method DataCache~readSaveStateMachine    \n     * @param {DataCacheOperation} operation - Operation being run.\n     * @param {Object} opTargetState - Operation state to transition to.\n     * @param {Object} cacheState - Current cache state.\n     * @param {Object} [data] - \n     * @param {Boolean} isPrefetch - Flag indicating whether a read (false) or prefetch (true) operation is running.\n     * This state machine contains behavior common to read and prefetch operations.\n    */\n    var readSaveStateMachine = function (operation, opTargetState, cacheState, data, isPrefetch) {\n\n        var error = operation.error;\n        var transition = operation.transition;\n        var wait = operation.wait;\n        var request;\n\n        switch (opTargetState) {\n            case OPERATION_STATE_END:\n                // State that signals the operation is done.\n                fireOnIdle();\n                break;\n\n            case READ_STATE_LOCAL:\n                // State that requests for a page from the local store.\n                // Data is expected to be the index of the page to request.\n                request = readPage(data).then(function (found, page) {\n                    // Signal the cache that a read operation is running.\n                    if (!operation.canceled) {\n                        if (found) {\n                            // The page is in the local store, check if the operation can be resolved.\n                            transition(READ_STATE_DONE, page);\n                        } else {\n                            // The page is not in the local store, request it from the source.\n                            transition(READ_STATE_SOURCE, data);\n                        }\n                    }\n                });\n                break;\n\n            case READ_STATE_SOURCE:\n                // State that requests for a page from the cache source.\n                // Data is expected to be the index of the page to request.\n                request = fetchPage(data).then(function (page) {\n                    // Signal the cache that a read operation is running.\n                    if (!operation.canceled) {\n                        // Update the stats and save the page to the local store.\n                        if (isPrefetch) {\n                            stats.prefetches++;\n                        } else {\n                            stats.netReads++;\n                        }\n                        transition(READ_STATE_SAVE, page);\n                    }\n                }, error);\n                break;\n\n            case READ_STATE_SAVE:\n                // State that saves a  page to the local store.\n                // Data is expected to be the page to save.\n                // Write access to the store is exclusive.\n                if (cacheState !== CACHE_STATE_WRITE) {\n                    changeState(CACHE_STATE_WRITE);\n                    request = savePage(data.i, data).then(function (saved) {\n                        if (!operation.canceled) {\n                            if (!saved && isPrefetch) {\n                                operation.pending = 0;\n                            }\n                            // Check if the operation can be resolved.\n                            transition(READ_STATE_DONE, data);\n                        }\n                        changeState(CACHE_STATE_IDLE);\n                    });\n                }\n                break;\n\n            default:\n                // Unknown state that can't be handled by this state machine.\n                return false;\n        }\n\n        if (request) {\n            // The operation might have been canceled between stack frames do to the async calls.\n            if (operation.canceled) {\n                request.cancel();\n            } else if (operation.s === opTargetState) {\n                // Wait for the request to complete.\n                wait(request);\n            }\n        }\n\n        return true;\n    };\n\n    // Initialize the cache.\n    store.read(\"__settings\", function (_, settings) {\n        if (assigned(settings)) {\n            var settingsVersion = settings.version;\n            if (!settingsVersion || settingsVersion.indexOf(\"1.\") !== 0) {\n                cacheFailureCallback(\"Unsupported cache store version \" + settingsVersion)();\n                return;\n            }\n\n            if (pageSize !== settings.pageSize || source.identifier !== settings.sourceId) {\n                // The shape or the source of the data was changed so invalidate the store.\n                clearStore().then(function () {\n                    // Signal the cache is fully initialized.\n                    changeState(CACHE_STATE_IDLE);\n                }, cacheFailureCallback(\"Unable to clear store during initialization\"));\n            } else {\n                // Restore the saved settings.\n                actualCacheSize = settings.actualCacheSize;\n                allDataLocal = settings.allDataLocal;\n                cacheSize = settings.cacheSize;\n                collectionCount = settings.collectionCount;\n                highestSavedPage = settings.highestSavedPage;\n                highestSavedPageSize = settings.highestSavedPageSize;\n                version = settingsVersion;\n\n                // Signal the cache is fully initialized.\n                changeState(CACHE_STATE_IDLE);\n            }\n        } else {\n            // This is a brand new cache.\n            saveSettings(function () {\n                // Signal the cache is fully initialized.\n                changeState(CACHE_STATE_IDLE);\n            }, cacheFailureCallback(\"Unable to write settings during initialization.\"));\n        }\n    }, cacheFailureCallback(\"Unable to read settings from store.\"));\n\n    return that;\n}\n\n/** Creates a data cache for a collection that is efficiently loaded on-demand.\n * @param options \n * Options for the data cache, including name, source, pageSize, TODO check doku\n * prefetchSize, cacheSize, storage mechanism, and initial prefetch and local-data handler.\n * @returns {DataCache} A new data cache instance.\n */\nfunction createDataCache (options) {\n    checkUndefinedGreaterThanZero(options.pageSize, \"pageSize\");\n    checkUndefinedOrNumber(options.cacheSize, \"cacheSize\");\n    checkUndefinedOrNumber(options.prefetchSize, \"prefetchSize\");\n\n    if (!assigned(options.name)) {\n        throw { message: \"Undefined or null name\", options: options };\n    }\n\n    if (!assigned(options.source)) {\n        throw { message: \"Undefined source\", options: options };\n    }\n\n    return new DataCache(options);\n}\n\n\n/** estimateSize (see {@link estimateSize}) */\nexports.estimateSize = estimateSize;\n\n/** createDataCache */  \nexports.createDataCache = createDataCache;\n},{\"./cache/source\":3,\"./odatajs.js\":11}],3:[function(require,module,exports){\n\n\n /** @module cache/source */\n \nvar utils = require(\"./../odatajs.js\").utils;\nvar odataRequest = require(\"./../odata.js\");\n\nvar parseInt10 = utils.parseInt10;\nvar normalizeURICase = utils.normalizeURICase;\n\n\n\n\n/** Appends the specified escaped query option to the specified URI.\n * @param {String} uri - URI to append option to.\n * @param {String} queryOption - Escaped query option to append.\n */\nfunction appendQueryOption(uri, queryOption) {\n    var separator = (uri.indexOf(\"?\") >= 0) ? \"&\" : \"?\";\n    return uri + separator + queryOption;\n}\n\n/** Appends the specified segment to the given URI.\n * @param {String} uri - URI to append a segment to.\n * @param {String} segment - Segment to append.\n * @returns {String} The original URI with a new segment appended.\n */\nfunction appendSegment(uri, segment) {\n    var index = uri.indexOf(\"?\");\n    var queryPortion = \"\";\n    if (index >= 0) {\n        queryPortion = uri.substr(index);\n        uri = uri.substr(0, index);\n    }\n\n    if (uri[uri.length - 1] !== \"/\") {\n        uri += \"/\";\n    }\n    return uri + segment + queryPortion;\n}\n\n/** Builds a request object to GET the specified URI.\n * @param {String} uri - URI for request.\n * @param {Object} options - Additional options.\n */\nfunction buildODataRequest(uri, options) {\n    return {\n        method: \"GET\",\n        requestUri: uri,\n        user: options.user,\n        password: options.password,\n        enableJsonpCallback: options.enableJsonpCallback,\n        callbackParameterName: options.callbackParameterName,\n        formatQueryString: options.formatQueryString\n    };\n}\n\n/** Finds the index where the value of a query option starts.\n * @param {String} uri - URI to search in.\n * @param {String} name - Name to look for.\n * @returns {Number} The index where the query option starts.\n */\nfunction findQueryOptionStart(uri, name) {\n    var result = -1;\n    var queryIndex = uri.indexOf(\"?\");\n    if (queryIndex !== -1) {\n        var start = uri.indexOf(\"?\" + name + \"=\", queryIndex);\n        if (start === -1) {\n            start = uri.indexOf(\"&\" + name + \"=\", queryIndex);\n        }\n        if (start !== -1) {\n            result = start + name.length + 2;\n        }\n    }\n    return result;\n}\n\n/** Gets data from an OData service.\n * @param {String} uri - URI to the OData service.\n * @param {Object} options - Object with additional well-known request options.\n * @param {Function} success - Success callback.\n * @param {Function} error - Error callback.\n * @returns {Object} Object with an abort method.\n */\nfunction queryForData (uri, options, success, error) {\n    var request = queryForDataInternal(uri, options, {}, success, error);\n    return request;\n}\n\n/** Gets data from an OData service taking into consideration server side paging.\n * @param {String} uri - URI to the OData service.\n * @param {Object} options - Object with additional well-known request options.\n * @param {Array} data - Array that stores the data provided by the OData service.\n * @param {Function} success - Success callback.\n * @param {Function} error - Error callback.\n * @returns {Object} Object with an abort method.\n */\nfunction queryForDataInternal(uri, options, data, success, error) {\n\n    var request = buildODataRequest(uri, options);\n    var currentRequest = odataRequest.request(request, function (newData) {\n        var nextLink = newData[\"@odata.nextLink\"];\n        if (nextLink) {\n            var index = uri.indexOf(\".svc/\", 0);\n            if (index != -1) {\n                nextLink = uri.substring(0, index + 5) + nextLink;\n            }\n        }\n\n        if (data.value && newData.value) {\n            data.value = data.value.concat(newData.value);\n        }\n        else {\n            for (var property in newData) {\n                if (property != \"@odata.nextLink\") {\n                    data[property] = newData[property];\n                }\n            }\n        }\n\n        if (nextLink) {\n            currentRequest = queryForDataInternal(nextLink, options, data, success, error);\n        }\n        else {\n            success(data);\n        }\n    }, error, undefined, options.httpClient, options.metadata);\n\n    return {\n        abort: function () {\n            currentRequest.abort();\n        }\n    };\n}\n\n/** Creates a data cache source object for requesting data from an OData service.\n * @class ODataCacheSource\n * @param options - Options for the cache data source.\n * @returns {ODataCacheSource} A new data cache source instance.\n */\nfunction ODataCacheSource (options) {\n    var that = this;\n    var uri = options.source;\n    \n    that.identifier = normalizeURICase(encodeURI(decodeURI(uri)));\n    that.options = options;\n\n    /** Gets the number of items in the collection.\n     * @method ODataCacheSource#count\n     * @param {Function} success - Success callback with the item count.\n     * @param {Function} error - Error callback.\n     * @returns {Object} Request object with an abort method.\n     */\n    that.count = function (success, error) {\n        var options = that.options;\n        return odataRequest.request(\n            buildODataRequest(appendSegment(uri, \"$count\"), options),\n            function (data) {\n                var count = parseInt10(data.toString());\n                if (isNaN(count)) {\n                    error({ message: \"Count is NaN\", count: count });\n                } else {\n                    success(count);\n                }\n            }, error, undefined, options.httpClient, options.metadata\n        );\n    };\n    \n    /** Gets a number of consecutive items from the collection.\n     * @method ODataCacheSource#read\n     * @param {Number} index - Zero-based index of the items to retrieve.\n     * @param {Number} count - Number of items to retrieve.\n     * @param {Function} success - Success callback with the requested items.\n     * @param {Function} error - Error callback.\n     * @returns {Object} Request object with an abort method.\n    */\n    that.read = function (index, count, success, error) {\n\n        var queryOptions = \"$skip=\" + index + \"&$top=\" + count;\n        return queryForData(appendQueryOption(uri, queryOptions), that.options, success, error);\n    };\n\n    return that;\n}\n\n\n\n/** ODataCacheSource (see {@link ODataCacheSource}) */\nexports.ODataCacheSource = ODataCacheSource;\n},{\"./../odata.js\":4,\"./../odatajs.js\":11}],4:[function(require,module,exports){\n\n\n /** @module odata */\n\n// Imports\nvar odataUtils    = exports.utils     = require('./odata/utils.js');\nvar odataHandler  = exports.handler   = require('./odata/handler.js');\nvar odataMetadata = exports.metadata  = require('./odata/metadata.js');\nvar odataNet      = exports.net       = require('./odata/net.js');\nvar odataJson     = exports.json      = require('./odata/json.js');\n                    exports.batch     = require('./odata/batch.js');\n                    \n\n\nvar utils = require('./odatajs/utils.js');\nvar assigned = utils.assigned;\n\nvar defined = utils.defined;\nvar throwErrorCallback = utils.throwErrorCallback;\n\nvar invokeRequest = odataUtils.invokeRequest;\nvar MAX_DATA_SERVICE_VERSION = odataHandler.MAX_DATA_SERVICE_VERSION;\nvar prepareRequest = odataUtils.prepareRequest;\nvar metadataParser = odataMetadata.metadataParser;\n\n// CONTENT START\n\nvar handlers = [odataJson.jsonHandler, odataHandler.textHandler];\n\n/** Dispatches an operation to handlers.\n * @param {String} handlerMethod - Name of handler method to invoke.\n * @param {Object} requestOrResponse - request/response argument for delegated call.\n * @param {Object} context - context argument for delegated call.\n */\nfunction dispatchHandler(handlerMethod, requestOrResponse, context) {\n\n    var i, len;\n    for (i = 0, len = handlers.length; i < len && !handlers[i][handlerMethod](requestOrResponse, context); i++) {\n    }\n\n    if (i === len) {\n        throw { message: \"no handler for data\" };\n    }\n}\n\n/** Default success handler for OData.\n * @param data - Data to process.\n */\nexports.defaultSuccess = function (data) {\n\n    window.alert(window.JSON.stringify(data));\n};\n\nexports.defaultError = throwErrorCallback;\n\nexports.defaultHandler = {\n\n        /** Reads the body of the specified response by delegating to JSON handlers.\n        * @param response - Response object.\n        * @param context - Operation context.\n        */\n        read: function (response, context) {\n\n            if (response && assigned(response.body) && response.headers[\"Content-Type\"]) {\n                dispatchHandler(\"read\", response, context);\n            }\n        },\n\n        /** Write the body of the specified request by delegating to JSON handlers.\n        * @param request - Reques tobject.\n        * @param context - Operation context.\n        */\n        write: function (request, context) {\n\n            dispatchHandler(\"write\", request, context);\n        },\n\n        maxDataServiceVersion: MAX_DATA_SERVICE_VERSION,\n        accept: \"application/json;q=0.9, */*;q=0.1\"\n    };\n\nexports.defaultMetadata = []; //TODO check why is the defaultMetadata an Array? and not an Object.\n\n/** Reads data from the specified URL.\n * @param urlOrRequest - URL to read data from.\n * @param {Function} [success] - \n * @param {Function} [error] - \n * @param {Object} [handler] - \n * @param {Object} [httpClient] - \n * @param {Object} [metadata] - \n */\nexports.read = function (urlOrRequest, success, error, handler, httpClient, metadata) {\n\n    var request;\n    if (urlOrRequest instanceof String || typeof urlOrRequest === \"string\") {\n        request = { requestUri: urlOrRequest };\n    } else {\n        request = urlOrRequest;\n    }\n\n    return exports.request(request, success, error, handler, httpClient, metadata);\n};\n\n/** Sends a request containing OData payload to a server.\n * @param {Object} request - Object that represents the request to be sent.\n * @param {Function} [success] - \n * @param {Function} [error] - \n * @param {Object} [handler] - \n * @param {Object} [httpClient] - \n * @param {Object} [metadata] - \n */\nexports.request = function (request, success, error, handler, httpClient, metadata) {\n\n    success = success || exports.defaultSuccess;\n    error = error || exports.defaultError;\n    handler = handler || exports.defaultHandler;\n    httpClient = httpClient || odataNet.defaultHttpClient;\n    metadata = metadata || exports.defaultMetadata;\n\n    // Augment the request with additional defaults.\n    request.recognizeDates = utils.defined(request.recognizeDates, odataJson.jsonHandler.recognizeDates);\n    request.callbackParameterName = utils.defined(request.callbackParameterName, odataNet.defaultHttpClient.callbackParameterName);\n    request.formatQueryString = utils.defined(request.formatQueryString, odataNet.defaultHttpClient.formatQueryString);\n    request.enableJsonpCallback = utils.defined(request.enableJsonpCallback, odataNet.defaultHttpClient.enableJsonpCallback);\n\n    // Create the base context for read/write operations, also specifying complete settings.\n    var context = {\n        metadata: metadata,\n        recognizeDates: request.recognizeDates,\n        callbackParameterName: request.callbackParameterName,\n        formatQueryString: request.formatQueryString,\n        enableJsonpCallback: request.enableJsonpCallback\n    };\n\n    try {\n        odataUtils.prepareRequest(request, handler, context);\n        return odataUtils.invokeRequest(request, success, error, handler, httpClient, context);\n    } catch (err) {\n        // errors in success handler for sync requests are catched here and result in error handler calls. \n        // So here we fix this and throw that error further.\n        if (err.bIsSuccessHandlerError) {\n            throw err;\n        } else {\n            error(err);\n        }\n    }\n\n};\n\n/** Parses the csdl metadata to DataJS metatdata format. This method can be used when the metadata is retrieved using something other than DataJS\n * @param {string} csdlMetadata - A string that represents the entire csdl metadata.\n * @returns {Object} An object that has the representation of the metadata in Datajs format.\n */\nexports.parseMetadata = function (csdlMetadataDocument) {\n\n    return metadataParser(null, csdlMetadataDocument);\n};\n\n// Configure the batch handler to use the default handler for the batch parts.\nexports.batch.batchHandler.partHandler = exports.defaultHandler;\nexports.metadataHandler =  odataMetadata.metadataHandler;\n},{\"./odata/batch.js\":5,\"./odata/handler.js\":6,\"./odata/json.js\":7,\"./odata/metadata.js\":8,\"./odata/net.js\":9,\"./odata/utils.js\":10,\"./odatajs/utils.js\":13}],5:[function(require,module,exports){\n\n\n/** @module odata/batch */\n\nvar utils    = require('./../odatajs.js').utils;\nvar odataUtils    = require('./utils.js');\nvar odataHandler = require('./handler.js');\n\nvar extend = utils.extend;\nvar isArray = utils.isArray;\nvar trimString = utils.trimString;\n\nvar contentType = odataHandler.contentType;\nvar handler = odataHandler.handler;\nvar isBatch = odataUtils.isBatch;\nvar MAX_DATA_SERVICE_VERSION = odataHandler.MAX_DATA_SERVICE_VERSION;\nvar normalizeHeaders = odataUtils.normalizeHeaders;\n//TODO var payloadTypeOf = odata.payloadTypeOf;\nvar prepareRequest = odataUtils.prepareRequest;\n\n\n\n\n\n// Imports\n\n\n\n// CONTENT START\nvar batchMediaType = \"multipart/mixed\";\nvar responseStatusRegex = /^HTTP\\/1\\.\\d (\\d{3}) (.*)$/i;\nvar responseHeaderRegex = /^([^()<>@,;:\\\\\"\\/[\\]?={} \\t]+)\\s?:\\s?(.*)/;\n\n/* Calculates a random 16 bit number and returns it in hexadecimal format.\n * @returns {String} A 16-bit number in hex format.\n */\nfunction hex16() {\n\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substr(1);\n}\n\n/* Creates a string that can be used as a multipart request boundary.\n * @param {String} [prefix] - \n * @returns {String} Boundary string of the format: <prefix><hex16>-<hex16>-<hex16>\n */\nfunction createBoundary(prefix) {\n\n    return prefix + hex16() + \"-\" + hex16() + \"-\" + hex16();\n}\n\n/* Gets the handler for data serialization of individual requests / responses in a batch.\n * @param context - Context used for data serialization.\n * @returns Handler object\n */\nfunction partHandler(context) {\n\n    return context.handler.partHandler;\n}\n\n/* Gets the current boundary used for parsing the body of a multipart response.\n * @param context - Context used for parsing a multipart response.\n * @returns {String} Boundary string.\n */\nfunction currentBoundary(context) {\n    var boundaries = context.boundaries;\n    return boundaries[boundaries.length - 1];\n}\n\n/** Parses a batch response.\n * @param handler - This handler.\n * @param {String} text - Batch text.\n * @param {Object} context - Object with parsing context.\n * @return An object representation of the batch.\n */\nfunction batchParser(handler, text, context) {\n\n    var boundary = context.contentType.properties[\"boundary\"];\n    return { __batchResponses: readBatch(text, { boundaries: [boundary], handlerContext: context }) };\n}\n\n/** Serializes a batch object representation into text.\n * @param handler - This handler.\n * @param {Object} data - Representation of a batch.\n * @param {Object} context - Object with parsing context.\n * @return An text representation of the batch object; undefined if not applicable.#\n */\nfunction batchSerializer(handler, data, context) {\n\n    var cType = context.contentType = context.contentType || contentType(batchMediaType);\n    if (cType.mediaType === batchMediaType) {\n        return writeBatch(data, context);\n    }\n}\n\n/* Parses a multipart/mixed response body from from the position defined by the context.\n * @param {String}  text - Body of the multipart/mixed response.\n * @param context - Context used for parsing.\n * @return Array of objects representing the individual responses.\n */\nfunction readBatch(text, context) {\n    var delimiter = \"--\" + currentBoundary(context);\n\n    // Move beyond the delimiter and read the complete batch\n    readTo(text, context, delimiter);\n\n    // Ignore the incoming line\n    readLine(text, context);\n\n    // Read the batch parts\n    var responses = [];\n    var partEnd;\n\n    while (partEnd !== \"--\" && context.position < text.length) {\n        var partHeaders = readHeaders(text, context);\n        var partContentType = contentType(partHeaders[\"Content-Type\"]);\n\n        var changeResponses;\n        if (partContentType && partContentType.mediaType === batchMediaType) {\n            context.boundaries.push(partContentType.properties.boundary);\n            try {\n                changeResponses = readBatch(text, context);\n            } catch (e) {\n                e.response = readResponse(text, context, delimiter);\n                changeResponses = [e];\n            }\n            responses.push({ __changeResponses: changeResponses });\n            context.boundaries.pop();\n            readTo(text, context, \"--\" + currentBoundary(context));\n        } else {\n            if (!partContentType || partContentType.mediaType !== \"application/http\") {\n                throw { message: \"invalid MIME part type \" };\n            }\n            // Skip empty line\n            readLine(text, context);\n            // Read the response\n            var response = readResponse(text, context, delimiter);\n            try {\n                if (response.statusCode >= 200 && response.statusCode <= 299) {\n                    partHandler(context.handlerContext).read(response, context.handlerContext);\n                } else {\n                    // Keep track of failed responses and continue processing the batch.\n                    response = { message: \"HTTP request failed\", response: response };\n                }\n            } catch (e) {\n                response = e;\n            }\n\n            responses.push(response);\n        }\n\n        partEnd = text.substr(context.position, 2);\n\n        // Ignore the incoming line.\n        readLine(text, context);\n    }\n    return responses;\n}\n\n/* Parses the http headers in the text from the position defined by the context.\n* @param {String} text - Text containing an http response's headers</param>\n* @param context - Context used for parsing.\n* @returns Object containing the headers as key value pairs.\n* This function doesn't support split headers and it will stop reading when it hits two consecutive line breaks.\n*/\nfunction readHeaders(text, context) {\n    var headers = {};\n    var parts;\n    var line;\n    var pos;\n\n    do {\n        pos = context.position;\n        line = readLine(text, context);\n        parts = responseHeaderRegex.exec(line);\n        if (parts !== null) {\n            headers[parts[1]] = parts[2];\n        } else {\n            // Whatever was found is not a header, so reset the context position.\n            context.position = pos;\n        }\n    } while (line && parts);\n\n    normalizeHeaders(headers);\n\n    return headers;\n}\n\n/* Parses an HTTP response.\n * @param {String} text -Text representing the http response.\n * @param context optional - Context used for parsing.\n * @param {String} delimiter -String used as delimiter of the multipart response parts.\n * @return Object representing the http response.\n */\nfunction readResponse(text, context, delimiter) {\n    // Read the status line.\n    var pos = context.position;\n    var match = responseStatusRegex.exec(readLine(text, context));\n\n    var statusCode;\n    var statusText;\n    var headers;\n\n    if (match) {\n        statusCode = match[1];\n        statusText = match[2];\n        headers = readHeaders(text, context);\n        readLine(text, context);\n    } else {\n        context.position = pos;\n    }\n\n    return {\n        statusCode: statusCode,\n        statusText: statusText,\n        headers: headers,\n        body: readTo(text, context, \"\\r\\n\" + delimiter)\n    };\n}\n\n/** Returns a substring from the position defined by the context up to the next line break (CRLF).\n * @param {String} text - Input string.\n * @param context - Context used for reading the input string.\n * @returns {String} Substring to the first ocurrence of a line break or null if none can be found. \n */\nfunction readLine(text, context) {\n\n    return readTo(text, context, \"\\r\\n\");\n}\n\n/** Returns a substring from the position given by the context up to value defined by the str parameter and increments the position in the context.\n * @param {String} text - Input string.</param>\n * @param context - Context used for reading the input string.</param>\n * @param {String} [str] - Substring to read up to.\n * @returns {String} Substring to the first ocurrence of str or the end of the input string if str is not specified. Null if the marker is not found.\n */\nfunction readTo(text, context, str) {\n    var start = context.position || 0;\n    var end = text.length;\n    if (str) {\n        end = text.indexOf(str, start);\n        if (end === -1) {\n            return null;\n        }\n        context.position = end + str.length;\n    } else {\n        context.position = end;\n    }\n\n    return text.substring(start, end);\n}\n\n/** Serializes a batch request object to a string.\n * @param data - Batch request object in payload representation format\n * @param context - Context used for the serialization\n * @returns {String} String representing the batch request\n */\nfunction writeBatch(data, context) {\n    if (!isBatch(data)) {\n        throw { message: \"Data is not a batch object.\" };\n    }\n\n    var batchBoundary = createBoundary(\"batch_\");\n    var batchParts = data.__batchRequests;\n    var batch = \"\";\n    var i, len;\n    for (i = 0, len = batchParts.length; i < len; i++) {\n        batch += writeBatchPartDelimiter(batchBoundary, false) +\n                 writeBatchPart(batchParts[i], context);\n    }\n    batch += writeBatchPartDelimiter(batchBoundary, true);\n\n    // Register the boundary with the request content type.\n    var contentTypeProperties = context.contentType.properties;\n    contentTypeProperties.boundary = batchBoundary;\n\n    return batch;\n}\n\n/** Creates the delimiter that indicates that start or end of an individual request.\n * @param {String} boundary Boundary string used to indicate the start of the request</param>\n * @param {Boolean} close - Flag indicating that a close delimiter string should be generated\n * @returns {String} Delimiter string\n */\nfunction writeBatchPartDelimiter(boundary, close) {\n    var result = \"\\r\\n--\" + boundary;\n    if (close) {\n        result += \"--\";\n    }\n\n    return result + \"\\r\\n\";\n}\n\n/** Serializes a part of a batch request to a string. A part can be either a GET request or\n * a change set grouping several CUD (create, update, delete) requests.\n * @param part - Request or change set object in payload representation format</param>\n * @param context - Object containing context information used for the serialization</param>\n * @param {boolean} [nested] - \n * @returns {String} String representing the serialized part\n * A change set is an array of request objects and they cannot be nested inside other change sets.\n */\nfunction writeBatchPart(part, context, nested) {\n    \n\n    var changeSet = part.__changeRequests;\n    var result;\n    if (isArray(changeSet)) {\n        if (nested) {\n            throw { message: \"Not Supported: change set nested in other change set\" };\n        }\n\n        var changeSetBoundary = createBoundary(\"changeset_\");\n        result = \"Content-Type: \" + batchMediaType + \"; boundary=\" + changeSetBoundary + \"\\r\\n\";\n        var i, len;\n        for (i = 0, len = changeSet.length; i < len; i++) {\n            result += writeBatchPartDelimiter(changeSetBoundary, false) +\n                 writeBatchPart(changeSet[i], context, true);\n        }\n\n        result += writeBatchPartDelimiter(changeSetBoundary, true);\n    } else {\n        result = \"Content-Type: application/http\\r\\nContent-Transfer-Encoding: binary\\r\\n\\r\\n\";\n        var partContext = extend({}, context);\n        partContext.handler = handler;\n        partContext.request = part;\n        partContext.contentType = null;\n\n        prepareRequest(part, partHandler(context), partContext);\n        result += writeRequest(part);\n    }\n\n    return result;\n}\n\n/* Serializes a request object to a string.\n * @param request - Request object to serialize</param>\n * @returns {String} String representing the serialized request\n */\nfunction writeRequest(request) {\n    var result = (request.method ? request.method : \"GET\") + \" \" + request.requestUri + \" HTTP/1.1\\r\\n\";\n    for (var name in request.headers) {\n        if (request.headers[name]) {\n            result = result + name + \": \" + request.headers[name] + \"\\r\\n\";\n        }\n    }\n\n    result += \"\\r\\n\";\n\n    if (request.body) {\n        result += request.body;\n    }\n\n    return result;\n}\n\n\n\n/** batchHandler (see {@link module:odata/batch~batchParser}) */\nexports.batchHandler = handler(batchParser, batchSerializer, batchMediaType, MAX_DATA_SERVICE_VERSION);\nexports.batchSerializer = batchSerializer;\nexports.writeRequest = writeRequest;\n},{\"./../odatajs.js\":11,\"./handler.js\":6,\"./utils.js\":10}],6:[function(require,module,exports){\n\n\n/** @module odata/handler */\n\n\nvar utils    = require('./../odatajs.js').utils;\nvar oDataUtils    = require('./utils.js');\n\n// Imports.\nvar assigned = utils.assigned;\nvar extend = utils.extend;\nvar trimString = utils.trimString;\nvar maxVersion = oDataUtils.maxVersion;\nvar MAX_DATA_SERVICE_VERSION = \"4.0\";\n\n/** Parses a string into an object with media type and properties.\n * @param {String} str - String with media type to parse.\n * @return null if the string is empty; an object with 'mediaType' and a 'properties' dictionary otherwise.\n */\nfunction contentType(str) {\n\n    if (!str) {\n        return null;\n    }\n\n    var contentTypeParts = str.split(\";\");\n    var properties = {};\n\n    var i, len;\n    for (i = 1, len = contentTypeParts.length; i < len; i++) {\n        var contentTypeParams = contentTypeParts[i].split(\"=\");\n        properties[trimString(contentTypeParams[0])] = contentTypeParams[1];\n    }\n\n    return { mediaType: trimString(contentTypeParts[0]), properties: properties };\n}\n\n/** Serializes an object with media type and properties dictionary into a string.\n * @param contentType - Object with media type and properties dictionary to serialize.\n * @return String representation of the media type object; undefined if contentType is null or undefined.</returns>\n */\nfunction contentTypeToString(contentType) {\n    if (!contentType) {\n        return undefined;\n    }\n\n    var result = contentType.mediaType;\n    var property;\n    for (property in contentType.properties) {\n        result += \";\" + property + \"=\" + contentType.properties[property];\n    }\n    return result;\n}\n\n/** Creates an object that is going to be used as the context for the handler's parser and serializer.\n * @param contentType - Object with media type and properties dictionary.\n * @param {String} dataServiceVersion - String indicating the version of the protocol to use.\n * @param context - Operation context.\n * @param handler - Handler object that is processing a resquest or response.\n * @return Context object.</returns>\n */\nfunction createReadWriteContext(contentType, dataServiceVersion, context, handler) {\n\n    var rwContext = {};\n    extend(rwContext, context);\n    extend(rwContext, {\n        contentType: contentType,\n        dataServiceVersion: dataServiceVersion,\n        handler: handler\n    });\n\n    return rwContext;\n}\n\n/** Sets a request header's value. If the header has already a value other than undefined, null or empty string, then this method does nothing.\n * @param request - Request object on which the header will be set.\n * @param {String} name - Header name.\n * @param {String} value - Header value.\n */\nfunction fixRequestHeader(request, name, value) {\n    if (!request) {\n        return;\n    }\n\n    var headers = request.headers;\n    if (!headers[name]) {\n        headers[name] = value;\n    }\n}\n\n/** Sets the DataServiceVersion header of the request if its value is not yet defined or of a lower version.\n * @param request - Request object on which the header will be set.\n * @param {String} version - Version value.\n *  If the request has already a version value higher than the one supplied the this function does nothing.\n */\nfunction fixDataServiceVersionHeader(request, version) {   \n\n    if (request) {\n        var headers = request.headers;\n        var dsv = headers[\"OData-Version\"];\n        headers[\"OData-Version\"] = dsv ? maxVersion(dsv, version) : version;\n    }\n}\n\n/** Gets the value of a request or response header.\n * @param requestOrResponse - Object representing a request or a response.\n * @param {String} name - Name of the header to retrieve.\n * @returns {String} String value of the header; undefined if the header cannot be found.\n */\nfunction getRequestOrResponseHeader(requestOrResponse, name) {\n\n    var headers = requestOrResponse.headers;\n    return (headers && headers[name]) || undefined;\n}\n\n/** Gets the value of the Content-Type header from a request or response.\n * @param requestOrResponse - Object representing a request or a response.\n * @returns {Object} Object with 'mediaType' and a 'properties' dictionary; null in case that the header is not found or doesn't have a value.\n */\nfunction getContentType(requestOrResponse) {\n\n    return contentType(getRequestOrResponseHeader(requestOrResponse, \"Content-Type\"));\n}\n\nvar versionRE = /^\\s?(\\d+\\.\\d+);?.*$/;\n/** Gets the value of the DataServiceVersion header from a request or response.\n * @param requestOrResponse - Object representing a request or a response.\n * @returns {String} Data service version; undefined if the header cannot be found.\n */\nfunction getDataServiceVersion(requestOrResponse) {\n\n    var value = getRequestOrResponseHeader(requestOrResponse, \"OData-Version\");\n    if (value) {\n        var matches = versionRE.exec(value);\n        if (matches && matches.length) {\n            return matches[1];\n        }\n    }\n\n    // Fall through and return undefined.\n}\n\n/** Checks that a handler can process a particular mime type.\n * @param handler - Handler object that is processing a resquest or response.\n * @param cType - Object with 'mediaType' and a 'properties' dictionary.\n * @returns {Boolean} True if the handler can process the mime type; false otherwise.\n *\n * The following check isn't as strict because if cType.mediaType = application/; it will match an accept value of \"application/xml\";\n * however in practice we don't not expect to see such \"suffixed\" mimeTypes for the handlers.\n */\nfunction handlerAccepts(handler, cType) {\n    return handler.accept.indexOf(cType.mediaType) >= 0;\n}\n\n/** Invokes the parser associated with a handler for reading the payload of a HTTP response.\n * @param handler - Handler object that is processing the response.\n * @param {Function} parseCallback - Parser function that will process the response payload.\n * @param response - HTTP response whose payload is going to be processed.\n * @param context - Object used as the context for processing the response.\n * @returns {Boolean} True if the handler processed the response payload and the response.data property was set; false otherwise.\n */\nfunction handlerRead(handler, parseCallback, response, context) {\n\n    if (!response || !response.headers) {\n        return false;\n    }\n\n    var cType = getContentType(response);\n    var version = getDataServiceVersion(response) || \"\";\n    var body = response.body;\n\n    if (!assigned(body)) {\n        return false;\n    }\n\n    if (handlerAccepts(handler, cType)) {\n        var readContext = createReadWriteContext(cType, version, context, handler);\n        readContext.response = response;\n        response.data = parseCallback(handler, body, readContext);\n        return response.data !== undefined;\n    }\n\n    return false;\n}\n\n/** Invokes the serializer associated with a handler for generating the payload of a HTTP request.\n * @param handler - Handler object that is processing the request.\n * @param {Function} serializeCallback - Serializer function that will generate the request payload.\n * @param response - HTTP request whose payload is going to be generated.\n * @param context - Object used as the context for serializing the request.\n * @returns {Boolean} True if the handler serialized the request payload and the request.body property was set; false otherwise.\n */\nfunction handlerWrite(handler, serializeCallback, request, context) {\n    if (!request || !request.headers) {\n        return false;\n    }\n\n    var cType = getContentType(request);\n    var version = getDataServiceVersion(request);\n\n    if (!cType || handlerAccepts(handler, cType)) {\n        var writeContext = createReadWriteContext(cType, version, context, handler);\n        writeContext.request = request;\n\n        request.body = serializeCallback(handler, request.data, writeContext);\n\n        if (request.body !== undefined) {\n            fixDataServiceVersionHeader(request, writeContext.dataServiceVersion || \"4.0\");\n\n            fixRequestHeader(request, \"Content-Type\", contentTypeToString(writeContext.contentType));\n            fixRequestHeader(request, \"OData-MaxVersion\", handler.maxDataServiceVersion);\n            return true;\n        }\n    }\n\n    return false;\n}\n\n/** Creates a handler object for processing HTTP requests and responses.\n * @param {Function} parseCallback - Parser function that will process the response payload.\n * @param {Function} serializeCallback - Serializer function that will generate the request payload.\n * @param {String} accept - String containing a comma separated list of the mime types that this handler can work with.\n * @param {String} maxDataServiceVersion - String indicating the highest version of the protocol that this handler can work with.\n * @returns {Object} Handler object.\n */\nfunction handler(parseCallback, serializeCallback, accept, maxDataServiceVersion) {\n\n    return {\n        accept: accept,\n        maxDataServiceVersion: maxDataServiceVersion,\n\n        read: function (response, context) {\n            return handlerRead(this, parseCallback, response, context);\n        },\n\n        write: function (request, context) {\n            return handlerWrite(this, serializeCallback, request, context);\n        }\n    };\n}\n\nfunction textParse(handler, body /*, context */) {\n    return body;\n}\n\nfunction textSerialize(handler, data /*, context */) {\n    if (assigned(data)) {\n        return data.toString();\n    } else {\n        return undefined;\n    }\n}\n\n\n\n\nexports.textHandler = handler(textParse, textSerialize, \"text/plain\", MAX_DATA_SERVICE_VERSION);\n\nexports.contentType = contentType;\nexports.contentTypeToString = contentTypeToString;\nexports.handler = handler;\nexports.createReadWriteContext = createReadWriteContext;\nexports.fixRequestHeader = fixRequestHeader;\nexports.getRequestOrResponseHeader = getRequestOrResponseHeader;\nexports.getContentType = getContentType;\nexports.getDataServiceVersion = getDataServiceVersion;\nexports.MAX_DATA_SERVICE_VERSION = MAX_DATA_SERVICE_VERSION;\n},{\"./../odatajs.js\":11,\"./utils.js\":10}],7:[function(require,module,exports){\n\n\n/** @module odata/json */\n\n\n\nvar utils        = require('./../odatajs.js').utils;\nvar oDataUtils   = require('./utils.js');\nvar oDataHandler = require('./handler.js');\n\nvar odataNs = \"odata\";\nvar odataAnnotationPrefix = odataNs + \".\";\nvar contextUrlAnnotation = \"@\" + odataAnnotationPrefix + \"context\";\n\nvar assigned = utils.assigned;\nvar defined = utils.defined;\nvar isArray = utils.isArray;\n//var isDate = utils.isDate;\nvar isObject = utils.isObject;\n//var normalizeURI = utils.normalizeURI;\nvar parseInt10 = utils.parseInt10;\nvar getFormatKind = utils.getFormatKind;\n\nvar formatDateTimeOffset = oDataUtils.formatDateTimeOffset;\nvar formatDuration = oDataUtils.formatDuration;\nvar formatNumberWidth = oDataUtils.formatNumberWidth;\nvar getCanonicalTimezone = oDataUtils.getCanonicalTimezone;\nvar handler = oDataUtils.handler;\nvar isComplex = oDataUtils.isComplex;\nvar isPrimitive = oDataUtils.isPrimitive;\nvar isCollectionType = oDataUtils.isCollectionType;\nvar lookupComplexType = oDataUtils.lookupComplexType;\nvar lookupEntityType = oDataUtils.lookupEntityType;\nvar lookupSingleton = oDataUtils.lookupSingleton;\nvar lookupEntitySet = oDataUtils.lookupEntitySet;\nvar lookupDefaultEntityContainer = oDataUtils.lookupDefaultEntityContainer;\nvar lookupProperty = oDataUtils.lookupProperty;\nvar MAX_DATA_SERVICE_VERSION = oDataUtils.MAX_DATA_SERVICE_VERSION;\nvar maxVersion = oDataUtils.maxVersion;\nvar XXXparseDateTime = oDataUtils.XXXparseDateTime;\n\nvar isPrimitiveEdmType = oDataUtils.isPrimitiveEdmType;\nvar isGeographyEdmType = oDataUtils.isGeographyEdmType;\nvar isGeometryEdmType = oDataUtils.isGeometryEdmType;\n\nvar PAYLOADTYPE_FEED = \"f\";\nvar PAYLOADTYPE_ENTRY = \"e\";\nvar PAYLOADTYPE_PROPERTY = \"p\";\nvar PAYLOADTYPE_COLLECTION = \"c\";\nvar PAYLOADTYPE_ENUMERATION_PROPERTY = \"enum\";\nvar PAYLOADTYPE_SVCDOC = \"s\";\nvar PAYLOADTYPE_ENTITY_REF_LINK = \"erl\";\nvar PAYLOADTYPE_ENTITY_REF_LINKS = \"erls\";\n\nvar PAYLOADTYPE_VALUE = \"v\";\n\nvar PAYLOADTYPE_DELTA = \"d\";\nvar DELTATYPE_FEED = \"f\";\nvar DELTATYPE_DELETED_ENTRY = \"de\";\nvar DELTATYPE_LINK = \"l\";\nvar DELTATYPE_DELETED_LINK = \"dl\";\n\nvar jsonMediaType = \"application/json\";\nvar jsonContentType = oDataHandler.contentType(jsonMediaType);\n\n\n// The regular expression corresponds to something like this:\n// /Date(123+60)/\n//\n// This first number is date ticks, the + may be a - and is optional,\n// with the second number indicating a timezone offset in minutes.\n//\n// On the wire, the leading and trailing forward slashes are\n// escaped without being required to so the chance of collisions is reduced;\n// however, by the time we see the objects, the characters already\n// look like regular forward slashes.\nvar jsonDateRE = /^\\/Date\\((-?\\d+)(\\+|-)?(\\d+)?\\)\\/$/;\n\n/** Formats the given minutes into (+/-)hh:mm format.\n * @param {Number} minutes - Number of minutes to format.\n * @returns {String} The minutes in (+/-)hh:mm format.\n */\nfunction minutesToOffset(minutes) {\n\n    var sign;\n    if (minutes < 0) {\n        sign = \"-\";\n        minutes = -minutes;\n    } else {\n        sign = \"+\";\n    }\n\n    var hours = Math.floor(minutes / 60);\n    minutes = minutes - (60 * hours);\n\n    return sign + formatNumberWidth(hours, 2) + \":\" + formatNumberWidth(minutes, 2);\n}\n\n/** Parses the JSON Date representation into a Date object.\n * @param {String} value - String value.\n * @returns {Date} A Date object if the value matches one; falsy otherwise.\n */\nfunction parseJsonDateString(value) {\n\n    var arr = value && jsonDateRE.exec(value);\n    if (arr) {\n        // 0 - complete results; 1 - ticks; 2 - sign; 3 - minutes\n        var result = new Date(parseInt10(arr[1]));\n        if (arr[2]) {\n            var mins = parseInt10(arr[3]);\n            if (arr[2] === \"-\") {\n                mins = -mins;\n            }\n\n            // The offset is reversed to get back the UTC date, which is\n            // what the API will eventually have.\n            var current = result.getUTCMinutes();\n            result.setUTCMinutes(current - mins);\n            result.__edmType = \"Edm.DateTimeOffset\";\n            result.__offset = minutesToOffset(mins);\n        }\n        if (!isNaN(result.valueOf())) {\n            return result;\n        }\n    }\n\n    // Allow undefined to be returned.\n}\n\n// Some JSON implementations cannot produce the character sequence \\/\n// which is needed to format DateTime and DateTimeOffset into the\n// JSON string representation defined by the OData protocol.\n// See the history of this file for a candidate implementation of\n// a 'formatJsonDateString' function.\n\n/** Parses a JSON OData payload.\n * @param handler - This handler.\n * @param text - Payload text (this parser also handles pre-parsed objects).\n * @param {Object} context - Object with parsing context.\n * @return An object representation of the OData payload.</returns>\n */\nfunction jsonParser(handler, text, context) {\n\n    var recognizeDates = defined(context.recognizeDates, handler.recognizeDates);\n    var model = context.metadata;\n    var json = (typeof text === \"string\") ? JSON.parse(text) : text;\n    var metadataContentType;\n    if (assigned(context.contentType) && assigned(context.contentType.properties)) {\n        metadataContentType = context.contentType.properties[\"odata.metadata\"]; //TODO convert to lower before comparism\n    }\n\n    var payloadFormat = getFormatKind(metadataContentType, 1); // none: 0, minimal: 1, full: 2\n\n    // No errors should be throw out if we could not parse the json payload, instead we should just return the original json object.\n    if (payloadFormat === 0) {\n        return json;\n    }\n    else if (payloadFormat === 1) {\n        return readPayloadMinimal(json, model, recognizeDates);\n    }\n    else if (payloadFormat === 2) {\n        // to do: using the EDM Model to get the type of each property instead of just guessing.\n        return readPayloadFull(json, model, recognizeDates);\n    }\n    else {\n        return json;\n    }\n}\n\n\nfunction addType(data, name, value ) {\n    var fullName = name + '@odata.type';\n\n    if ( data[fullName] === undefined) {\n        data[fullName] = value;\n    }\n}\n\nfunction addTypeNoEdm(data, name, value ) {\n    var fullName = name + '@odata.type';\n\n    if ( data[fullName] === undefined) {\n        if ( value.substring(0,4)==='Edm.') {\n            data[fullName] = value.substring(4);\n        } else {\n            data[fullName] = value;\n        }\n\n    }\n}\n\nfunction addTypeColNoEdm(data, name, value ) {\n    var fullName = name + '@odata.type';\n\n    if ( data[fullName] === undefined) {\n        if ( value.substring(0,4)==='Edm.') {\n            data[fullName] = 'Collection('+value.substring(4)+ ')';\n        } else {\n            data[fullName] = 'Collection('+value+ ')';\n        }\n    }\n}\n\n\n/* Adds typeinformation for String, Boolean and numerical EDM-types. \n * The type is determined from the odata-json-format-v4.0.doc specification\n * @param data - Date which will be extendet\n * @param {Boolean} recognizeDates - True if strings formatted as datetime values should be treated as datetime values. False otherwise.\n * @returns An object representation of the OData payload.\n */\nfunction readPayloadFull(data, model, recognizeDates) {\n    var type;\n    if (utils.isObject(data)) {\n        for (var key in data) {\n            if (data.hasOwnProperty(key)) {\n                if (key.indexOf('@') === -1) {\n                    if (utils.isArray(data[key])) {\n                        for (var i = 0; i < data[key].length; ++i) {\n                            readPayloadFull(data[key][i], model, recognizeDates);\n                        }\n                    } else if (utils.isObject(data[key])) {\n                        if (data[key] !== null) {\n                            //don't step into geo.. objects\n                            var isGeo = false;\n                            type = data[key+'@odata.type'];\n                            if (type && (isGeographyEdmType(type) || isGeometryEdmType(type))) {\n                                // is gemometry type\n                            } else {\n                                readPayloadFull(data[key], model, recognizeDates);\n                            }\n                        }\n                    } else {\n                        type = data[key + '@odata.type'];\n\n                        // On .Net OData library, some basic EDM type is omitted, e.g. Edm.String, Edm.Int, and etc.\n                        // For the full metadata payload, we need to full fill the @data.type for each property if it is missing. \n                        // We do this is to help the OlingoJS consumers to easily get the type of each property.\n                        if (!assigned(type)) {\n                            // Guessing the \"type\" from the type of the value is not the right way here. \n                            // To do: we need to get the type from metadata instead of guessing. \n                            var typeFromObject = typeof data[key];\n                            if (typeFromObject === 'string') {\n                                addType(data, key, '#String');\n                            } else if (typeFromObject === 'boolean') {\n                                addType(data, key, '#Boolean');\n                            } else if (typeFromObject === 'number') {\n                                if (data[key] % 1 === 0) { // has fraction \n                                    addType(data, key, '#Int32'); // the biggst integer\n                                } else {\n                                    addType(data, key, '#Decimal'); // the biggst float single,doulbe,decimal\n                                }\n                            }\n                        }\n                        else {\n                            if (recognizeDates) {\n                                convertDatesNoEdm(data, key, type.substring(1));\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return data;\n}\n\n/** Serializes the data by returning its string representation.\n * @param handler - This handler.\n * @param data - Data to serialize.\n * @param {Object} context - Object with serialization context.\n * @returns {String} The string representation of data.\n */\nfunction jsonSerializer(handler, data, context) {\n\n    var dataServiceVersion = context.dataServiceVersion || \"4.0\";\n    var cType = context.contentType = context.contentType || jsonContentType;\n\n    if (cType && cType.mediaType === jsonContentType.mediaType) {\n        context.dataServiceVersion = maxVersion(dataServiceVersion, \"4.0\");\n        var newdata = formatJsonRequestPayload(data);\n        if (newdata) {\n            return JSON.stringify(newdata);\n        }\n    }\n\n    return undefined;\n}\n\nfunction formatJsonRequestPayload(data) {\n    if (!data) {\n        return data;\n    }\n\n    if (isPrimitive(data)) {\n        return data;\n    }\n\n    if (isArray(data)) {\n        var newArrayData = [];\n        var i, len;\n        for (i = 0, len = data.length; i < len; i++) {\n            newArrayData[i] = formatJsonRequestPayload(data[i]);\n        }\n\n        return newArrayData;\n    }\n\n    var newdata = {};\n    for (var property in data) {\n        if (isJsonSerializableProperty(property)) {\n            newdata[property] = formatJsonRequestPayload(data[property]);\n        }\n    }\n\n    return newdata;\n}\n\n/** JSON replacer function for converting a value to its JSON representation.\n * @param {Object} value - Value to convert.</param>\n * @returns {String} JSON representation of the input value.\n * This method is used during JSON serialization and invoked only by the JSON.stringify function.\n * It should never be called directly.\n */\nfunction jsonReplacer(_, value) {\n    \n\n    if (value && value.__edmType === \"Edm.Time\") {\n        return formatDuration(value);\n    } else {\n        return value;\n    }\n}\n\n\n/** Creates an object containing information for the json payload.\n * @param {String} kind - JSON payload kind, one of the PAYLOADTYPE_XXX constant values.\n * @param {String} typeName - Type name of the JSON payload.\n * @returns {Object} Object with kind and type fields.\n */\nfunction jsonMakePayloadInfo(kind, type) {\n\n    /// TODO docu\n    /// <field name=\"kind\" type=\"String\">Kind of the JSON payload. One of the PAYLOADTYPE_XXX constant values.</field>\n    /// <field name=\"type\" type=\"String\">Data type of the JSON payload.</field>\n\n    return { kind: kind, type: type || null };\n}\n\n/** Creates an object containing information for the context\n * TODO check dou layout\n * @returns {Object} Object with type information\n * @returns {Object.detectedPayloadKind(optional)}  see constants starting with PAYLOADTYPE_\n * @returns {Object.deltaKind(optional)}  deltainformation, one of the following valus DELTATYPE_FEED | DELTATYPE_DELETED_ENTRY | DELTATYPE_LINK | DELTATYPE_DELETED_LINK\n * @returns {Object.typeName(optional)}  name of the type\n * @returns {Object.type(optional)}  object containing type information for entity- and complex-types ( null if a typeName is a primitive)\n*/\nfunction parseContextUriFragment( fragments, model ) {\n    var ret = {};\n\n    if (fragments.indexOf('/') === -1 ) {\n        if (fragments.length === 0) {\n            // Capter 10.1\n            ret.detectedPayloadKind = PAYLOADTYPE_SVCDOC;\n            return ret;\n        } else if (fragments === 'Edm.Null') {\n            // Capter 10.15\n            ret.detectedPayloadKind = PAYLOADTYPE_VALUE;\n            ret.isNullProperty = true;\n            return ret;\n        } else if (fragments === 'Collection($ref)') {\n            // Capter 10.11\n            ret.detectedPayloadKind = PAYLOADTYPE_ENTITY_REF_LINKS;\n            return ret;\n        } else if (fragments === '$ref') {\n            // Capter 10.12\n            ret.detectedPayloadKind = PAYLOADTYPE_ENTITY_REF_LINK;\n            return ret;\n        } else {\n            //TODO check for navigation resource\n        }\n    } \n\n    ret.type = undefined;\n    ret.typeName = undefined;\n\n    var fragmentParts = fragments.split(\"/\");\n    var type;\n    \n    for(var i = 0; i < fragmentParts.length; ++i) {\n        var fragment = fragmentParts[i];\n        if (ret.typeName === undefined) {\n            //preparation\n            if ( fragment.indexOf('(') !== -1 ) {\n                //remove the query function, cut fragment to matching '('\n                var index = fragment.length - 2 ;\n                for ( var rCount = 1; rCount > 0 && index > 0; --index) {\n                    if ( fragment.charAt(index)=='(') {\n                        rCount --;\n                    } else if ( fragment.charAt(index)==')') {\n                        rCount ++;    \n                    }\n                }\n\n                if (index === 0) {\n                    //TODO throw error\n                }\n\n                //remove the projected entity from the fragment; TODO decide if we want to store the projected entity \n                var inPharenthesis = fragment.substring(index+2,fragment.length - 1);\n                fragment = fragment.substring(0,index+1);\n\n                if (utils.startsWith(fragment, 'Collection')) {\n                    ret.detectedPayloadKind = PAYLOADTYPE_COLLECTION;\n                    // Capter 10.14\n                    ret.typeName = inPharenthesis;\n\n                    type = lookupEntityType(ret.typeName, model);\n                    if ( type !== null) {\n                        ret.type = type;\n                        continue;\n                    }\n                    type = lookupComplexType(ret.typeName, model);\n                    if ( type !== null) {\n                        ret.type = type;\n                        continue;\n                    }\n\n                    ret.type = null;//in case of #Collection(Edm.String) only lastTypeName is filled\n                    continue;\n                } else {\n                    // projection: Capter 10.7, 10.8 and 10.9\n                    ret.projection = inPharenthesis;\n                }\n            }\n\n\n            if (jsonIsPrimitiveType(fragment)) {\n                ret.typeName = fragment;\n                ret.type = null;\n                ret.detectedPayloadKind = PAYLOADTYPE_VALUE;\n                continue;\n            }\n\n            var container = lookupDefaultEntityContainer(model);\n\n            //check for entity\n            var entitySet = lookupEntitySet(container.entitySet, fragment);\n            if ( entitySet !== null) {\n                ret.typeName = entitySet.entityType;\n                ret.type = lookupEntityType( ret.typeName, model);\n                ret.name = fragment;\n                ret.detectedPayloadKind = PAYLOADTYPE_FEED;\n                // Capter 10.2\n                continue;\n            }\n\n            //check for singleton\n            var singleton = lookupSingleton(container.singleton, fragment);\n            if ( singleton !== null) {\n                ret.typeName = singleton.entityType;\n                ret.type = lookupEntityType( ret.typeName, model);\n                ret.name = fragment;\n                ret.detectedPayloadKind =  PAYLOADTYPE_ENTRY;\n                // Capter 10.4\n                continue;\n            }\n\n            \n\n            //TODO throw ERROR\n        } else {\n            //check for $entity\n            if (utils.endsWith(fragment, '$entity') && (ret.detectedPayloadKind === PAYLOADTYPE_FEED)) {\n                //TODO ret.name = fragment;\n                ret.detectedPayloadKind = PAYLOADTYPE_ENTRY;\n                // Capter 10.3 and 10.6\n                continue;\n            } \n\n            //check for derived types\n            if (fragment.indexOf('.') !== -1) {\n                // Capter 10.6\n                ret.typeName = fragment;\n                type = lookupEntityType(ret.typeName, model);\n                if ( type !== null) {\n                    ret.type = type;\n                    continue;\n                }\n                type = lookupComplexType(ret.typeName, model);\n                if ( type !== null) {\n                    ret.type = type;\n                    continue;\n                }\n\n                //TODO throw ERROR invalid type\n            }\n\n            //check for property value\n            if ( ret.detectedPayloadKind === PAYLOADTYPE_FEED || ret.detectedPayloadKind === PAYLOADTYPE_ENTRY) {\n                var property = lookupProperty(ret.type.property, fragment);\n                if (property !== null) {\n                    //PAYLOADTYPE_COLLECTION\n                    ret.typeName = property.type;\n                    \n                    \n                    if (utils.startsWith(property.type, 'Collection')) {\n                        ret.detectedPayloadKind = PAYLOADTYPE_COLLECTION;\n                        var tmp12 =  property.type.substring(10+1,property.type.length - 1);\n                        ret.typeName = tmp12;\n                        ret.type = lookupComplexType(tmp12, model);    \n                        ret.detectedPayloadKind = PAYLOADTYPE_COLLECTION;\n                    } else {\n                        ret.type = lookupComplexType(property.type, model);    \n                        ret.detectedPayloadKind = PAYLOADTYPE_PROPERTY;\n                    }    \n\n                    ret.name = fragment;\n                    // Capter 10.15\n                }\n                continue;\n            }\n\n            if (fragment === '$delta') {\n                ret.deltaKind = DELTATYPE_FEED;\n                continue;\n            } else if (utils.endsWith(fragment, '/$deletedEntity')) {\n                ret.deltaKind = DELTATYPE_DELETED_ENTRY;\n                continue;\n            } else if (utils.endsWith(fragment, '/$link')) {\n                ret.deltaKind = DELTATYPE_LINK;\n                continue;\n            } else if (utils.endsWith(fragment, '/$deletedLink')) {\n                ret.deltaKind = DELTATYPE_DELETED_LINK;\n                continue;\n            }\n            //TODO throw ERROr\n        }\n    }\n\n    return ret;\n}\n\n/** Infers the information describing the JSON payload from its metadata annotation, structure, and data model.\n * @param {Object} data - Json response payload object.\n * @param {Object} model - Object describing an OData conceptual schema.\n * If the arguments passed to the function don't convey enough information about the payload to determine without doubt that the payload is a feed then it\n * will try to use the payload object structure instead.  If the payload looks like a feed (has value property that is an array or non-primitive values) then\n * the function will report its kind as PAYLOADTYPE_FEED unless the inferFeedAsComplexType flag is set to true. This flag comes from the user request\n * and allows the user to control how the library behaves with an ambigous JSON payload.\n * @return Object with kind and type fields. Null if there is no metadata annotation or the payload info cannot be obtained..\n*/\nfunction createPayloadInfo(data, model) {\n    \n\n    var metadataUri = data[contextUrlAnnotation];\n    if (!metadataUri || typeof metadataUri !== \"string\") {\n        return null;\n    }\n\n    var fragmentStart = metadataUri.lastIndexOf(\"#\");\n    if (fragmentStart === -1) {\n        return jsonMakePayloadInfo(PAYLOADTYPE_SVCDOC);\n    }\n\n    var fragment = metadataUri.substring(fragmentStart + 1);\n    return parseContextUriFragment(fragment,model);\n}\n\n/** Processe a JSON response payload with metadata-minimal\n * @param {Object} data - Json response payload object\n * @param {Object} model - Object describing an OData conceptual schema\n * @param {Boolean} recognizeDates - Flag indicating whether datetime literal strings should be converted to JavaScript Date objects.\n * @returns {Object} Object in the library's representation.\n */\nfunction readPayloadMinimal(data, model, recognizeDates) {\n\n    if (!assigned(model) || isArray(model)) {\n        return data;\n    }\n\n    var baseURI = data[contextUrlAnnotation];\n    var payloadInfo = createPayloadInfo(data, model);\n\n    switch (payloadInfo.detectedPayloadKind) {\n        case PAYLOADTYPE_VALUE:\n            return readPayloadMinimalProperty(data, model, payloadInfo, baseURI, recognizeDates);\n        case PAYLOADTYPE_FEED:\n            return readPayloadMinimalFeed(data, model, payloadInfo, baseURI, recognizeDates);\n        case PAYLOADTYPE_ENTRY:\n            return readPayloadMinimalEntry(data, model, payloadInfo, baseURI, recognizeDates);\n        case PAYLOADTYPE_COLLECTION:\n            return readPayloadMinimalCollection(data, model, payloadInfo, baseURI, recognizeDates);\n        case PAYLOADTYPE_PROPERTY:\n            return readPayloadMinimalProperty(data, model, payloadInfo, baseURI, recognizeDates);\n        case PAYLOADTYPE_SVCDOC:\n            return data;\n        case PAYLOADTYPE_LINKS:\n            return data;\n    }\n\n    return data;\n}\n\n/** Gets the key of an entry.\n * @param {Object} data - JSON entry.\n *\n * @returns {string} Entry instance key.\n */\nfunction jsonGetEntryKey(data, entityModel) {\n\n    var entityInstanceKey;\n    var entityKeys = entityModel.key[0].propertyRef;\n    var type;\n    entityInstanceKey = \"(\";\n    if (entityKeys.length == 1) {\n        type = lookupProperty(entityModel.property, entityKeys[0].name).type;\n        entityInstanceKey += formatLiteral(data[entityKeys[0].name], type);\n    } else {\n        var first = true;\n        for (var i = 0; i < entityKeys.length; i++) {\n            if (!first) {\n                entityInstanceKey += \",\";\n            } else {\n                first = false;\n            }\n            type = lookupProperty(entityModel.property, entityKeys[i].name).type;\n            entityInstanceKey += entityKeys[i].name + \"=\" + formatLiteral(data[entityKeys[i].name], type);\n        }\n    }\n    entityInstanceKey += \")\";\n    return entityInstanceKey;\n}\n\nfunction readPayloadMinimalProperty(data, model, collectionInfo, baseURI, recognizeDates) {\n    if (collectionInfo.type !== null) {\n        readPayloadMinimalObject(data, collectionInfo, baseURI, model, recognizeDates);\n    } else {\n        addTypeNoEdm(data,'value', collectionInfo.typeName);\n        //data['value@odata.type'] = '#'+collectionInfo.typeName;\n    }\n    return data;\n}\n\nfunction readPayloadMinimalCollection(data, model, collectionInfo, baseURI, recognizeDates) {\n    //data['@odata.type'] = '#Collection('+collectionInfo.typeName + ')';\n    addTypeColNoEdm(data,'', collectionInfo.typeName);\n\n    if (collectionInfo.type !== null) {\n        var entries = [];\n\n        var items = data.value;\n        for (i = 0, len = items.length; i < len; i++) {\n            var item = items[i];\n            if ( defined(item['@odata.type'])) { // in case of mixed collections\n                var typeName = item['@odata.type'].substring(1);\n                var type = lookupEntityType( typeName, model);\n                var entryInfo = {\n                    contentTypeOdata : collectionInfo.contentTypeOdata,\n                    detectedPayloadKind : collectionInfo.detectedPayloadKind,\n                    name : collectionInfo.name,\n                    type : type,\n                    typeName : typeName\n                };\n\n                entry = readPayloadMinimalObject(item, entryInfo, baseURI, model, recognizeDates);\n            } else {\n                entry = readPayloadMinimalObject(item, collectionInfo, baseURI, model, recognizeDates);\n            }\n            \n            entries.push(entry);\n        }\n        data.value = entries;\n    }\n    return data;\n}\n\nfunction readPayloadMinimalFeed(data, model, feedInfo, baseURI, recognizeDates) {\n    var entries = [];\n    var items = data.value;\n    for (i = 0, len = items.length; i < len; i++) {\n        var item = items[i];\n        if ( defined(item['@odata.type'])) { // in case of mixed feeds\n            var typeName = item['@odata.type'].substring(1);\n            var type = lookupEntityType( typeName, model);\n            var entryInfo = {\n                contentTypeOdata : feedInfo.contentTypeOdata,\n                detectedPayloadKind : feedInfo.detectedPayloadKind,\n                name : feedInfo.name,\n                type : type,\n                typeName : typeName\n            };\n\n            entry = readPayloadMinimalObject(item, entryInfo, baseURI, model, recognizeDates);\n        } else {\n            entry = readPayloadMinimalObject(item, feedInfo, baseURI, model, recognizeDates);\n        }\n        \n        entries.push(entry);\n    }\n    data.value = entries;\n    return data;\n}\n\nfunction readPayloadMinimalEntry(data, model, entryInfo, baseURI, recognizeDates) {\n    return readPayloadMinimalObject(data, entryInfo, baseURI, model, recognizeDates);\n}\n\n/** Formats a value according to Uri literal format\n * @param value - Value to be formatted.\n * @param type - Edm type of the value\n * @returns {string} Value after formatting\n */\nfunction formatLiteral(value, type) {\n\n    value = \"\" + formatRowLiteral(value, type);\n    value = encodeURIComponent(value.replace(\"'\", \"''\"));\n    switch ((type)) {\n        case \"Edm.Binary\":\n            return \"X'\" + value + \"'\";\n        case \"Edm.DateTime\":\n            return \"datetime\" + \"'\" + value + \"'\";\n        case \"Edm.DateTimeOffset\":\n            return \"datetimeoffset\" + \"'\" + value + \"'\";\n        case \"Edm.Decimal\":\n            return value + \"M\";\n        case \"Edm.Guid\":\n            return \"guid\" + \"'\" + value + \"'\";\n        case \"Edm.Int64\":\n            return value + \"L\";\n        case \"Edm.Float\":\n            return value + \"f\";\n        case \"Edm.Double\":\n            return value + \"D\";\n        case \"Edm.Geography\":\n            return \"geography\" + \"'\" + value + \"'\";\n        case \"Edm.Geometry\":\n            return \"geometry\" + \"'\" + value + \"'\";\n        case \"Edm.Time\":\n            return \"time\" + \"'\" + value + \"'\";\n        case \"Edm.String\":\n            return \"'\" + value + \"'\";\n        default:\n            return value;\n    }\n}\n\nfunction formatRowLiteral(value, type) {\n    switch (type) {\n        case \"Edm.Binary\":\n            return convertByteArrayToHexString(value);\n        default:\n            return value;\n    }\n}\n\nfunction convertDates(data, propertyName,type) {\n    if (type === 'Edm.Date') {\n        data[propertyName] = oDataUtils.parseDate(data[propertyName], true);\n    } else if (type === 'Edm.DateTimeOffset') {\n        data[propertyName] = oDataUtils.parseDateTimeOffset(data[propertyName], true);\n    } else if (type === 'Edm.Duration') {\n        data[propertyName] = oDataUtils.parseDuration(data[propertyName], true);\n    } else if (type === 'Edm.Time') {\n        data[propertyName] = oDataUtils.parseTime(data[propertyName], true);\n    }\n}\n\nfunction convertDatesNoEdm(data, propertyName,type) {\n    if (type === 'Date') {\n        data[propertyName] = oDataUtils.parseDate(data[propertyName], true);\n    } else if (type === 'DateTimeOffset') {\n        data[propertyName] = oDataUtils.parseDateTimeOffset(data[propertyName], true);\n    } else if (type === 'Duration') {\n        data[propertyName] = oDataUtils.parseDuration(data[propertyName], true);\n    } else if (type === 'Time') {\n        data[propertyName] = oDataUtils.parseTime(data[propertyName], true);\n    }\n}\n\nfunction checkProperties(data, objectInfoType, baseURI, model, recognizeDates) {\n    for (var name in data) {\n        if (name.indexOf(\"@\") === -1) {\n            var curType = objectInfoType;\n            var propertyValue = data[name];\n            var property = lookupProperty(curType.property,name); //TODO SK add check for parent type\n\n            while (( property === null) && (curType.baseType !== undefined)) {\n                curType = lookupEntityType(curType.baseType, model);\n                property = lookupProperty(curType.property,name);\n            }\n            \n            if ( isArray(propertyValue)) {\n                //data[name+'@odata.type'] = '#' + property.type;\n                if (isCollectionType(property.type)) {\n                    addTypeColNoEdm(data,name,property.type.substring(11,property.type.length-1));\n                } else {\n                    addTypeNoEdm(data,name,property.type);\n                }\n\n\n                for ( var i = 0; i < propertyValue.length; i++) {\n                    readPayloadMinimalComplexObject(propertyValue[i], property, baseURI, model, recognizeDates);\n                }\n            } else if (isObject(propertyValue) && (propertyValue !== null)) {\n                readPayloadMinimalComplexObject(propertyValue, property, baseURI, model, recognizeDates);\n            } else {\n                //data[name+'@odata.type'] = '#' + property.type;\n                addTypeNoEdm(data,name,property.type);\n                if (recognizeDates) {\n                    convertDates(data, name, property.type);\n                }\n            }\n        }\n    }\n}\n\nfunction readPayloadMinimalComplexObject(data, property, baseURI, model, recognizeDates) {\n    var type = property.type;\n    if (isCollectionType(property.type)) {\n        type =property.type.substring(11,property.type.length-1);\n    }\n\n    //data['@odata.type'] = '#'+type;\n    addType(data,'',property.type);\n\n\n    var propertyType = lookupComplexType(type, model);\n    if (propertyType === null)  {\n        return; //TODO check what to do if the type is not known e.g. type #GeometryCollection\n    }\n  \n    checkProperties(data, propertyType, baseURI, model, recognizeDates);\n}\n\nfunction readPayloadMinimalObject(data, objectInfo, baseURI, model, recognizeDates) {\n    //data['@odata.type'] = '#'+objectInfo.typeName;\n    addType(data,'',objectInfo.typeName);\n\n    var keyType = objectInfo.type;\n    while ((defined(keyType)) && ( keyType.key === undefined) && (keyType.baseType !== undefined)) {\n        keyType = lookupEntityType(keyType.baseType, model);\n    }\n\n    //if ((keyType !== undefined) && (keyType.key !== undefined)) { \n    if (keyType.key !== undefined) { \n        var lastIdSegment = objectInfo.name + jsonGetEntryKey(data, keyType);\n        data['@odata.id'] = baseURI.substring(0, baseURI.lastIndexOf(\"$metadata\")) + lastIdSegment;\n        data['@odata.editLink'] = lastIdSegment;\n    }\n\n    var serviceURI = baseURI.substring(0, baseURI.lastIndexOf(\"$metadata\"));\n    //json ComputeUrisIfMissing(data, entryInfo, actualType, serviceURI, dataModel, baseTypeModel);\n\n    checkProperties(data, objectInfo.type, baseURI, model, recognizeDates);\n    \n    return data;\n}\n\nvar jsonSerializableMetadata = [\"@odata.id\", \"@odata.type\"];\n\nfunction isJsonSerializableProperty(property) {\n    if (!property) {\n        return false;\n    }\n\n    if (property.indexOf(\"@odata.\") == -1) {\n        return true;\n    } \n\n    var i, len;\n    for (i = 0, len = jsonSerializableMetadata.length; i < len; i++) {\n        var name = jsonSerializableMetadata[i];\n        if (property.indexOf(name) != -1) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n/** Determines whether a type name is a primitive type in a JSON payload.\n * @param {String} typeName - Type name to test.\n * @returns {Boolean} True if the type name an EDM primitive type or an OData spatial type; false otherwise.\n */\nfunction jsonIsPrimitiveType(typeName) {\n\n    return isPrimitiveEdmType(typeName) || isGeographyEdmType(typeName) || isGeometryEdmType(typeName);\n}\n\n\nvar jsonHandler = oDataHandler.handler(jsonParser, jsonSerializer, jsonMediaType, MAX_DATA_SERVICE_VERSION);\njsonHandler.recognizeDates = false;\n\n\n\nexports.createPayloadInfo = createPayloadInfo;\nexports.jsonHandler = jsonHandler;\nexports.jsonParser = jsonParser;\nexports.jsonSerializer = jsonSerializer;\nexports.parseJsonDateString = parseJsonDateString;\n},{\"./../odatajs.js\":11,\"./handler.js\":6,\"./utils.js\":10}],8:[function(require,module,exports){\n\n\n/** @module odata/metadata */\n\nvar utils    = require('./../odatajs.js').utils;\nvar oDSxml    = require('./../odatajs.js').xml;\nvar odataHandler    = require('./handler.js');\n\n\n\n// imports \nvar contains = utils.contains;\nvar normalizeURI = utils.normalizeURI;\nvar xmlAttributes = oDSxml.xmlAttributes;\nvar xmlChildElements = oDSxml.xmlChildElements;\nvar xmlFirstChildElement = oDSxml.xmlFirstChildElement;\nvar xmlInnerText = oDSxml.xmlInnerText;\nvar xmlLocalName = oDSxml.xmlLocalName;\nvar xmlNamespaceURI = oDSxml.xmlNamespaceURI;\nvar xmlNS = oDSxml.xmlNS;\nvar xmlnsNS = oDSxml.xmlnsNS;\nvar xmlParse = oDSxml.xmlParse;\n\nvar ado = oDSxml.http + \"docs.oasis-open.org/odata/\";      // http://docs.oasis-open.org/odata/\nvar adoDs = ado + \"ns\";                             // http://docs.oasis-open.org/odata/ns\nvar edmxNs = adoDs + \"/edmx\";                       // http://docs.oasis-open.org/odata/ns/edmx\nvar edmNs1 = adoDs + \"/edm\";                        // http://docs.oasis-open.org/odata/ns/edm\nvar odataMetaXmlNs = adoDs + \"/metadata\";           // http://docs.oasis-open.org/odata/ns/metadata\nvar MAX_DATA_SERVICE_VERSION = odataHandler.MAX_DATA_SERVICE_VERSION;\n\nvar xmlMediaType = \"application/xml\";\n\n/** Creates an object that describes an element in an schema.\n * @param {Array} attributes - List containing the names of the attributes allowed for this element.\n * @param {Array} elements - List containing the names of the child elements allowed for this element.\n * @param {Boolean} text - Flag indicating if the element's text value is of interest or not.\n * @param {String} ns - Namespace to which the element belongs to.\n * If a child element name ends with * then it is understood by the schema that that child element can appear 0 or more times.\n * @returns {Object} Object with attributes, elements, text, and ns fields.\n */\nfunction schemaElement(attributes, elements, text, ns) {\n\n    return {\n        attributes: attributes,\n        elements: elements,\n        text: text || false,\n        ns: ns\n    };\n}\n\n// It's assumed that all elements may have Documentation children and Annotation elements.\n// See http://docs.oasis-open.org/odata/odata/v4.0/cs01/part3-csdl/odata-v4.0-cs01-part3-csdl.html for a CSDL reference.\nvar schema = {\n    elements: {\n        Action: schemaElement(\n        /*attributes*/[\"Name\", \"IsBound\", \"EntitySetPath\"],\n        /*elements*/[\"ReturnType\", \"Parameter*\", \"Annotation*\"]\n        ),\n        ActionImport: schemaElement(\n        /*attributes*/[\"Name\", \"Action\", \"EntitySet\", \"Annotation*\"]\n        ),\n        Annotation: schemaElement(\n        /*attributes*/[\"Term\", \"Qualifier\", \"Binary\", \"Bool\", \"Date\", \"DateTimeOffset\", \"Decimal\", \"Duration\", \"EnumMember\", \"Float\", \"Guid\", \"Int\", \"String\", \"TimeOfDay\", \"AnnotationPath\", \"NavigationPropertyPath\", \"Path\", \"PropertyPath\", \"UrlRef\"],\n        /*elements*/[\"Binary*\", \"Bool*\", \"Date*\", \"DateTimeOffset*\", \"Decimal*\", \"Duration*\", \"EnumMember*\", \"Float*\", \"Guid*\", \"Int*\", \"String*\", \"TimeOfDay*\", \"And*\", \"Or*\", \"Not*\", \"Eq*\", \"Ne*\", \"Gt*\", \"Ge*\", \"Lt*\", \"Le*\", \"AnnotationPath*\", \"Apply*\", \"Cast*\", \"Collection*\", \"If*\", \"IsOf*\", \"LabeledElement*\", \"LabeledElementReference*\", \"Null*\", \"NavigationPropertyPath*\", \"Path*\", \"PropertyPath*\", \"Record*\", \"UrlRef*\", \"Annotation*\"]\n        ),\n        AnnotationPath: schemaElement(\n        /*attributes*/null,\n        /*elements*/null,\n        /*text*/true\n        ),\n        Annotations: schemaElement(\n        /*attributes*/[\"Target\", \"Qualifier\"],\n        /*elements*/[\"Annotation*\"]\n        ),\n        Apply: schemaElement(\n        /*attributes*/[\"Function\"],\n        /*elements*/[\"String*\", \"Path*\", \"LabeledElement*\", \"Annotation*\"]\n        ),\n        And: schemaElement(\n        /*attributes*/null,\n        /*elements*/null,\n        /*text*/true\n        ),\n        Or: schemaElement(\n        /*attributes*/null,\n        /*elements*/null,\n        /*text*/true\n        ),\n        Not: schemaElement(\n        /*attributes*/null,\n        /*elements*/null,\n        /*text*/true\n        ),\n        Eq: schemaElement(\n        /*attributes*/null,\n        /*elements*/null,\n        /*text*/true\n        ),\n        Ne: schemaElement(\n        /*attributes*/null,\n        /*elements*/null,\n        /*text*/true\n        ),\n        Gt: schemaElement(\n        /*attributes*/null,\n        /*elements*/null,\n        /*text*/true\n        ),\n        Ge: schemaElement(\n        /*attributes*/null,\n        /*elements*/null,\n        /*text*/true\n        ),\n        Lt: schemaElement(\n        /*attributes*/null,\n        /*elements*/null,\n        /*text*/true\n        ),\n        Le: schemaElement(\n        /*attributes*/null,\n        /*elements*/null,\n        /*text*/true\n        ),\n        Binary: schemaElement(\n        /*attributes*/null,\n        /*elements*/null,\n        /*text*/true\n        ),\n        Bool: schemaElement(\n        /*attributes*/null,\n        /*elements*/null,\n        /*text*/true\n        ),\n        Cast: schemaElement(\n        /*attributes*/[\"Type\"],\n        /*elements*/[\"Path*\", \"Annotation*\"]\n        ),\n        Collection: schemaElement(\n        /*attributes*/null,\n        /*elements*/[\"Binary*\", \"Bool*\", \"Date*\", \"DateTimeOffset*\", \"Decimal*\", \"Duration*\", \"EnumMember*\", \"Float*\", \"Guid*\", \"Int*\", \"String*\", \"TimeOfDay*\", \"And*\", \"Or*\", \"Not*\", \"Eq*\", \"Ne*\", \"Gt*\", \"Ge*\", \"Lt*\", \"Le*\", \"AnnotationPath*\", \"Apply*\", \"Cast*\", \"Collection*\", \"If*\", \"IsOf*\", \"LabeledElement*\", \"LabeledElementReference*\", \"Null*\", \"NavigationPropertyPath*\", \"Path*\", \"PropertyPath*\", \"Record*\", \"UrlRef*\"]\n        ),\n        ComplexType: schemaElement(\n        /*attributes*/[\"Name\", \"BaseType\", \"Abstract\", \"OpenType\"],\n        /*elements*/[\"Property*\", \"NavigationProperty*\", \"Annotation*\"]\n        ),\n        Date: schemaElement(\n        /*attributes*/null,\n        /*elements*/null,\n        /*text*/true\n        ),\n        DateTimeOffset: schemaElement(\n        /*attributes*/null,\n        /*elements*/null,\n        /*text*/true\n        ),\n        Decimal: schemaElement(\n        /*attributes*/null,\n        /*elements*/null,\n        /*text*/true\n        ),\n        Duration: schemaElement(\n        /*attributes*/null,\n        /*elements*/null,\n        /*text*/true\n        ),\n        EntityContainer: schemaElement(\n        /*attributes*/[\"Name\", \"Extends\"],\n        /*elements*/[\"EntitySet*\", \"Singleton*\", \"ActionImport*\", \"FunctionImport*\", \"Annotation*\"]\n        ),\n        EntitySet: schemaElement(\n        /*attributes*/[\"Name\", \"EntityType\", \"IncludeInServiceDocument\"],\n        /*elements*/[\"NavigationPropertyBinding*\", \"Annotation*\"]\n        ),\n        EntityType: schemaElement(\n        /*attributes*/[\"Name\", \"BaseType\", \"Abstract\", \"OpenType\", \"HasStream\"],\n        /*elements*/[\"Key*\", \"Property*\", \"NavigationProperty*\", \"Annotation*\"]\n        ),\n        EnumMember: schemaElement(\n        /*attributes*/null,\n        /*elements*/null,\n        /*text*/true\n        ),\n        EnumType: schemaElement(\n        /*attributes*/[\"Name\", \"UnderlyingType\", \"IsFlags\"],\n        /*elements*/[\"Member*\"]\n        ),\n        Float: schemaElement(\n        /*attributes*/null,\n        /*elements*/null,\n        /*text*/true\n        ),\n        Function: schemaElement(\n        /*attributes*/[\"Name\", \"IsBound\", \"IsComposable\", \"EntitySetPath\"],\n        /*elements*/[\"ReturnType\", \"Parameter*\", \"Annotation*\"]\n        ),\n        FunctionImport: schemaElement(\n        /*attributes*/[\"Name\", \"Function\", \"EntitySet\", \"IncludeInServiceDocument\", \"Annotation*\"]\n        ),\n        Guid: schemaElement(\n        /*attributes*/null,\n        /*elements*/null,\n        /*text*/true\n        ),\n        If: schemaElement(\n        /*attributes*/null,\n        /*elements*/[\"Path*\", \"String*\", \"Annotation*\"]\n        ),\n        Int: schemaElement(\n        /*attributes*/null,\n        /*elements*/null,\n        /*text*/true\n        ),\n        IsOf: schemaElement(\n        /*attributes*/[\"Type\", \"MaxLength\", \"Precision\", \"Scale\", \"Unicode\", \"SRID\", \"DefaultValue\", \"Annotation*\"],\n        /*elements*/[\"Path*\"]\n        ),\n        Key: schemaElement(\n        /*attributes*/null,\n        /*elements*/[\"PropertyRef*\"]\n        ),\n        LabeledElement: schemaElement(\n        /*attributes*/[\"Name\"],\n        /*elements*/[\"Binary*\", \"Bool*\", \"Date*\", \"DateTimeOffset*\", \"Decimal*\", \"Duration*\", \"EnumMember*\", \"Float*\", \"Guid*\", \"Int*\", \"String*\", \"TimeOfDay*\", \"And*\", \"Or*\", \"Not*\", \"Eq*\", \"Ne*\", \"Gt*\", \"Ge*\", \"Lt*\", \"Le*\", \"AnnotationPath*\", \"Apply*\", \"Cast*\", \"Collection*\", \"If*\", \"IsOf*\", \"LabeledElement*\", \"LabeledElementReference*\", \"Null*\", \"NavigationPropertyPath*\", \"Path*\", \"PropertyPath*\", \"Record*\", \"UrlRef*\", \"Annotation*\"]\n        ),\n        LabeledElementReference: schemaElement(\n        /*attributes*/[\"Term\"],\n        /*elements*/[\"Binary*\", \"Bool*\", \"Date*\", \"DateTimeOffset*\", \"Decimal*\", \"Duration*\", \"EnumMember*\", \"Float*\", \"Guid*\", \"Int*\", \"String*\", \"TimeOfDay*\", \"And*\", \"Or*\", \"Not*\", \"Eq*\", \"Ne*\", \"Gt*\", \"Ge*\", \"Lt*\", \"Le*\", \"AnnotationPath*\", \"Apply*\", \"Cast*\", \"Collection*\", \"If*\", \"IsOf*\", \"LabeledElement*\", \"LabeledElementReference*\", \"Null*\", \"NavigationPropertyPath*\", \"Path*\", \"PropertyPath*\", \"Record*\", \"UrlRef*\"]\n        ),\n        Member: schemaElement(\n        /*attributes*/[\"Name\", \"Value\"],\n        /*element*/[\"Annotation*\"]\n        ),\n        NavigationProperty: schemaElement(\n        /*attributes*/[\"Name\", \"Type\", \"Nullable\", \"Partner\", \"ContainsTarget\"],\n        /*elements*/[\"ReferentialConstraint*\", \"OnDelete*\", \"Annotation*\"]\n        ),\n        NavigationPropertyBinding: schemaElement(\n        /*attributes*/[\"Path\", \"Target\"]\n        ),\n        NavigationPropertyPath: schemaElement(\n        /*attributes*/null,\n        /*elements*/null,\n        /*text*/true\n        ),\n        Null: schemaElement(\n        /*attributes*/null,\n        /*elements*/[\"Annotation*\"]\n        ),\n        OnDelete: schemaElement(\n        /*attributes*/[\"Action\"],\n        /*elements*/[\"Annotation*\"]\n        ),\n        Path: schemaElement(\n        /*attributes*/null,\n        /*elements*/null,\n        /*text*/true\n        ),\n        Parameter: schemaElement(\n        /*attributes*/[\"Name\", \"Type\", \"Nullable\", \"MaxLength\", \"Precision\", \"Scale\", \"SRID\"],\n        /*elements*/[\"Annotation*\"]\n        ),\n        Property: schemaElement(\n        /*attributes*/[\"Name\", \"Type\", \"Nullable\", \"MaxLength\", \"Precision\", \"Scale\", \"Unicode\", \"SRID\", \"DefaultValue\"],\n        /*elements*/[\"Annotation*\"]\n        ),\n        PropertyPath: schemaElement(\n        /*attributes*/null,\n        /*elements*/null,\n        /*text*/true\n        ),\n        PropertyRef: schemaElement(\n        /*attributes*/[\"Name\", \"Alias\"]\n        ),\n        PropertyValue: schemaElement(\n        /*attributes*/[\"Property\", \"Path\"],\n        /*elements*/[\"Binary*\", \"Bool*\", \"Date*\", \"DateTimeOffset*\", \"Decimal*\", \"Duration*\", \"EnumMember*\", \"Float*\", \"Guid*\", \"Int*\", \"String*\", \"TimeOfDay*\", \"And*\", \"Or*\", \"Not*\", \"Eq*\", \"Ne*\", \"Gt*\", \"Ge*\", \"Lt*\", \"Le*\", \"AnnotationPath*\", \"Apply*\", \"Cast*\", \"Collection*\", \"If*\", \"IsOf*\", \"LabeledElement*\", \"LabeledElementReference*\", \"Null*\", \"NavigationPropertyPath*\", \"Path*\", \"PropertyPath*\", \"Record*\", \"UrlRef*\", \"Annotation*\"]\n        ),\n        Record: schemaElement(\n        /*attributes*/null,\n        /*Elements*/[\"PropertyValue*\", \"Property*\", \"Annotation*\"]\n        ),\n        ReferentialConstraint: schemaElement(\n        /*attributes*/[\"Property\", \"ReferencedProperty\", \"Annotation*\"]\n        ),\n        ReturnType: schemaElement(\n        /*attributes*/[\"Type\", \"Nullable\", \"MaxLength\", \"Precision\", \"Scale\", \"SRID\"]\n        ),\n        String: schemaElement(\n        /*attributes*/null,\n        /*elements*/null,\n        /*text*/true\n        ),\n        Schema: schemaElement(\n        /*attributes*/[\"Namespace\", \"Alias\"],\n        /*elements*/[\"Action*\", \"Annotations*\", \"Annotation*\", \"ComplexType*\", \"EntityContainer\", \"EntityType*\", \"EnumType*\", \"Function*\", \"Term*\", \"TypeDefinition*\", \"Annotation*\"]\n        ),\n        Singleton: schemaElement(\n        /*attributes*/[\"Name\", \"Type\"],\n        /*elements*/[\"NavigationPropertyBinding*\", \"Annotation*\"]\n        ),\n        Term: schemaElement(\n        /*attributes*/[\"Name\", \"Type\", \"BaseTerm\", \"DefaultValue \", \"AppliesTo\", \"Nullable\", \"MaxLength\", \"Precision\", \"Scale\", \"SRID\"],\n        /*elements*/[\"Annotation*\"]\n        ),\n        TimeOfDay: schemaElement(\n        /*attributes*/null,\n        /*elements*/null,\n        /*text*/true\n        ),\n        TypeDefinition: schemaElement(\n        /*attributes*/[\"Name\", \"UnderlyingType\", \"MaxLength\", \"Unicode\", \"Precision\", \"Scale\", \"SRID\"],\n        /*elements*/[\"Annotation*\"]\n        ),\n        UrlRef: schemaElement(\n        /*attributes*/null,\n        /*elements*/[\"Binary*\", \"Bool*\", \"Date*\", \"DateTimeOffset*\", \"Decimal*\", \"Duration*\", \"EnumMember*\", \"Float*\", \"Guid*\", \"Int*\", \"String*\", \"TimeOfDay*\", \"And*\", \"Or*\", \"Not*\", \"Eq*\", \"Ne*\", \"Gt*\", \"Ge*\", \"Lt*\", \"Le*\", \"AnnotationPath*\", \"Apply*\", \"Cast*\", \"Collection*\", \"If*\", \"IsOf*\", \"LabeledElement*\", \"LabeledElementReference*\", \"Null*\", \"NavigationPropertyPath*\", \"Path*\", \"PropertyPath*\", \"Record*\", \"UrlRef*\", \"Annotation*\"]\n        ),\n\n        // See http://msdn.microsoft.com/en-us/library/dd541238(v=prot.10) for an EDMX reference.\n        Edmx: schemaElement(\n        /*attributes*/[\"Version\"],\n        /*elements*/[\"DataServices\", \"Reference*\"],\n        /*text*/false,\n        /*ns*/edmxNs\n        ),\n        DataServices: schemaElement(\n        /*attributes*/[\"m:MaxDataServiceVersion\", \"m:DataServiceVersion\"],\n        /*elements*/[\"Schema*\"],\n        /*text*/false,\n        /*ns*/edmxNs\n        ),\n        Reference: schemaElement(\n        /*attributes*/[\"Uri\"],\n        /*elements*/[\"Include*\", \"IncludeAnnotations*\", \"Annotation*\"]\n        ),\n        Include: schemaElement(\n        /*attributes*/[\"Namespace\", \"Alias\"]\n        ),\n        IncludeAnnotations: schemaElement(\n        /*attributes*/[\"TermNamespace\", \"Qualifier\", \"TargetNamespace\"]\n        )\n    }\n};\n\n\n/** Converts a Pascal-case identifier into a camel-case identifier.\n * @param {String} text - Text to convert.\n * @returns {String} Converted text.\n * If the text starts with multiple uppercase characters, it is left as-is.</remarks>\n */\nfunction scriptCase(text) {\n\n    if (!text) {\n        return text;\n    }\n\n    if (text.length > 1) {\n        var firstTwo = text.substr(0, 2);\n        if (firstTwo === firstTwo.toUpperCase()) {\n            return text;\n        }\n\n        return text.charAt(0).toLowerCase() + text.substr(1);\n    }\n\n    return text.charAt(0).toLowerCase();\n}\n\n/** Gets the schema node for the specified element.\n * @param {Object} parentSchema - Schema of the parent XML node of 'element'.\n * @param candidateName - XML element name to consider.\n * @returns {Object} The schema that describes the specified element; null if not found.\n */\nfunction getChildSchema(parentSchema, candidateName) {\n\n    var elements = parentSchema.elements;\n    if (!elements) {\n        return null;\n    }\n\n    var i, len;\n    for (i = 0, len = elements.length; i < len; i++) {\n        var elementName = elements[i];\n        var multipleElements = false;\n        if (elementName.charAt(elementName.length - 1) === \"*\") {\n            multipleElements = true;\n            elementName = elementName.substr(0, elementName.length - 1);\n        }\n\n        if (candidateName === elementName) {\n            var propertyName = scriptCase(elementName);\n            return { isArray: multipleElements, propertyName: propertyName };\n        }\n    }\n\n    return null;\n}\n\n/** Checks whether the specifies namespace URI is one of the known CSDL namespace URIs.\n * @param {String} nsURI - Namespace URI to check.\n * @returns {Boolean} true if nsURI is a known CSDL namespace; false otherwise.\n */\nfunction isEdmNamespace(nsURI) {\n\n    return nsURI === edmNs1;\n}\n\n/** Parses a CSDL document.\n * @param element - DOM element to parse.\n * @returns {Object} An object describing the parsed element.\n */\nfunction parseConceptualModelElement(element) {\n\n    var localName = xmlLocalName(element);\n    var nsURI = xmlNamespaceURI(element);\n    var elementSchema = schema.elements[localName];\n    if (!elementSchema) {\n        return null;\n    }\n\n    if (elementSchema.ns) {\n        if (nsURI !== elementSchema.ns) {\n            return null;\n        }\n    } else if (!isEdmNamespace(nsURI)) {\n        return null;\n    }\n\n    var item = {};\n    var attributes = elementSchema.attributes || [];\n    xmlAttributes(element, function (attribute) {\n\n        var localName = xmlLocalName(attribute);\n        var nsURI = xmlNamespaceURI(attribute);\n        var value = attribute.value;\n\n        // Don't do anything with xmlns attributes.\n        if (nsURI === xmlnsNS) {\n            return;\n        }\n\n        // Currently, only m: for metadata is supported as a prefix in the internal schema table,\n        // un-prefixed element names imply one a CSDL element.\n        var schemaName = null;\n        var handled = false;\n        if (isEdmNamespace(nsURI) || nsURI === null) {\n            schemaName = \"\";\n        } else if (nsURI === odataMetaXmlNs) {\n            schemaName = \"m:\";\n        }\n\n        if (schemaName !== null) {\n            schemaName += localName;\n\n            if (contains(attributes, schemaName)) {\n                item[scriptCase(localName)] = value;\n            }\n        }\n\n    });\n\n    xmlChildElements(element, function (child) {\n        var localName = xmlLocalName(child);\n        var childSchema = getChildSchema(elementSchema, localName);\n        if (childSchema) {\n            if (childSchema.isArray) {\n                var arr = item[childSchema.propertyName];\n                if (!arr) {\n                    arr = [];\n                    item[childSchema.propertyName] = arr;\n                }\n                arr.push(parseConceptualModelElement(child));\n            } else {\n                item[childSchema.propertyName] = parseConceptualModelElement(child);\n            }\n        } \n    });\n\n    if (elementSchema.text) {\n        item.text = xmlInnerText(element);\n    }\n\n    return item;\n}\n\n/** Parses a metadata document.\n * @param handler - This handler.\n * @param {String} text - Metadata text.\n * @returns An object representation of the conceptual model.</returns>\n */\nfunction metadataParser(handler, text) {\n\n    var doc = xmlParse(text);\n    var root = xmlFirstChildElement(doc);\n    return parseConceptualModelElement(root) || undefined;\n}\n\n\n\nexports.metadataHandler = odataHandler.handler(metadataParser, null, xmlMediaType, MAX_DATA_SERVICE_VERSION);\n\nexports.schema = schema;\nexports.scriptCase = scriptCase;\nexports.getChildSchema = getChildSchema;\nexports.parseConceptualModelElement = parseConceptualModelElement;\nexports.metadataParser = metadataParser;\n},{\"./../odatajs.js\":11,\"./handler.js\":6}],9:[function(require,module,exports){\n\n\n/** @module odata/net */\n\n\n\nvar utils    = require('./../odatajs.js').utils;\n// Imports.\n\nvar defined = utils.defined;\nvar delay = utils.delay;\n\nvar ticks = 0;\n\n/* Checks whether the specified request can be satisfied with a JSONP request.\n * @param request - Request object to check.\n * @returns {Boolean} true if the request can be satisfied; false otherwise.\n\n * Requests that 'degrade' without changing their meaning by going through JSONP\n * are considered usable.\n *\n * We allow data to come in a different format, as the servers SHOULD honor the Accept\n * request but may in practice return content with a different MIME type.\n */\nfunction canUseJSONP(request) {\n    \n    if (request.method && request.method !== \"GET\") {\n        return false;\n    }\n\n    return true;\n}\n\n/** Creates an IFRAME tag for loading the JSONP script\n * @param {String} url - The source URL of the script\n * @returns {HTMLElement} The IFRAME tag\n */\nfunction createIFrame(url) {\n    var iframe = window.document.createElement(\"IFRAME\");\n    iframe.style.display = \"none\";\n\n    var attributeEncodedUrl = url.replace(/&/g, \"&amp;\").replace(/\"/g, \"&quot;\").replace(/</g, \"&lt;\");\n    var html = \"<html><head><script type=\\\"text/javascript\\\" src=\\\"\" + attributeEncodedUrl + \"\\\"><\\/script><\\/head><body><\\/body><\\/html>\";\n\n    var body = window.document.getElementsByTagName(\"BODY\")[0];\n    body.appendChild(iframe);\n\n    writeHtmlToIFrame(iframe, html);\n    return iframe;\n};\n\n/** Creates a XmlHttpRequest object.\n * @returns {XmlHttpRequest} XmlHttpRequest object.\n */\nfunction createXmlHttpRequest() {\n    if (window.XMLHttpRequest) {\n        return new window.XMLHttpRequest();\n    }\n    var exception;\n    if (window.ActiveXObject) {\n        try {\n            return new window.ActiveXObject(\"Msxml2.XMLHTTP.6.0\");\n        } catch (_) {\n            try {\n                return new window.ActiveXObject(\"Msxml2.XMLHTTP.3.0\");\n            } catch (e) {\n                exception = e;\n            }\n        }\n    } else {\n        exception = { message: \"XMLHttpRequest not supported\" };\n    }\n    throw exception;\n}\n\n/** Checks whether the specified URL is an absolute URL.\n * @param {String} url - URL to check.\n * @returns {Boolean} true if the url is an absolute URL; false otherwise.\n*/\nfunction isAbsoluteUrl(url) {\n    return url.indexOf(\"http://\") === 0 ||\n        url.indexOf(\"https://\") === 0 ||\n        url.indexOf(\"file://\") === 0;\n}\n\n/** Checks whether the specified URL is local to the current context.\n * @param {String} url - URL to check.\n * @returns {Boolean} true if the url is a local URL; false otherwise.\n */\nfunction isLocalUrl(url) {\n\n    if (!isAbsoluteUrl(url)) {\n        return true;\n    }\n\n    // URL-embedded username and password will not be recognized as same-origin URLs.\n    var location = window.location;\n    var locationDomain = location.protocol + \"//\" + location.host + \"/\";\n    return (url.indexOf(locationDomain) === 0);\n}\n\n/** Removes a callback used for a JSONP request.\n * @param {String} name - Function name to remove.\n * @param {Number} tick - Tick count used on the callback.\n */\nfunction removeCallback(name, tick) {\n    try {\n        delete window[name];\n    } catch (err) {\n        window[name] = undefined;\n        if (tick === ticks - 1) {\n            ticks -= 1;\n        }\n    }\n};\n\n/** Removes an iframe.\n * @param {Object} iframe - The iframe to remove.\n * @returns {Object} Null value to be assigned to iframe reference.\n */\nfunction removeIFrame(iframe) {\n    if (iframe) {\n        writeHtmlToIFrame(iframe, \"\");\n        iframe.parentNode.removeChild(iframe);\n    }\n\n    return null;\n};\n\n/** Reads response headers into array.\n * @param {XMLHttpRequest} xhr - HTTP request with response available.\n * @param {Array} headers - Target array to fill with name/value pairs.\n */\nfunction readResponseHeaders(xhr, headers) {\n\n    var responseHeaders = xhr.getAllResponseHeaders().split(/\\r?\\n/);\n    var i, len;\n    for (i = 0, len = responseHeaders.length; i < len; i++) {\n        if (responseHeaders[i]) {\n            var header = responseHeaders[i].split(\": \");\n            headers[header[0]] = header[1];\n        }\n    }\n}\n\n/** Writes HTML to an IFRAME document.\n * @param {HTMLElement} iframe - The IFRAME element to write to.\n * @param {String} html - The HTML to write.\n */\nfunction writeHtmlToIFrame(iframe, html) {\n    var frameDocument = (iframe.contentWindow) ? iframe.contentWindow.document : iframe.contentDocument.document;\n    frameDocument.open();\n    frameDocument.write(html);\n    frameDocument.close();\n}\n\nexports.defaultHttpClient = {\n    callbackParameterName: \"$callback\",\n\n    formatQueryString: \"$format=json\",\n\n    enableJsonpCallback: false,\n\n    /** Performs a network request.\n     * @param {Object} request - Request description\n     * @param {Function} success - Success callback with the response object.\n     * @param {Function} error - Error callback with an error object.\n     * @returns {Object} Object with an 'abort' method for the operation.\n     */\n    request: function (request, success, error) {\n\n        var result = {};\n        var xhr = null;\n        var done = false;\n        var iframe;\n\n        result.abort = function () {\n            iframe = removeIFrame(iframe);\n            if (done) {\n                return;\n            }\n\n            done = true;\n            if (xhr) {\n                xhr.abort();\n                xhr = null;\n            }\n\n            error({ message: \"Request aborted\" });\n        };\n\n        var handleTimeout = function () {\n            iframe = removeIFrame(iframe);\n            if (!done) {\n                done = true;\n                xhr = null;\n                error({ message: \"Request timed out\" });\n            }\n        };\n\n        var name;\n        var url = request.requestUri;\n        var enableJsonpCallback = defined(request.enableJsonpCallback, this.enableJsonpCallback);\n        var callbackParameterName = defined(request.callbackParameterName, this.callbackParameterName);\n        var formatQueryString = defined(request.formatQueryString, this.formatQueryString);\n        if (!enableJsonpCallback || isLocalUrl(url)) {\n\n            xhr = createXmlHttpRequest();\n            xhr.onreadystatechange = function () {\n                if (done || xhr === null || xhr.readyState !== 4) {\n                    return;\n                }\n\n                // Workaround for XHR behavior on IE.\n                var statusText = xhr.statusText;\n                var statusCode = xhr.status;\n                if (statusCode === 1223) {\n                    statusCode = 204;\n                    statusText = \"No Content\";\n                }\n\n                var headers = [];\n                readResponseHeaders(xhr, headers);\n\n                var response = { requestUri: url, statusCode: statusCode, statusText: statusText, headers: headers, body: xhr.responseText };\n\n                done = true;\n                xhr = null;\n                if (statusCode >= 200 && statusCode <= 299) {\n                    success(response);\n                } else {\n                    error({ message: \"HTTP request failed\", request: request, response: response });\n                }\n            };\n\n            xhr.open(request.method || \"GET\", url, true, request.user, request.password);\n\n            // Set the name/value pairs.\n            if (request.headers) {\n                for (name in request.headers) {\n                    xhr.setRequestHeader(name, request.headers[name]);\n                }\n            }\n\n            // Set the timeout if available.\n            if (request.timeoutMS) {\n                xhr.timeout = request.timeoutMS;\n                xhr.ontimeout = handleTimeout;\n            }\n\n            xhr.send(request.body);\n        } else {\n            if (!canUseJSONP(request)) {\n                throw { message: \"Request is not local and cannot be done through JSONP.\" };\n            }\n\n            var tick = ticks;\n            ticks += 1;\n            var tickText = tick.toString();\n            var succeeded = false;\n            var timeoutId;\n            name = \"handleJSONP_\" + tickText;\n            window[name] = function (data) {\n                iframe = removeIFrame(iframe);\n                if (!done) {\n                    succeeded = true;\n                    window.clearTimeout(timeoutId);\n                    removeCallback(name, tick);\n\n                    // Workaround for IE8 and IE10 below where trying to access data.constructor after the IFRAME has been removed\n                    // throws an \"unknown exception\"\n                    if (window.ActiveXObject) {\n                        data = window.JSON.parse(window.JSON.stringify(data));\n                    }\n\n\n                    var headers;\n                    if (!formatQueryString || formatQueryString == \"$format=json\") {\n                        headers = { \"Content-Type\": \"application/json;odata.metadata=minimal\", \"OData-Version\": \"4.0\" };\n                    } else {\n                        // the formatQueryString should be in the format of \"$format=xxx\", xxx should be one of the application/json;odata.metadata=minimal(none or full)\n                        // set the content-type with the string xxx which stars from index 8.\n                        headers = { \"Content-Type\": formatQueryString.substring(8), \"OData-Version\": \"4.0\" };\n                    }\n\n                    // Call the success callback in the context of the parent window, instead of the IFRAME\n                    delay(function () {\n                        removeIFrame(iframe);\n                        success({ body: data, statusCode: 200, headers: headers });\n                    });\n                }\n            };\n\n            // Default to two minutes before timing out, 1000 ms * 60 * 2 = 120000.\n            var timeoutMS = (request.timeoutMS) ? request.timeoutMS : 120000;\n            timeoutId = window.setTimeout(handleTimeout, timeoutMS);\n\n            var queryStringParams = callbackParameterName + \"=parent.\" + name;\n            if (formatQueryString) {\n                queryStringParams += \"&\" + formatQueryString;\n            }\n\n            var qIndex = url.indexOf(\"?\");\n            if (qIndex === -1) {\n                url = url + \"?\" + queryStringParams;\n            } else if (qIndex === url.length - 1) {\n                url = url + queryStringParams;\n            } else {\n                url = url + \"&\" + queryStringParams;\n            }\n\n            iframe = createIFrame(url);\n        }\n\n        return result;\n    }\n};\n\n\n\nexports.canUseJSONP = canUseJSONP;\nexports.isAbsoluteUrl = isAbsoluteUrl;\nexports.isLocalUrl = isLocalUrl;\n},{\"./../odatajs.js\":11}],10:[function(require,module,exports){\n\n /** @module odata/utils */\n\nvar utils    = require('./../odatajs.js').utils;\n\n// Imports\nvar assigned = utils.assigned;\nvar contains = utils.contains;\nvar find = utils.find;\nvar isArray = utils.isArray;\nvar isDate = utils.isDate;\nvar isObject = utils.isObject;\nvar parseInt10 = utils.parseInt10;\n\n\n/** Gets the type name of a data item value that belongs to a feed, an entry, a complex type property, or a collection property\n * @param {string} value - Value of the data item from which the type name is going to be retrieved.\n * @param {object} [metadata] - Object containing metadata about the data tiem.\n * @returns {string} Data item type name; null if the type name cannot be found within the value or the metadata\n * This function will first try to get the type name from the data item's value itself if it is an object with a __metadata property; otherwise\n * it will try to recover it from the metadata.  If both attempts fail, it will return null.\n */\nvar dataItemTypeName = function (value, metadata) {\n    var valueTypeName = ((value && value.__metadata) || {}).type;\n    return valueTypeName || (metadata ? metadata.type : null);\n};\n\nvar EDM = \"Edm.\";\nvar EDM_BOOLEAN = EDM + \"Boolean\";\nvar EDM_BYTE = EDM + \"Byte\";\nvar EDM_SBYTE = EDM + \"SByte\";\nvar EDM_INT16 = EDM + \"Int16\";\nvar EDM_INT32 = EDM + \"Int32\";\nvar EDM_INT64 = EDM + \"Int64\";\nvar EDM_SINGLE = EDM + \"Single\";\nvar EDM_DOUBLE = EDM + \"Double\";\nvar EDM_DECIMAL = EDM + \"Decimal\";\nvar EDM_STRING = EDM + \"String\";\n\nvar EDM_BINARY = EDM + \"Binary\";\nvar EDM_DATE = EDM + \"Date\";\nvar EDM_DATETIMEOFFSET = EDM + \"DateTimeOffset\";\nvar EDM_DURATION = EDM + \"Duration\";\nvar EDM_GUID = EDM + \"Guid\";\nvar EDM_TIMEOFDAY = EDM + \"Time\";\n\nvar GEOGRAPHY = \"Geography\";\nvar EDM_GEOGRAPHY = EDM + GEOGRAPHY;\nvar EDM_GEOGRAPHY_POINT = EDM_GEOGRAPHY + \"Point\";\nvar EDM_GEOGRAPHY_LINESTRING = EDM_GEOGRAPHY + \"LineString\";\nvar EDM_GEOGRAPHY_POLYGON = EDM_GEOGRAPHY + \"Polygon\";\nvar EDM_GEOGRAPHY_COLLECTION = EDM_GEOGRAPHY + \"Collection\";\nvar EDM_GEOGRAPHY_MULTIPOLYGON = EDM_GEOGRAPHY + \"MultiPolygon\";\nvar EDM_GEOGRAPHY_MULTILINESTRING = EDM_GEOGRAPHY + \"MultiLineString\";\nvar EDM_GEOGRAPHY_MULTIPOINT = EDM_GEOGRAPHY + \"MultiPoint\";\n\nvar GEOGRAPHY_POINT = GEOGRAPHY + \"Point\";\nvar GEOGRAPHY_LINESTRING = GEOGRAPHY + \"LineString\";\nvar GEOGRAPHY_POLYGON = GEOGRAPHY + \"Polygon\";\nvar GEOGRAPHY_COLLECTION = GEOGRAPHY + \"Collection\";\nvar GEOGRAPHY_MULTIPOLYGON = GEOGRAPHY + \"MultiPolygon\";\nvar GEOGRAPHY_MULTILINESTRING = GEOGRAPHY + \"MultiLineString\";\nvar GEOGRAPHY_MULTIPOINT = GEOGRAPHY + \"MultiPoint\";\n\nvar GEOMETRY = \"Geometry\";\nvar EDM_GEOMETRY = EDM + GEOMETRY;\nvar EDM_GEOMETRY_POINT = EDM_GEOMETRY + \"Point\";\nvar EDM_GEOMETRY_LINESTRING = EDM_GEOMETRY + \"LineString\";\nvar EDM_GEOMETRY_POLYGON = EDM_GEOMETRY + \"Polygon\";\nvar EDM_GEOMETRY_COLLECTION = EDM_GEOMETRY + \"Collection\";\nvar EDM_GEOMETRY_MULTIPOLYGON = EDM_GEOMETRY + \"MultiPolygon\";\nvar EDM_GEOMETRY_MULTILINESTRING = EDM_GEOMETRY + \"MultiLineString\";\nvar EDM_GEOMETRY_MULTIPOINT = EDM_GEOMETRY + \"MultiPoint\";\n\nvar GEOMETRY_POINT = GEOMETRY + \"Point\";\nvar GEOMETRY_LINESTRING = GEOMETRY + \"LineString\";\nvar GEOMETRY_POLYGON = GEOMETRY + \"Polygon\";\nvar GEOMETRY_COLLECTION = GEOMETRY + \"Collection\";\nvar GEOMETRY_MULTIPOLYGON = GEOMETRY + \"MultiPolygon\";\nvar GEOMETRY_MULTILINESTRING = GEOMETRY + \"MultiLineString\";\nvar GEOMETRY_MULTIPOINT = GEOMETRY + \"MultiPoint\";\n\nvar GEOJSON_POINT = \"Point\";\nvar GEOJSON_LINESTRING = \"LineString\";\nvar GEOJSON_POLYGON = \"Polygon\";\nvar GEOJSON_MULTIPOINT = \"MultiPoint\";\nvar GEOJSON_MULTILINESTRING = \"MultiLineString\";\nvar GEOJSON_MULTIPOLYGON = \"MultiPolygon\";\nvar GEOJSON_GEOMETRYCOLLECTION = \"GeometryCollection\";\n\nvar primitiveEdmTypes = [\n    EDM_STRING,\n    EDM_INT32,\n    EDM_INT64,\n    EDM_BOOLEAN,\n    EDM_DOUBLE,\n    EDM_SINGLE,\n    EDM_DATE,\n    EDM_DATETIMEOFFSET,\n    EDM_DURATION,\n    EDM_TIMEOFDAY,\n    EDM_DECIMAL,\n    EDM_GUID,\n    EDM_BYTE,\n    EDM_INT16,\n    EDM_SBYTE,\n    EDM_BINARY\n];\n\nvar geometryEdmTypes = [\n    EDM_GEOMETRY,\n    EDM_GEOMETRY_POINT,\n    EDM_GEOMETRY_LINESTRING,\n    EDM_GEOMETRY_POLYGON,\n    EDM_GEOMETRY_COLLECTION,\n    EDM_GEOMETRY_MULTIPOLYGON,\n    EDM_GEOMETRY_MULTILINESTRING,\n    EDM_GEOMETRY_MULTIPOINT\n];\n\nvar geometryTypes = [\n    GEOMETRY,\n    GEOMETRY_POINT,\n    GEOMETRY_LINESTRING,\n    GEOMETRY_POLYGON,\n    GEOMETRY_COLLECTION,\n    GEOMETRY_MULTIPOLYGON,\n    GEOMETRY_MULTILINESTRING,\n    GEOMETRY_MULTIPOINT\n];\n\nvar geographyEdmTypes = [\n    EDM_GEOGRAPHY,\n    EDM_GEOGRAPHY_POINT,\n    EDM_GEOGRAPHY_LINESTRING,\n    EDM_GEOGRAPHY_POLYGON,\n    EDM_GEOGRAPHY_COLLECTION,\n    EDM_GEOGRAPHY_MULTIPOLYGON,\n    EDM_GEOGRAPHY_MULTILINESTRING,\n    EDM_GEOGRAPHY_MULTIPOINT\n];\n\nvar geographyTypes = [\n    GEOGRAPHY,\n    GEOGRAPHY_POINT,\n    GEOGRAPHY_LINESTRING,\n    GEOGRAPHY_POLYGON,\n    GEOGRAPHY_COLLECTION,\n    GEOGRAPHY_MULTIPOLYGON,\n    GEOGRAPHY_MULTILINESTRING,\n    GEOGRAPHY_MULTIPOINT\n];\n\n/** Invokes a function once per schema in metadata.\n * @param metadata - Metadata store; one of edmx, schema, or an array of any of them.\n * @param {Function} callback - Callback function to invoke once per schema.\n * @returns The first truthy value to be returned from the callback; null or the last falsy value otherwise.\n */\nfunction forEachSchema(metadata, callback) {\n    \n\n    if (!metadata) {\n        return null;\n    }\n\n    if (isArray(metadata)) {\n        var i, len, result;\n        for (i = 0, len = metadata.length; i < len; i++) {\n            result = forEachSchema(metadata[i], callback);\n            if (result) {\n                return result;\n            }\n        }\n\n        return null;\n    } else {\n        if (metadata.dataServices) {\n            return forEachSchema(metadata.dataServices.schema, callback);\n        }\n\n        return callback(metadata);\n    }\n}\n\n/** Formats a millisecond and a nanosecond value into a single string.\n * @param {Numaber} ms - Number of milliseconds to format.</param>\n * @param {Numaber} ns - Number of nanoseconds to format.</param>\n * @returns {String} Formatted text.\n * If the value is already as string it's returned as-is.</remarks>\n */\nfunction formatMilliseconds(ms, ns) {\n\n    // Avoid generating milliseconds if not necessary.\n    if (ms === 0) {\n        ms = \"\";\n    } else {\n        ms = \".\" + formatNumberWidth(ms.toString(), 3);\n    }\n    if (ns > 0) {\n        if (ms === \"\") {\n            ms = \".000\";\n        }\n        ms += formatNumberWidth(ns.toString(), 4);\n    }\n    return ms;\n}\n\nfunction formatDateTimeOffsetJSON(value) {\n    return \"\\/Date(\" + value.getTime() + \")\\/\";\n}\n\n/** Formats a DateTime or DateTimeOffset value a string.\n * @param {Date} value - Value to format\n * @returns {String} Formatted text.\n * If the value is already as string it's returned as-is\n´*/\nfunction formatDateTimeOffset(value) {\n\n    if (typeof value === \"string\") {\n        return value;\n    }\n\n    var hasOffset = isDateTimeOffset(value);\n    var offset = getCanonicalTimezone(value.__offset);\n    if (hasOffset && offset !== \"Z\") {\n        // We're about to change the value, so make a copy.\n        value = new Date(value.valueOf());\n\n        var timezone = parseTimezone(offset);\n        var hours = value.getUTCHours() + (timezone.d * timezone.h);\n        var minutes = value.getUTCMinutes() + (timezone.d * timezone.m);\n\n        value.setUTCHours(hours, minutes);\n    } else if (!hasOffset) {\n        // Don't suffix a 'Z' for Edm.DateTime values.\n        offset = \"\";\n    }\n\n    var year = value.getUTCFullYear();\n    var month = value.getUTCMonth() + 1;\n    var sign = \"\";\n    if (year <= 0) {\n        year = -(year - 1);\n        sign = \"-\";\n    }\n\n    var ms = formatMilliseconds(value.getUTCMilliseconds(), value.__ns);\n\n    return sign +\n        formatNumberWidth(year, 4) + \"-\" +\n        formatNumberWidth(month, 2) + \"-\" +\n        formatNumberWidth(value.getUTCDate(), 2) + \"T\" +\n        formatNumberWidth(value.getUTCHours(), 2) + \":\" +\n        formatNumberWidth(value.getUTCMinutes(), 2) + \":\" +\n        formatNumberWidth(value.getUTCSeconds(), 2) +\n        ms + offset;\n}\n\n/** Converts a duration to a string in xsd:duration format.\n * @param {Object} value - Object with ms and __edmType properties.\n * @returns {String} String representation of the time object in xsd:duration format.\n */\nfunction formatDuration(value) {\n\n    var ms = value.ms;\n\n    var sign = \"\";\n    if (ms < 0) {\n        sign = \"-\";\n        ms = -ms;\n    }\n\n    var days = Math.floor(ms / 86400000);\n    ms -= 86400000 * days;\n    var hours = Math.floor(ms / 3600000);\n    ms -= 3600000 * hours;\n    var minutes = Math.floor(ms / 60000);\n    ms -= 60000 * minutes;\n    var seconds = Math.floor(ms / 1000);\n    ms -= seconds * 1000;\n\n    return sign + \"P\" +\n           formatNumberWidth(days, 2) + \"DT\" +\n           formatNumberWidth(hours, 2) + \"H\" +\n           formatNumberWidth(minutes, 2) + \"M\" +\n           formatNumberWidth(seconds, 2) +\n           formatMilliseconds(ms, value.ns) + \"S\";\n}\n\n/** Formats the specified value to the given width.\n * @param {Number} value - Number to format (non-negative).\n * @param {Number} width - Minimum width for number.\n * @param {Boolean} append - Flag indicating if the value is padded at the beginning (false) or at the end (true).\n * @returns {String} Text representation.\n */\nfunction formatNumberWidth(value, width, append) {\n    var result = value.toString(10);\n    while (result.length < width) {\n        if (append) {\n            result += \"0\";\n        } else {\n            result = \"0\" + result;\n        }\n    }\n\n    return result;\n}\n\n/** Gets the canonical timezone representation.\n * @param {String} timezone - Timezone representation.\n * @returns {String} An 'Z' string if the timezone is absent or 0; the timezone otherwise.\n */\nfunction getCanonicalTimezone(timezone) {\n\n    return (!timezone || timezone === \"Z\" || timezone === \"+00:00\" || timezone === \"-00:00\") ? \"Z\" : timezone;\n}\n\n/** Gets the type of a collection type name.\n * @param {String} typeName - Type name of the collection.\n * @returns {String} Type of the collection; null if the type name is not a collection type.\n */\nfunction getCollectionType(typeName) {\n\n    if (typeof typeName === \"string\") {\n        var end = typeName.indexOf(\")\", 10);\n        if (typeName.indexOf(\"Collection(\") === 0 && end > 0) {\n            return typeName.substring(11, end);\n        }\n    }\n    return null;\n}\n\n/** Sends a request containing OData payload to a server.\n* @param request - Object that represents the request to be sent..\n* @param success - Callback for a successful read operation.\n* @param error - Callback for handling errors.\n* @param handler - Handler for data serialization.\n* @param httpClient - HTTP client layer.\n* @param context - Context used for processing the request\n*/\nfunction invokeRequest(request, success, error, handler, httpClient, context) {\n\n    return httpClient.request(request, function (response) {\n        try {\n            if (response.headers) {\n                normalizeHeaders(response.headers);\n            }\n\n            if (response.data === undefined && response.statusCode !== 204) {\n                handler.read(response, context);\n            }\n        } catch (err) {\n            if (err.request === undefined) {\n                err.request = request;\n            }\n            if (err.response === undefined) {\n                err.response = response;\n            }\n            error(err);\n            return;\n        }\n        // errors in success handler for sync requests result in error handler calls. So here we fix this. \n        try {\n            success(response.data, response);\n        } catch (err) {\n            err.bIsSuccessHandlerError = true;\n            throw err;\n        }\n    }, error);\n}\n\n/** Tests whether a value is a batch object in the library's internal representation.\n * @param value - Value to test.\n * @returns {Boolean} True is the value is a batch object; false otherwise.\n */\nfunction isBatch(value) {\n\n    return isComplex(value) && isArray(value.__batchRequests);\n}\n\n// Regular expression used for testing and parsing for a collection type.\nvar collectionTypeRE = /Collection\\((.*)\\)/;\n\n/** Tests whether a value is a collection value in the library's internal representation.\n * @param value - Value to test.\n * @param {Sting} typeName - Type name of the value. This is used to disambiguate from a collection property value.\n * @returns {Boolean} True is the value is a feed value; false otherwise.\n */\nfunction isCollection(value, typeName) {\n\n    var colData = value && value.results || value;\n    return !!colData &&\n        (isCollectionType(typeName)) ||\n        (!typeName && isArray(colData) && !isComplex(colData[0]));\n}\n\n/** Checks whether the specified type name is a collection type.\n * @param {String} typeName - Name of type to check.\n * @returns {Boolean} True if the type is the name of a collection type; false otherwise.\n */\nfunction isCollectionType(typeName) {\n    return collectionTypeRE.test(typeName);\n}\n\n/** Tests whether a value is a complex type value in the library's internal representation.\n * @param value - Value to test.\n * @returns {Boolean} True is the value is a complex type value; false otherwise.\n */\nfunction isComplex(value) {\n\n    return !!value &&\n        isObject(value) &&\n        !isArray(value) &&\n        !isDate(value);\n}\n\n/** Checks whether a Date object is DateTimeOffset value\n * @param {Date} value - Value to check\n * @returns {Boolean} true if the value is a DateTimeOffset, false otherwise.\n */\nfunction isDateTimeOffset(value) {\n    return (value.__edmType === \"Edm.DateTimeOffset\" || (!value.__edmType && value.__offset));\n}\n\n/** Tests whether a value is a deferred navigation property in the library's internal representation.\n * @param value - Value to test.\n * @returns {Boolean} True is the value is a deferred navigation property; false otherwise.\n */\nfunction isDeferred(value) {\n\n    if (!value && !isComplex(value)) {\n        return false;\n    }\n    var metadata = value.__metadata || {};\n    var deferred = value.__deferred || {};\n    return !metadata.type && !!deferred.uri;\n}\n\n/** Tests whether a value is an entry object in the library's internal representation.\n * @param value - Value to test.\n * @returns {Boolean} True is the value is an entry object; false otherwise.\n */\nfunction isEntry(value) {\n\n    return isComplex(value) && value.__metadata && \"uri\" in value.__metadata;\n}\n\n/** Tests whether a value is a feed value in the library's internal representation.\n * @param value - Value to test.\n * @param {Sting} typeName - Type name of the value. This is used to disambiguate from a collection property value.\n * @returns {Boolean} True is the value is a feed value; false otherwise.\n */\nfunction isFeed(value, typeName) {\n\n    var feedData = value && value.results || value;\n    return isArray(feedData) && (\n        (!isCollectionType(typeName)) &&\n        (isComplex(feedData[0]))\n    );\n}\n\n/** Checks whether the specified type name is a geography EDM type.\n * @param {String} typeName - Name of type to check.\n * @returns {Boolean} True if the type is a geography EDM type; false otherwise.\n */\nfunction isGeographyEdmType(typeName) {\n\n    //check with edm\n    var ret = contains(geographyEdmTypes, typeName) || \n        (typeName.indexOf('.') === -1 && contains(geographyTypes, typeName));\n    return ret; \n        \n}\n\n/** Checks whether the specified type name is a geometry EDM type.\n * @param {String} typeName - Name of type to check.\n * @returns {Boolean} True if the type is a geometry EDM type; false otherwise.\n */\nfunction isGeometryEdmType(typeName) {\n\n    var ret = contains(geometryEdmTypes, typeName) ||\n        (typeName.indexOf('.') === -1 && contains(geometryTypes, typeName));\n    return ret; \n}\n\n/** Tests whether a value is a named stream value in the library's internal representation.\n * @param value - Value to test.\n * @returns {Boolean} True is the value is a named stream; false otherwise.\n */\nfunction isNamedStream(value) {\n\n    if (!value && !isComplex(value)) {\n        return false;\n    }\n    var metadata = value.__metadata;\n    var mediaResource = value.__mediaresource;\n    return !metadata && !!mediaResource && !!mediaResource.media_src;\n}\n\n/** Tests whether a value is a primitive type value in the library's internal representation.\n * @param value - Value to test.\n * @returns {Boolean} True is the value is a primitive type value.\n * Date objects are considered primitive types by the library.\n */\nfunction isPrimitive(value) {\n\n    return isDate(value) ||\n        typeof value === \"string\" ||\n        typeof value === \"number\" ||\n        typeof value === \"boolean\";\n}\n\n/** Checks whether the specified type name is a primitive EDM type.\n * @param {String} typeName - Name of type to check.\n * @returns {Boolean} True if the type is a primitive EDM type; false otherwise.\n */\nfunction isPrimitiveEdmType(typeName) {\n\n    return contains(primitiveEdmTypes, typeName);\n}\n\n/** Gets the kind of a navigation property value.\n * @param value - Value of the navigation property.\n * @param {Object} [propertyModel] - Object that describes the navigation property in an OData conceptual schema.\n * @returns {String} String value describing the kind of the navigation property; null if the kind cannot be determined.\n */\nfunction navigationPropertyKind(value, propertyModel) {\n\n    if (isDeferred(value)) {\n        return \"deferred\";\n    }\n    if (isEntry(value)) {\n        return \"entry\";\n    }\n    if (isFeed(value)) {\n        return \"feed\";\n    }\n    if (propertyModel && propertyModel.relationship) {\n        if (value === null || value === undefined || !isFeed(value)) {\n            return \"entry\";\n        }\n        return \"feed\";\n    }\n    return null;\n}\n\n/** Looks up a property by name.\n * @param {Array} properties - Array of property objects as per EDM metadata (may be null)\n * @param {String} name - Name to look for.\n * @returns {Object} The property object; null if not found.\n */\nfunction lookupProperty(properties, name) {\n\n    return find(properties, function (property) {\n        return property.name === name;\n    });\n}\n\n/** Looks up a type object by name.\n * @param {String} name - Name, possibly null or empty.\n * @param metadata - Metadata store; one of edmx, schema, or an array of any of them.\n * @param {String} kind - Kind of object to look for as per EDM metadata.\n * @returns An type description if the name is found; null otherwise\n */\nfunction lookupInMetadata(name, metadata, kind) {\n\n    return (name) ? forEachSchema(metadata, function (schema) {\n        return lookupInSchema(name, schema, kind);\n    }) : null;\n}\n\n/** Looks up a entity set by name.\n * @param {Array} properties - Array of entity set objects as per EDM metadata( may be null)\n * @param {String} name - Name to look for.\n * @returns {Object} The entity set object; null if not found.\n */\nfunction lookupEntitySet(entitySets, name) {\n\n    return find(entitySets, function (entitySet) {\n        return entitySet.name === name;\n    });\n}\n\n/** Looks up a entity set by name.\n * @param {Array} properties - Array of entity set objects as per EDM metadata (may be null)\n * @param {String} name - Name to look for.\n * @returns {Object} The entity set object; null if not found.\n */\nfunction lookupSingleton(singletons, name) {\n\n    return find(singletons, function (singleton) {\n        return singleton.name === name;\n    });\n}\n\n/** Looks up a complex type object by name.\n * @param {String} name - Name, possibly null or empty.\n * @param metadata - Metadata store; one of edmx, schema, or an array of any of them.\n * @returns A complex type description if the name is found; null otherwise.</returns>\n */\nfunction lookupComplexType(name, metadata) {\n\n    return lookupInMetadata(name, metadata, \"complexType\");\n}\n\n/** Looks up an entity type object by name.\n * @param {String} name - Name, possibly null or empty.\n * @param metadata - Metadata store; one of edmx, schema, or an array of any of them.\n * @returns An entity type description if the name is found; null otherwise.</returns>\n */\nfunction lookupEntityType(name, metadata) {\n\n    return lookupInMetadata(name, metadata, \"entityType\");\n}\n\n\n/** Looks up an\n * @param {String} name - Name, possibly null or empty.\n * @param metadata - Metadata store; one of edmx, schema, or an array of any of them.\n * @returns An entity container description if the name is found; null otherwise.</returns>\n */\nfunction lookupDefaultEntityContainer(metadata) {\n\n    return forEachSchema(metadata, function (schema) {\n        if (isObject(schema.entityContainer)) { \n            return schema.entityContainer;\n        }\n    });\n}\n\n/** Looks up an entity container object by name.\n * @param {String} name - Name, possibly null or empty.\n * @param metadata - Metadata store; one of edmx, schema, or an array of any of them.\n * @returns An entity container description if the name is found; null otherwise.</returns>\n */\nfunction lookupEntityContainer(name, metadata) {\n\n    return lookupInMetadata(name, metadata, \"entityContainer\");\n}\n\n/** Looks up a function import by name.\n * @param {Array} properties - Array of function import objects as per EDM metadata (May be null)\n * @param {String} name - Name to look for.\n * @returns {Object} The entity set object; null if not found.\n */\nfunction lookupFunctionImport(functionImports, name) {\n    return find(functionImports, function (functionImport) {\n        return functionImport.name === name;\n    });\n}\n\n/** Looks up the target entity type for a navigation property.\n * @param {Object} navigationProperty - \n * @param {Object} metadata - \n * @returns {String} The entity type name for the specified property, null if not found.\n */\nfunction lookupNavigationPropertyType(navigationProperty, metadata) {\n\n    var result = null;\n    if (navigationProperty) {\n        var rel = navigationProperty.relationship;\n        var association = forEachSchema(metadata, function (schema) {\n            // The name should be the namespace qualified name in 'ns'.'type' format.\n            var nameOnly = removeNamespace(schema.namespace, rel);\n            var associations = schema.association;\n            if (nameOnly && associations) {\n                var i, len;\n                for (i = 0, len = associations.length; i < len; i++) {\n                    if (associations[i].name === nameOnly) {\n                        return associations[i];\n                    }\n                }\n            }\n            return null;\n        });\n\n        if (association) {\n            var end = association.end[0];\n            if (end.role !== navigationProperty.toRole) {\n                end = association.end[1];\n                // For metadata to be valid, end.role === navigationProperty.toRole now.\n            }\n            result = end.type;\n        }\n    }\n    return result;\n}\n\n/** Looks up the target entityset name for a navigation property.\n * @param {Object} navigationProperty - \n * @param {Object} metadata - \n * @returns {String} The entityset name for the specified property, null if not found.\n */\nfunction lookupNavigationPropertyEntitySet(navigationProperty, sourceEntitySetName, metadata) {\n\n    if (navigationProperty) {\n        var rel = navigationProperty.relationship;\n        var associationSet = forEachSchema(metadata, function (schema) {\n            var containers = schema.entityContainer;\n            for (var i = 0; i < containers.length; i++) {\n                var associationSets = containers[i].associationSet;\n                if (associationSets) {\n                    for (var j = 0; j < associationSets.length; j++) {\n                        if (associationSets[j].association == rel) {\n                            return associationSets[j];\n                        }\n                    }\n                }\n            }\n            return null;\n        });\n        if (associationSet && associationSet.end[0] && associationSet.end[1]) {\n            return (associationSet.end[0].entitySet == sourceEntitySetName) ? associationSet.end[1].entitySet : associationSet.end[0].entitySet;\n        }\n    }\n    return null;\n}\n\n/** Gets the entitySet info, container name and functionImports for an entitySet\n * @param {Object} navigationProperty - \n * @param {Object} metadata - \n * @returns {Object} The info about the entitySet.\n */\nfunction getEntitySetInfo(entitySetName, metadata) {\n\n    var info = forEachSchema(metadata, function (schema) {\n        var container = schema.entityContainer;\n        var entitySets = container.entitySet;\n        if (entitySets) {\n            for (var j = 0; j < entitySets.length; j++) {\n                if (entitySets[j].name == entitySetName) {\n                    return { entitySet: entitySets[j], containerName: container.name, functionImport: container.functionImport };\n                }\n            }\n        }\n        return null;\n    });\n\n    return info;\n}\n\n/** Given an expected namespace prefix, removes it from a full name.\n * @param {String} ns - Expected namespace.\n * @param {String} fullName - Full name in 'ns'.'name' form.\n * @returns {String} The local name, null if it isn't found in the expected namespace.\n */\nfunction removeNamespace(ns, fullName) {\n\n    if (fullName.indexOf(ns) === 0 && fullName.charAt(ns.length) === \".\") {\n        return fullName.substr(ns.length + 1);\n    }\n\n    return null;\n}\n\n/** Looks up a schema object by name.\n * @param {String} name - Name (assigned).\n * @param schema - Schema object as per EDM metadata.\n * @param {String} kind - Kind of object to look for as per EDM metadata.\n * @returns An entity type description if the name is found; null otherwise.</returns>\n */\nfunction lookupInSchema(name, schema, kind) {\n\n    if (name && schema) {\n        // The name should be the namespace qualified name in 'ns'.'type' format.\n        var nameOnly = removeNamespace(schema.namespace, name);\n        if (nameOnly) {\n            return find(schema[kind], function (item) {\n                return item.name === nameOnly;\n            });\n        }\n    }\n    return null;\n}\n\n/** Compares to version strings and returns the higher one.\n * @param {String} left - Version string in the form \"major.minor.rev\"\n * @param {String} right - Version string in the form \"major.minor.rev\"\n * @returns {String} The higher version string.\n */\nfunction maxVersion(left, right) {\n\n    if (left === right) {\n        return left;\n    }\n\n    var leftParts = left.split(\".\");\n    var rightParts = right.split(\".\");\n\n    var len = (leftParts.length >= rightParts.length) ?\n        leftParts.length :\n        rightParts.length;\n\n    for (var i = 0; i < len; i++) {\n        var leftVersion = leftParts[i] && parseInt10(leftParts[i]);\n        var rightVersion = rightParts[i] && parseInt10(rightParts[i]);\n        if (leftVersion > rightVersion) {\n            return left;\n        }\n        if (leftVersion < rightVersion) {\n            return right;\n        }\n    }\n}\n\nvar normalHeaders = {\n    // Headers shared by request and response\n    \"content-type\": \"Content-Type\",\n    \"content-encoding\": \"Content-Encoding\",\n    \"content-length\": \"Content-Length\",\n    \"odata-version\": \"OData-Version\",\n    \n    // Headers used by request\n    \"accept\": \"Accept\",\n    \"accept-charset\": \"Accept-Charset\",\n    \"if-match\": \"If-Match\",\n    \"if-none-match\": \"If-None-Match\",\n    \"odata-isolation\": \"OData-Isolation\",\n    \"odata-maxversion\": \"OData-MaxVersion\",\n    \"prefer\": \"Prefer\",\n    \"content-id\": \"Content-ID\",\n    \"content-transfer-encoding\": \"Content-Transfer-Encoding\",\n    \n    // Headers used by response\n    \"etag\": \"ETag\",\n    \"location\": \"Location\",\n    \"odata-entityid\": \"OData-EntityId\",\n    \"preference-applied\": \"Preference-Applied\",\n    \"retry-after\": \"Retry-After\"\n};\n\n/** Normalizes headers so they can be found with consistent casing.\n * @param {Object} headers - Dictionary of name/value pairs.\n */\nfunction normalizeHeaders(headers) {\n\n    for (var name in headers) {\n        var lowerName = name.toLowerCase();\n        var normalName = normalHeaders[lowerName];\n        if (normalName && name !== normalName) {\n            var val = headers[name];\n            delete headers[name];\n            headers[normalName] = val;\n        }\n    }\n}\n\n/** Parses a string into a boolean value.\n * @param propertyValue - Value to parse.\n * @returns {Boolean} true if the property value is 'true'; false otherwise.\n */\nfunction parseBool(propertyValue) {\n\n    if (typeof propertyValue === \"boolean\") {\n        return propertyValue;\n    }\n\n    return typeof propertyValue === \"string\" && propertyValue.toLowerCase() === \"true\";\n}\n\n\n// The captured indices for this expression are:\n// 0     - complete input\n// 1,2,3 - year with optional minus sign, month, day\n// 4,5,6 - hours, minutes, seconds\n// 7     - optional milliseconds\n// 8     - everything else (presumably offset information)\nvar parseDateTimeRE = /^(-?\\d{4,})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2})(?::(\\d{2}))?(?:\\.(\\d+))?(.*)$/;\n\n/** Parses a string into a DateTime value.\n * @param {String} value - Value to parse.\n * @param {Boolean} withOffset - Whether offset is expected.\n * @returns {Date} The parsed value.\n */\nfunction parseDateTimeMaybeOffset(value, withOffset, nullOnError) {\n\n    // We cannot parse this in cases of failure to match or if offset information is specified.\n    var parts = parseDateTimeRE.exec(value);\n    var offset = (parts) ? getCanonicalTimezone(parts[8]) : null;\n\n    if (!parts || (!withOffset && offset !== \"Z\")) {\n        if (nullOnError) {\n            return null;\n        }\n        throw { message: \"Invalid date/time value\" };\n    }\n\n    // Pre-parse years, account for year '0' being invalid in dateTime.\n    var year = parseInt10(parts[1]);\n    if (year <= 0) {\n        year++;\n    }\n\n    // Pre-parse optional milliseconds, fill in default. Fail if value is too precise.\n    var ms = parts[7];\n    var ns = 0;\n    if (!ms) {\n        ms = 0;\n    } else {\n        if (ms.length > 7) {\n            if (nullOnError) {\n                return null;\n            }\n            throw { message: \"Cannot parse date/time value to given precision.\" };\n        }\n\n        ns = formatNumberWidth(ms.substring(3), 4, true);\n        ms = formatNumberWidth(ms.substring(0, 3), 3, true);\n\n        ms = parseInt10(ms);\n        ns = parseInt10(ns);\n    }\n\n    // Pre-parse other time components and offset them if necessary.\n    var hours = parseInt10(parts[4]);\n    var minutes = parseInt10(parts[5]);\n    var seconds = parseInt10(parts[6]) || 0;\n    if (offset !== \"Z\") {\n        // The offset is reversed to get back the UTC date, which is\n        // what the API will eventually have.\n        var timezone = parseTimezone(offset);\n        var direction = -(timezone.d);\n        hours += timezone.h * direction;\n        minutes += timezone.m * direction;\n    }\n\n    // Set the date and time separately with setFullYear, so years 0-99 aren't biased like in Date.UTC.\n    var result = new Date();\n    result.setUTCFullYear(\n        year,                       // Year.\n        parseInt10(parts[2]) - 1,   // Month (zero-based for Date.UTC and setFullYear).\n        parseInt10(parts[3])        // Date.\n        );\n    result.setUTCHours(hours, minutes, seconds, ms);\n\n    if (isNaN(result.valueOf())) {\n        if (nullOnError) {\n            return null;\n        }\n        throw { message: \"Invalid date/time value\" };\n    }\n\n    if (withOffset) {\n        result.__edmType = \"Edm.DateTimeOffset\";\n        result.__offset = offset;\n    }\n\n    if (ns) {\n        result.__ns = ns;\n    }\n\n    return result;\n}\n\n/** Parses a string into a Date object.\n * @param {String} propertyValue - Value to parse.\n * @returns {Date} The parsed with year, month, day set, time values are set to 0\n */\nfunction parseDate(propertyValue, nullOnError) {\n    var parts = propertyValue.split('-');\n\n    if (parts.length != 3 && nullOnError) {\n        return null;\n    }\n    return new Date(\n        parseInt10(parts[0]),       // Year.\n        parseInt10(parts[1]) - 1,   // Month (zero-based for Date.UTC and setFullYear).\n        parseInt10(parts[2],\n        0,0,0,0)        // Date.\n        );\n\n}\n\nvar parseTimeOfDayRE = /^(\\d+):(\\d+)(:(\\d+)(.(\\d+))?)?$/;\n\nfunction parseTimeOfDay(propertyValue, nullOnError) {\n    var parts = parseTimeOfDayRE.exec(propertyValue);\n\n\n    return {\n        'h' :parseInt10(parts[1]),\n        'm' :parseInt10(parts[2]),\n        's' :parseInt10(parts[4]),\n        'ms' :parseInt10(parts[6]),\n     };\n}\n\n/** Parses a string into a DateTimeOffset value.\n * @param {String} propertyValue - Value to parse.\n * @returns {Date} The parsed value.\n\n\n * The resulting object is annotated with an __edmType property and\n * an __offset property reflecting the original intended offset of\n * the value. The time is adjusted for UTC time, as the current\n * timezone-aware Date APIs will only work with the local timezone.\n */\nfunction parseDateTimeOffset(propertyValue, nullOnError) {\n    \n\n    return parseDateTimeMaybeOffset(propertyValue, true, nullOnError);\n}\n\n// The captured indices for this expression are:\n// 0       - complete input\n// 1       - direction\n// 2,3,4   - years, months, days\n// 5,6,7,8 - hours, minutes, seconds, miliseconds\n\nvar parseTimeRE = /^([+-])?P(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)D)?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+)(?:\\.(\\d+))?S)?)?/;\n\nfunction isEdmDurationValue(value) {\n    parseTimeRE.test(value);\n}\n\n/** Parses a string in xsd:duration format.\n * @param {String} duration - Duration value.\n\n * This method will throw an exception if the input string has a year or a month component.\n\n * @returns {Object} Object representing the time\n */\nfunction parseDuration(duration) {\n\n    var parts = parseTimeRE.exec(duration);\n\n    if (parts === null) {\n        throw { message: \"Invalid duration value.\" };\n    }\n\n    var years = parts[2] || \"0\";\n    var months = parts[3] || \"0\";\n    var days = parseInt10(parts[4] || 0);\n    var hours = parseInt10(parts[5] || 0);\n    var minutes = parseInt10(parts[6] || 0);\n    var seconds = parseFloat(parts[7] || 0);\n\n    if (years !== \"0\" || months !== \"0\") {\n        throw { message: \"Unsupported duration value.\" };\n    }\n\n    var ms = parts[8];\n    var ns = 0;\n    if (!ms) {\n        ms = 0;\n    } else {\n        if (ms.length > 7) {\n            throw { message: \"Cannot parse duration value to given precision.\" };\n        }\n\n        ns = formatNumberWidth(ms.substring(3), 4, true);\n        ms = formatNumberWidth(ms.substring(0, 3), 3, true);\n\n        ms = parseInt10(ms);\n        ns = parseInt10(ns);\n    }\n\n    ms += seconds * 1000 + minutes * 60000 + hours * 3600000 + days * 86400000;\n\n    if (parts[1] === \"-\") {\n        ms = -ms;\n    }\n\n    var result = { ms: ms, __edmType: \"Edm.Time\" };\n\n    if (ns) {\n        result.ns = ns;\n    }\n    return result;\n}\n\n/** Parses a timezone description in (+|-)nn:nn format.\n * @param {String} timezone - Timezone offset.\n * @returns {Object} An object with a (d)irection property of 1 for + and -1 for -, offset (h)ours and offset (m)inutes.\n */\nfunction parseTimezone(timezone) {\n\n    var direction = timezone.substring(0, 1);\n    direction = (direction === \"+\") ? 1 : -1;\n\n    var offsetHours = parseInt10(timezone.substring(1));\n    var offsetMinutes = parseInt10(timezone.substring(timezone.indexOf(\":\") + 1));\n    return { d: direction, h: offsetHours, m: offsetMinutes };\n}\n\n/** Prepares a request object so that it can be sent through the network.\n* @param request - Object that represents the request to be sent.\n* @param handler - Handler for data serialization\n* @param context - Context used for preparing the request\n*/\nfunction prepareRequest(request, handler, context) {\n\n    // Default to GET if no method has been specified.\n    if (!request.method) {\n        request.method = \"GET\";\n    }\n\n    if (!request.headers) {\n        request.headers = {};\n    } else {\n        normalizeHeaders(request.headers);\n    }\n\n    if (request.headers.Accept === undefined) {\n        request.headers.Accept = handler.accept;\n    }\n\n    if (assigned(request.data) && request.body === undefined) {\n        handler.write(request, context);\n    }\n\n    if (!assigned(request.headers[\"OData-MaxVersion\"])) {\n        request.headers[\"OData-MaxVersion\"] = handler.maxDataServiceVersion || \"4.0\";\n    }\n\n    if (request.async === undefined) {\n        request.async = true;\n    }\n\n}\n\n/** Traverses a tree of objects invoking callback for every value.\n * @param {Object} item - Object or array to traverse.\n * @param {Function} callback - Callback function with key and value, similar to JSON.parse reviver.\n * @returns {Object} The object with traversed properties.\n Unlike the JSON reviver, this won't delete null members.</remarks>\n*/\nfunction traverseInternal(item, owner, callback) {\n\n    if (item && typeof item === \"object\") {\n        for (var name in item) {\n            var value = item[name];\n            var result = traverseInternal(value, name, callback);\n            result = callback(name, result, owner);\n            if (result !== value) {\n                if (value === undefined) {\n                    delete item[name];\n                } else {\n                    item[name] = result;\n                }\n            }\n        }\n    }\n\n    return item;\n}\n\n/** Traverses a tree of objects invoking callback for every value.\n * @param {Object} item - Object or array to traverse.\n * @param {Function} callback - Callback function with key and value, similar to JSON.parse reviver.\n * @returns {Object} The traversed object.\n * Unlike the JSON reviver, this won't delete null members.</remarks>\n*/\nfunction traverse(item, callback) {\n\n    return callback(\"\", traverseInternal(item, \"\", callback));\n}\n\nexports.dataItemTypeName = dataItemTypeName;\nexports.EDM_BINARY = EDM_BINARY;\nexports.EDM_BOOLEAN = EDM_BOOLEAN;\nexports.EDM_BYTE = EDM_BYTE;\nexports.EDM_DATE = EDM_DATE;\nexports.EDM_DATETIMEOFFSET = EDM_DATETIMEOFFSET;\nexports.EDM_DURATION = EDM_DURATION;\nexports.EDM_DECIMAL = EDM_DECIMAL;\nexports.EDM_DOUBLE = EDM_DOUBLE;\nexports.EDM_GEOGRAPHY = EDM_GEOGRAPHY;\nexports.EDM_GEOGRAPHY_POINT = EDM_GEOGRAPHY_POINT;\nexports.EDM_GEOGRAPHY_LINESTRING = EDM_GEOGRAPHY_LINESTRING;\nexports.EDM_GEOGRAPHY_POLYGON = EDM_GEOGRAPHY_POLYGON;\nexports.EDM_GEOGRAPHY_COLLECTION = EDM_GEOGRAPHY_COLLECTION;\nexports.EDM_GEOGRAPHY_MULTIPOLYGON = EDM_GEOGRAPHY_MULTIPOLYGON;\nexports.EDM_GEOGRAPHY_MULTILINESTRING = EDM_GEOGRAPHY_MULTILINESTRING;\nexports.EDM_GEOGRAPHY_MULTIPOINT = EDM_GEOGRAPHY_MULTIPOINT;\nexports.EDM_GEOMETRY = EDM_GEOMETRY;\nexports.EDM_GEOMETRY_POINT = EDM_GEOMETRY_POINT;\nexports.EDM_GEOMETRY_LINESTRING = EDM_GEOMETRY_LINESTRING;\nexports.EDM_GEOMETRY_POLYGON = EDM_GEOMETRY_POLYGON;\nexports.EDM_GEOMETRY_COLLECTION = EDM_GEOMETRY_COLLECTION;\nexports.EDM_GEOMETRY_MULTIPOLYGON = EDM_GEOMETRY_MULTIPOLYGON;\nexports.EDM_GEOMETRY_MULTILINESTRING = EDM_GEOMETRY_MULTILINESTRING;\nexports.EDM_GEOMETRY_MULTIPOINT = EDM_GEOMETRY_MULTIPOINT;\nexports.EDM_GUID = EDM_GUID;\nexports.EDM_INT16 = EDM_INT16;\nexports.EDM_INT32 = EDM_INT32;\nexports.EDM_INT64 = EDM_INT64;\nexports.EDM_SBYTE = EDM_SBYTE;\nexports.EDM_SINGLE = EDM_SINGLE;\nexports.EDM_STRING = EDM_STRING;\nexports.EDM_TIMEOFDAY = EDM_TIMEOFDAY;\nexports.GEOJSON_POINT = GEOJSON_POINT;\nexports.GEOJSON_LINESTRING = GEOJSON_LINESTRING;\nexports.GEOJSON_POLYGON = GEOJSON_POLYGON;\nexports.GEOJSON_MULTIPOINT = GEOJSON_MULTIPOINT;\nexports.GEOJSON_MULTILINESTRING = GEOJSON_MULTILINESTRING;\nexports.GEOJSON_MULTIPOLYGON = GEOJSON_MULTIPOLYGON;\nexports.GEOJSON_GEOMETRYCOLLECTION = GEOJSON_GEOMETRYCOLLECTION;\nexports.forEachSchema = forEachSchema;\nexports.formatDateTimeOffset = formatDateTimeOffset;\nexports.formatDateTimeOffsetJSON = formatDateTimeOffsetJSON;\nexports.formatDuration = formatDuration;\nexports.formatNumberWidth = formatNumberWidth;\nexports.getCanonicalTimezone = getCanonicalTimezone;\nexports.getCollectionType = getCollectionType;\nexports.invokeRequest = invokeRequest;\nexports.isBatch = isBatch;\nexports.isCollection = isCollection;\nexports.isCollectionType = isCollectionType;\nexports.isComplex = isComplex;\nexports.isDateTimeOffset = isDateTimeOffset;\nexports.isDeferred = isDeferred;\nexports.isEntry = isEntry;\nexports.isFeed = isFeed;\nexports.isGeographyEdmType = isGeographyEdmType;\nexports.isGeometryEdmType = isGeometryEdmType;\nexports.isNamedStream = isNamedStream;\nexports.isPrimitive = isPrimitive;\nexports.isPrimitiveEdmType = isPrimitiveEdmType;\nexports.lookupComplexType = lookupComplexType;\nexports.lookupDefaultEntityContainer = lookupDefaultEntityContainer;\nexports.lookupEntityContainer = lookupEntityContainer;\nexports.lookupEntitySet = lookupEntitySet;\nexports.lookupSingleton = lookupSingleton;\nexports.lookupEntityType = lookupEntityType;\nexports.lookupFunctionImport = lookupFunctionImport;\nexports.lookupNavigationPropertyType = lookupNavigationPropertyType;\nexports.lookupNavigationPropertyEntitySet = lookupNavigationPropertyEntitySet;\nexports.lookupInSchema = lookupInSchema;\nexports.lookupProperty = lookupProperty;\nexports.lookupInMetadata = lookupInMetadata;\nexports.getEntitySetInfo = getEntitySetInfo;\nexports.maxVersion = maxVersion;\nexports.navigationPropertyKind = navigationPropertyKind;\nexports.normalizeHeaders = normalizeHeaders;\nexports.parseBool = parseBool;\n\n\nexports.parseDate = parseDate;\nexports.parseDateTimeOffset = parseDateTimeOffset;\nexports.parseDuration = parseDuration;\nexports.parseTimeOfDay = parseTimeOfDay;\n\nexports.parseInt10 = parseInt10;\nexports.prepareRequest = prepareRequest;\nexports.removeNamespace = removeNamespace;\nexports.traverse = traverse;\n\n\n},{\"./../odatajs.js\":11}],11:[function(require,module,exports){\n\n\n/** @module datajs */\n\n//expose all external usable functions via self.apiFunc = function\nexports.version = {\n    major: 1,\n    minor: 1,\n    build: 1\n};\n\nexports.deferred = require('./odatajs/deferred.js');\nexports.utils = require('./odatajs/utils.js');\nexports.xml = require('./odatajs/xml.js');\n\n\n},{\"./odatajs/deferred.js\":12,\"./odatajs/utils.js\":13,\"./odatajs/xml.js\":14}],12:[function(require,module,exports){\n\n\n/** @module datajs/deferred */\n\n\n\n/** Creates a new function to forward a call.\n * @param {Object} thisValue - Value to use as the 'this' object.\n * @param {String} name - Name of function to forward to.\n * @param {Object} returnValue - Return value for the forward call (helps keep identity when chaining calls).\n * @returns {Function} A new function that will forward a call.\n */\nfunction forwardCall(thisValue, name, returnValue) {\n    return function () {\n        thisValue[name].apply(thisValue, arguments);\n        return returnValue;\n    };\n}\n\n/** Initializes a new DjsDeferred object.\n * <ul>\n * <li> Compability Note A - Ordering of callbacks through chained 'then' invocations <br>\n *\n * The Wiki entry at http://wiki.commonjs.org/wiki/Promises/A\n * implies that .then() returns a distinct object.\n *\n * For compatibility with http://api.jquery.com/category/deferred-object/\n * we return this same object. This affects ordering, as\n * the jQuery version will fire callbacks in registration\n * order regardless of whether they occur on the result\n * or the original object.\n * </li>\n * <li>Compability Note B - Fulfillment value <br>\n *\n * The Wiki entry at http://wiki.commonjs.org/wiki/Promises/A\n * implies that the result of a success callback is the\n * fulfillment value of the object and is received by\n * other success callbacks that are chained.\n *\n * For compatibility with http://api.jquery.com/category/deferred-object/\n * we disregard this value instead.\n * </li></ul>\n * @class DjsDeferred \n */\n function DjsDeferred() {\n    this._arguments = undefined;\n    this._done = undefined;\n    this._fail = undefined;\n    this._resolved = false;\n    this._rejected = false;\n}\n\n\nDjsDeferred.prototype = {\n\n    /** Adds success and error callbacks for this deferred object.\n     * See Compatibility Note A.\n     * @method DjsDeferred#then\n     * @param {function} [fulfilledHandler] - Success callback ( may be null)\n     * @param {function} [errorHandler] - Error callback ( may be null)\n     */\n    then: function (fulfilledHandler, errorHandler) {\n\n        if (fulfilledHandler) {\n            if (!this._done) {\n                this._done = [fulfilledHandler];\n            } else {\n                this._done.push(fulfilledHandler);\n            }\n        }\n\n        if (errorHandler) {\n            if (!this._fail) {\n                this._fail = [errorHandler];\n            } else {\n                this._fail.push(errorHandler);\n            }\n        }\n\n        //// See Compatibility Note A in the DjsDeferred constructor.\n        //// if (!this._next) {\n        ////    this._next = createDeferred();\n        //// }\n        //// return this._next.promise();\n\n        if (this._resolved) {\n            this.resolve.apply(this, this._arguments);\n        } else if (this._rejected) {\n            this.reject.apply(this, this._arguments);\n        }\n\n        return this;\n    },\n\n    /** Invokes success callbacks for this deferred object.\n     * All arguments are forwarded to success callbacks.\n     * @method DjsDeferred#resolve\n     */\n    resolve: function (/* args */) {\n        if (this._done) {\n            var i, len;\n            for (i = 0, len = this._done.length; i < len; i++) {\n                //// See Compability Note B - Fulfillment value.\n                //// var nextValue =\n                this._done[i].apply(null, arguments);\n            }\n\n            //// See Compatibility Note A in the DjsDeferred constructor.\n            //// this._next.resolve(nextValue);\n            //// delete this._next;\n\n            this._done = undefined;\n            this._resolved = false;\n            this._arguments = undefined;\n        } else {\n            this._resolved = true;\n            this._arguments = arguments;\n        }\n    },\n\n    /** Invokes error callbacks for this deferred object.\n     * All arguments are forwarded to error callbacks.\n     * @method DjsDeferred#reject\n     */\n    reject: function (/* args */) {\n        \n        if (this._fail) {\n            var i, len;\n            for (i = 0, len = this._fail.length; i < len; i++) {\n                this._fail[i].apply(null, arguments);\n            }\n\n            this._fail = undefined;\n            this._rejected = false;\n            this._arguments = undefined;\n        } else {\n            this._rejected = true;\n            this._arguments = arguments;\n        }\n    },\n\n    /** Returns a version of this object that has only the read-only methods available.\n     * @method DjsDeferred#promise\n     * @returns An object with only the promise object.\n     */\n\n    promise: function () {\n        var result = {};\n        result.then = forwardCall(this, \"then\", result);\n        return result;\n    }\n};\n\n/** Creates a deferred object.\n * @returns {DjsDeferred} A new deferred object. If jQuery is installed, then a jQueryDeferred object is returned, which provides a superset of features.\n*/\nfunction createDeferred() {\n    if (window.jQuery && window.jQuery.Deferred) {\n        return new window.jQuery.Deferred();\n    } else {\n        return new DjsDeferred();\n    }\n};\n\n\n\n\n/** createDeferred (see {@link module:datajs/deferred~createDeferred}) */\nexports.createDeferred = createDeferred;\n\n/** DjsDeferred (see {@link DjsDeferred}) */\nexports.DjsDeferred = DjsDeferred;\n},{}],13:[function(require,module,exports){\n\n\n/** @module datajs/utils */\n\n\nfunction inBrowser() {\n    return typeof window !== 'undefined';\n}\n\n/** Creates a new ActiveXObject from the given progId.\n * @param {String} progId - ProgId string of the desired ActiveXObject.\n * @returns {Object} The ActiveXObject instance. Null if ActiveX is not supported by the browser.\n * This function throws whatever exception might occur during the creation\n * of the ActiveXObject.\n*/\nvar activeXObject = function (progId) {\n    \n    if (window.ActiveXObject) {\n        return new window.ActiveXObject(progId);\n    }\n    return null;\n};\n\n/** Checks whether the specified value is different from null and undefined.\n * @param [value] Value to check ( may be null)\n * @returns {Boolean} true if the value is assigned; false otherwise.\n*/     \nfunction assigned(value) {\n    return value !== null && value !== undefined;\n}\n\n/** Checks whether the specified item is in the array.\n * @param {Array} [arr] Array to check in.\n * @param item - Item to look for.\n * @returns {Boolean} true if the item is contained, false otherwise.\n*/\nfunction contains(arr, item) {\n    var i, len;\n    for (i = 0, len = arr.length; i < len; i++) {\n        if (arr[i] === item) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/** Given two values, picks the first one that is not undefined.\n * @param a - First value.\n * @param b - Second value.\n * @returns a if it's a defined value; else b.</returns>\n */\nfunction defined(a, b) {\n    return (a !== undefined) ? a : b;\n}\n\n/** Delays the invocation of the specified function until execution unwinds.\n * @param {Function} callback - Callback function.\n */\nfunction delay(callback) {\n\n    if (arguments.length === 1) {\n        window.setTimeout(callback, 0);\n        return;\n    }\n\n    var args = Array.prototype.slice.call(arguments, 1);\n    window.setTimeout(function () {\n        callback.apply(this, args);\n    }, 0);\n}\n\n/** Throws an exception in case that a condition evaluates to false.\n * @param {Boolean} condition - Condition to evaluate.\n * @param {String} message - Message explaining the assertion.\n * @param {Object} data - Additional data to be included in the exception.\n */\n// DATAJS INTERNAL START\nfunction djsassert(condition, message, data) {\n\n\n    if (!condition) {\n        throw { message: \"Assert fired: \" + message, data: data };\n    }\n}\n// DATAJS INTERNAL END\n\n/** Extends the target with the specified values.\n * @param {Object} target - Object to add properties to.\n * @param {Object} values - Object with properties to add into target.\n * @returns {Object} The target object.\n*/\nfunction extend(target, values) {\n    for (var name in values) {\n        target[name] = values[name];\n    }\n\n    return target;\n}\n\nfunction find(arr, callback) {\n    /** Returns the first item in the array that makes the callback function true.\n     * @param {Array} [arr] Array to check in. ( may be null)\n     * @param {Function} callback - Callback function to invoke once per item in the array.\n     * @returns The first item that makes the callback return true; null otherwise or if the array is null.\n    */\n\n    if (arr) {\n        var i, len;\n        for (i = 0, len = arr.length; i < len; i++) {\n            if (callback(arr[i])) {\n                return arr[i];\n            }\n        }\n    }\n    return null;\n}\n\nfunction isArray(value) {\n    /** Checks whether the specified value is an array object.\n     * @param value - Value to check.\n     * @returns {Boolean} true if the value is an array object; false otherwise.\n     */\n\n    return Object.prototype.toString.call(value) === \"[object Array]\";\n}\n\n/** Checks whether the specified value is a Date object.\n * @param value - Value to check.\n * @returns {Boolean} true if the value is a Date object; false otherwise.\n */\nfunction isDate(value) {\n    return Object.prototype.toString.call(value) === \"[object Date]\";\n}\n\n/** Tests whether a value is an object.\n * @param value - Value to test.\n * @returns {Boolean} True is the value is an object; false otherwise.\n * Per javascript rules, null and array values are objects and will cause this function to return true.\n */\nfunction isObject(value) {\n    return typeof value === \"object\";\n}\n\n/** Parses a value in base 10.\n * @param {String} value - String value to parse.\n * @returns {Number} The parsed value, NaN if not a valid value.\n*/   \nfunction parseInt10(value) {\n    return parseInt(value, 10);\n}\n\n/** Renames a property in an object.\n * @param {Object} obj - Object in which the property will be renamed.\n * @param {String} oldName - Name of the property that will be renamed.\n * @param {String} newName - New name of the property.\n * This function will not do anything if the object doesn't own a property with the specified old name.\n */\nfunction renameProperty(obj, oldName, newName) {\n    if (obj.hasOwnProperty(oldName)) {\n        obj[newName] = obj[oldName];\n        delete obj[oldName];\n    }\n}\n\n/** Default error handler.\n * @param {Object} error - Error to handle.\n */\nfunction throwErrorCallback(error) {\n    throw error;\n}\n\n/** Removes leading and trailing whitespaces from a string.\n * @param {String str String to trim\n * @returns {String} The string with no leading or trailing whitespace.\n */\nfunction trimString(str) {\n    if (str.trim) {\n        return str.trim();\n    }\n\n    return str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/** Returns a default value in place of undefined.\n * @param [value] Value to check (may be null)\n * @param defaultValue - Value to return if value is undefined.\n * @returns value if it's defined; defaultValue otherwise.\n * This should only be used for cases where falsy values are valid;\n * otherwise the pattern should be 'x = (value) ? value : defaultValue;'.\n */\nfunction undefinedDefault(value, defaultValue) {\n    return (value !== undefined) ? value : defaultValue;\n}\n\n// Regular expression that splits a uri into its components:\n// 0 - is the matched string.\n// 1 - is the scheme.\n// 2 - is the authority.\n// 3 - is the path.\n// 4 - is the query.\n// 5 - is the fragment.\nvar uriRegEx = /^([^:\\/?#]+:)?(\\/\\/[^\\/?#]*)?([^?#:]+)?(\\?[^#]*)?(#.*)?/;\nvar uriPartNames = [\"scheme\", \"authority\", \"path\", \"query\", \"fragment\"];\n\n/** Gets information about the components of the specified URI.\n * @param {String} uri - URI to get information from.\n * @return  {Object} An object with an isAbsolute flag and part names (scheme, authority, etc.) if available.\n */\nfunction getURIInfo(uri) {\n    var result = { isAbsolute: false };\n\n    if (uri) {\n        var matches = uriRegEx.exec(uri);\n        if (matches) {\n            var i, len;\n            for (i = 0, len = uriPartNames.length; i < len; i++) {\n                if (matches[i + 1]) {\n                    result[uriPartNames[i]] = matches[i + 1];\n                }\n            }\n        }\n        if (result.scheme) {\n            result.isAbsolute = true;\n        }\n    }\n\n    return result;\n}\n\n/** Builds a URI string from its components.\n * @param {Object} uriInfo -  An object with uri parts (scheme, authority, etc.).\n * @returns {String} URI string.\n */\nfunction getURIFromInfo(uriInfo) {\n    return \"\".concat(\n        uriInfo.scheme || \"\",\n        uriInfo.authority || \"\",\n        uriInfo.path || \"\",\n        uriInfo.query || \"\",\n        uriInfo.fragment || \"\");\n}\n\n// Regular expression that splits a uri authority into its subcomponents:\n// 0 - is the matched string.\n// 1 - is the userinfo subcomponent.\n// 2 - is the host subcomponent.\n// 3 - is the port component.\nvar uriAuthorityRegEx = /^\\/{0,2}(?:([^@]*)@)?([^:]+)(?::{1}(\\d+))?/;\n\n// Regular expression that matches percentage enconded octects (i.e %20 or %3A);\nvar pctEncodingRegEx = /%[0-9A-F]{2}/ig;\n\n/** Normalizes the casing of a URI.\n * @param {String} uri - URI to normalize, absolute or relative.\n * @returns {String} The URI normalized to lower case.\n*/\nfunction normalizeURICase(uri) {\n    var uriInfo = getURIInfo(uri);\n    var scheme = uriInfo.scheme;\n    var authority = uriInfo.authority;\n\n    if (scheme) {\n        uriInfo.scheme = scheme.toLowerCase();\n        if (authority) {\n            var matches = uriAuthorityRegEx.exec(authority);\n            if (matches) {\n                uriInfo.authority = \"//\" +\n                (matches[1] ? matches[1] + \"@\" : \"\") +\n                (matches[2].toLowerCase()) +\n                (matches[3] ? \":\" + matches[3] : \"\");\n            }\n        }\n    }\n\n    uri = getURIFromInfo(uriInfo);\n\n    return uri.replace(pctEncodingRegEx, function (str) {\n        return str.toLowerCase();\n    });\n}\n\n/** Normalizes a possibly relative URI with a base URI.\n * @param {String} uri - URI to normalize, absolute or relative\n * @param {String} base - Base URI to compose with (may be null)\n * @returns {String} The composed URI if relative; the original one if absolute.\n */\nfunction normalizeURI(uri, base) {\n    if (!base) {\n        return uri;\n    }\n\n    var uriInfo = getURIInfo(uri);\n    if (uriInfo.isAbsolute) {\n        return uri;\n    }\n\n    var baseInfo = getURIInfo(base);\n    var normInfo = {};\n    var path;\n\n    if (uriInfo.authority) {\n        normInfo.authority = uriInfo.authority;\n        path = uriInfo.path;\n        normInfo.query = uriInfo.query;\n    } else {\n        if (!uriInfo.path) {\n            path = baseInfo.path;\n            normInfo.query = uriInfo.query || baseInfo.query;\n        } else {\n            if (uriInfo.path.charAt(0) === '/') {\n                path = uriInfo.path;\n            } else {\n                path = mergeUriPathWithBase(uriInfo.path, baseInfo.path);\n            }\n            normInfo.query = uriInfo.query;\n        }\n        normInfo.authority = baseInfo.authority;\n    }\n\n    normInfo.path = removeDotsFromPath(path);\n\n    normInfo.scheme = baseInfo.scheme;\n    normInfo.fragment = uriInfo.fragment;\n\n    return getURIFromInfo(normInfo);\n}\n\n/** Merges the path of a relative URI and a base URI.\n * @param {String} uriPath - Relative URI path.</param>\n * @param {String} basePath - Base URI path.\n * @returns {String} A string with the merged path.\n */\nfunction mergeUriPathWithBase(uriPath, basePath) {\n    var path = \"/\";\n    var end;\n\n    if (basePath) {\n        end = basePath.lastIndexOf(\"/\");\n        path = basePath.substring(0, end);\n\n        if (path.charAt(path.length - 1) !== \"/\") {\n            path = path + \"/\";\n        }\n    }\n\n    return path + uriPath;\n}\n\n/** Removes the special folders . and .. from a URI's path.\n * @param {string} path - URI path component.\n * @returns {String} Path without any . and .. folders.\n */\nfunction removeDotsFromPath(path) {\n    var result = \"\";\n    var segment = \"\";\n    var end;\n\n    while (path) {\n        if (path.indexOf(\"..\") === 0 || path.indexOf(\".\") === 0) {\n            path = path.replace(/^\\.\\.?\\/?/g, \"\");\n        } else if (path.indexOf(\"/..\") === 0) {\n            path = path.replace(/^\\/\\..\\/?/g, \"/\");\n            end = result.lastIndexOf(\"/\");\n            if (end === -1) {\n                result = \"\";\n            } else {\n                result = result.substring(0, end);\n            }\n        } else if (path.indexOf(\"/.\") === 0) {\n            path = path.replace(/^\\/\\.\\/?/g, \"/\");\n        } else {\n            segment = path;\n            end = path.indexOf(\"/\", 1);\n            if (end !== -1) {\n                segment = path.substring(0, end);\n            }\n            result = result + segment;\n            path = path.replace(segment, \"\");\n        }\n    }\n    return result;\n}\n\nfunction convertByteArrayToHexString(str) {\n    var arr = [];\n    if (window.atob === undefined) {\n        arr = decodeBase64(str);\n    } else {\n        var binaryStr = window.atob(str);\n        for (var i = 0; i < binaryStr.length; i++) {\n            arr.push(binaryStr.charCodeAt(i));\n        }\n    }\n    var hexValue = \"\";\n    var hexValues = \"0123456789ABCDEF\";\n    for (var j = 0; j < arr.length; j++) {\n        var t = arr[j];\n        hexValue += hexValues[t >> 4];\n        hexValue += hexValues[t & 0x0F];\n    }\n    return hexValue;\n}\n\nfunction decodeBase64(str) {\n    var binaryString = \"\";\n    for (var i = 0; i < str.length; i++) {\n        var base65IndexValue = getBase64IndexValue(str[i]);\n        var binaryValue = \"\";\n        if (base65IndexValue !== null) {\n            binaryValue = base65IndexValue.toString(2);\n            binaryString += addBase64Padding(binaryValue);\n        }\n    }\n    var byteArray = [];\n    var numberOfBytes = parseInt(binaryString.length / 8, 10);\n    for (i = 0; i < numberOfBytes; i++) {\n        var intValue = parseInt(binaryString.substring(i * 8, (i + 1) * 8), 2);\n        byteArray.push(intValue);\n    }\n    return byteArray;\n}\n\nfunction getBase64IndexValue(character) {\n    var asciiCode = character.charCodeAt(0);\n    var asciiOfA = 65;\n    var differenceBetweenZanda = 6;\n    if (asciiCode >= 65 && asciiCode <= 90) {           // between \"A\" and \"Z\" inclusive\n        return asciiCode - asciiOfA;\n    } else if (asciiCode >= 97 && asciiCode <= 122) {   // between 'a' and 'z' inclusive\n        return asciiCode - asciiOfA - differenceBetweenZanda;\n    } else if (asciiCode >= 48 && asciiCode <= 57) {    // between '0' and '9' inclusive\n        return asciiCode + 4;\n    } else if (character == \"+\") {\n        return 62;\n    } else if (character == \"/\") {\n        return 63;\n    } else {\n        return null;\n    }\n}\n\nfunction addBase64Padding(binaryString) {\n    while (binaryString.length < 6) {\n        binaryString = \"0\" + binaryString;\n    }\n    return binaryString;\n\n}\n\nfunction getJsonValueArraryLength(data) {\n    if (data && data.value) {\n        return data.value.length;\n    }\n\n    return 0;\n}\n\nfunction sliceJsonValueArray(data, start, end) {\n    if (data === undefined || data.value === undefined) {\n        return data;\n    }\n\n    if (start < 0) {\n        start = 0;\n    }\n\n    var length = getJsonValueArraryLength(data);\n    if (length < end) {\n        end = length;\n    }\n\n    var newdata = {};\n    for (var property in data) {\n        if (property == \"value\") {\n            newdata[property] = data[property].slice(start, end);\n        } else {\n            newdata[property] = data[property];\n        }\n    }\n\n    return newdata;\n}\n\nfunction concatJsonValueArray(data, concatData) {\n    if (concatData === undefined || concatData.value === undefined) {\n        return data;\n    }\n\n    if (data === undefined || Object.keys(data).length === 0) {\n        return concatData;\n    }\n\n    if (data.value === undefined) {\n        data.value = concatData.value;\n        return data;\n    }\n\n    data.value = data.value.concat(concatData.value);\n\n    return data;\n}\n\nfunction endsWith(input, search) {\n    return input.indexOf(search, input.length - search.length) !== -1;\n}\n\nfunction startsWith (input, search) {\n    return input.indexOf(search) === 0;\n}\n\nfunction getFormatKind(format, defaultFormatKind) {\n    var formatKind = defaultFormatKind;\n    if (!assigned(format)) {\n        return formatKind;\n    }\n\n    var normalizedFormat = format.toLowerCase();\n    switch (normalizedFormat) {\n        case \"none\":\n            formatKind = 0;\n            break;\n        case \"minimal\":\n            formatKind = 1;\n            break;\n        case \"full\":\n            formatKind = 2;\n            break;\n        default:\n            break;\n    }\n\n    return formatKind;\n}\n\n\n    \n    \nexports.inBrowser = inBrowser;\nexports.activeXObject = activeXObject;\nexports.assigned = assigned;\nexports.contains = contains;\nexports.defined = defined;\nexports.delay = delay;\nexports.djsassert = djsassert;\nexports.extend = extend;\nexports.find = find;\nexports.getURIInfo = getURIInfo;\nexports.isArray = isArray;\nexports.isDate = isDate;\nexports.isObject = isObject;\nexports.normalizeURI = normalizeURI;\nexports.normalizeURICase = normalizeURICase;\nexports.parseInt10 = parseInt10;\nexports.renameProperty = renameProperty;\nexports.throwErrorCallback = throwErrorCallback;\nexports.trimString = trimString;\nexports.undefinedDefault = undefinedDefault;\nexports.decodeBase64 = decodeBase64;\nexports.convertByteArrayToHexString = convertByteArrayToHexString;\nexports.getJsonValueArraryLength = getJsonValueArraryLength;\nexports.sliceJsonValueArray = sliceJsonValueArray;\nexports.concatJsonValueArray = concatJsonValueArray;\nexports.startsWith = startsWith;\nexports.endsWith = endsWith;\nexports.getFormatKind = getFormatKind;\n},{}],14:[function(require,module,exports){\n\n \n\n/** @module datajs/xml */\n\nvar utils    = require('./utils.js');\n\nvar activeXObject = utils.activeXObject;\nvar djsassert = utils.djsassert;\nvar extend = utils.extend;\nvar isArray = utils.isArray;\nvar normalizeURI = utils.normalizeURI;\n\n// URI prefixes to generate smaller code.\nvar http = \"http://\";\nvar w3org = http + \"www.w3.org/\";               // http://www.w3.org/\n\nvar xhtmlNS = w3org + \"1999/xhtml\";             // http://www.w3.org/1999/xhtml\nvar xmlnsNS = w3org + \"2000/xmlns/\";            // http://www.w3.org/2000/xmlns/\nvar xmlNS = w3org + \"XML/1998/namespace\";       // http://www.w3.org/XML/1998/namespace\n\nvar mozillaParserErroNS = http + \"www.mozilla.org/newlayout/xml/parsererror.xml\";\n\n/** Checks whether the specified string has leading or trailing spaces.\n * @param {String} text - String to check.\n * @returns {Boolean} true if text has any leading or trailing whitespace; false otherwise.\n */\nfunction hasLeadingOrTrailingWhitespace(text) {\n    var re = /(^\\s)|(\\s$)/;\n    return re.test(text);\n}\n\n/** Determines whether the specified text is empty or whitespace.\n * @param {String} text - Value to inspect.\n * @returns {Boolean} true if the text value is empty or all whitespace; false otherwise.\n */\nfunction isWhitespace(text) {\n\n\n    var ws = /^\\s*$/;\n    return text === null || ws.test(text);\n}\n\n/** Determines whether the specified element has xml:space='preserve' applied.\n * @param domElement - Element to inspect.\n * @returns {Boolean} Whether xml:space='preserve' is in effect.\n */\nfunction isWhitespacePreserveContext(domElement) {\n\n\n    while (domElement !== null && domElement.nodeType === 1) {\n        var val = xmlAttributeValue(domElement, \"space\", xmlNS);\n        if (val === \"preserve\") {\n            return true;\n        } else if (val === \"default\") {\n            break;\n        } else {\n            domElement = domElement.parentNode;\n        }\n    }\n\n    return false;\n}\n\n/** Determines whether the attribute is a XML namespace declaration.\n * @param domAttribute - Element to inspect.\n * @return {Boolean} True if the attribute is a namespace declaration (its name is 'xmlns' or starts with 'xmlns:'; false otherwise.\n */\nfunction isXmlNSDeclaration(domAttribute) {\n    var nodeName = domAttribute.nodeName;\n    return nodeName == \"xmlns\" || nodeName.indexOf(\"xmlns:\") === 0;\n}\n\n/** Safely set as property in an object by invoking obj.setProperty.\n * @param obj - Object that exposes a setProperty method.\n * @param {String} name - Property name\n * @param value - Property value.\n */\nfunction safeSetProperty(obj, name, value) {\n\n\n    try {\n        obj.setProperty(name, value);\n    } catch (_) { }\n}\n\n/** Creates an configures new MSXML 3.0 ActiveX object.\n * @returns {Object} New MSXML 3.0 ActiveX object.\n * This function throws any exception that occurs during the creation\n * of the MSXML 3.0 ActiveX object.\n */\nfunction msXmlDom3() {\n    var msxml3 = activeXObject(\"Msxml2.DOMDocument.3.0\");\n    if (msxml3) {\n        safeSetProperty(msxml3, \"ProhibitDTD\", true);\n        safeSetProperty(msxml3, \"MaxElementDepth\", 256);\n        safeSetProperty(msxml3, \"AllowDocumentFunction\", false);\n        safeSetProperty(msxml3, \"AllowXsltScript\", false);\n    }\n    return msxml3;\n}\n\n/** Creates an configures new MSXML 6.0 or MSXML 3.0 ActiveX object.\n * @returns {Object} New MSXML 3.0 ActiveX object.\n * This function will try to create a new MSXML 6.0 ActiveX object. If it fails then\n * it will fallback to create a new MSXML 3.0 ActiveX object. Any exception that\n * happens during the creation of the MSXML 6.0 will be handled by the function while\n * the ones that happend during the creation of the MSXML 3.0 will be thrown.\n */\nfunction msXmlDom() {\n    try {\n        var msxml = activeXObject(\"Msxml2.DOMDocument.6.0\");\n        if (msxml) {\n            msxml.async = true;\n        }\n        return msxml;\n    } catch (_) {\n        return msXmlDom3();\n    }\n}\n\n/** Parses an XML string using the MSXML DOM.\n * @returns {Object} New MSXML DOMDocument node representing the parsed XML string.\n * This function throws any exception that occurs during the creation\n * of the MSXML ActiveX object.  It also will throw an exception\n * in case of a parsing error.\n */\nfunction msXmlParse(text) {\n    var dom = msXmlDom();\n    if (!dom) {\n        return null;\n    }\n\n    dom.loadXML(text);\n    var parseError = dom.parseError;\n    if (parseError.errorCode !== 0) {\n        xmlThrowParserError(parseError.reason, parseError.srcText, text);\n    }\n    return dom;\n}\n\n/** Throws a new exception containing XML parsing error information.\n * @param exceptionOrReason - String indicating the reason of the parsing failure or Object detailing the parsing error.\n * @param {String} srcText -     String indicating the part of the XML string that caused the parsing error.\n * @param {String} errorXmlText - XML string for wich the parsing failed.\n */\nfunction xmlThrowParserError(exceptionOrReason, srcText, errorXmlText) {\n\n    if (typeof exceptionOrReason === \"string\") {\n        exceptionOrReason = { message: exceptionOrReason };\n    }\n    throw extend(exceptionOrReason, { srcText: srcText || \"\", errorXmlText: errorXmlText || \"\" });\n}\n\n/** Returns an XML DOM document from the specified text.\n * @param {String} text - Document text.\n * @returns XML DOM document.\n * This function will throw an exception in case of a parse error\n */\nfunction xmlParse(text) {\n    var domParser = window.DOMParser && new window.DOMParser();\n    var dom;\n\n    if (!domParser) {\n        dom = msXmlParse(text);\n        if (!dom) {\n            xmlThrowParserError(\"XML DOM parser not supported\");\n        }\n        return dom;\n    }\n\n    try {\n        dom = domParser.parseFromString(text, \"text/xml\");\n    } catch (e) {\n        xmlThrowParserError(e, \"\", text);\n    }\n\n    var element = dom.documentElement;\n    var nsURI = element.namespaceURI;\n    var localName = xmlLocalName(element);\n\n    // Firefox reports errors by returing the DOM for an xml document describing the problem.\n    if (localName === \"parsererror\" && nsURI === mozillaParserErroNS) {\n        var srcTextElement = xmlFirstChildElement(element, mozillaParserErroNS, \"sourcetext\");\n        var srcText = srcTextElement ? xmlNodeValue(srcTextElement) : \"\";\n        xmlThrowParserError(xmlInnerText(element) || \"\", srcText, text);\n    }\n\n    // Chrome (and maybe other webkit based browsers) report errors by injecting a header with an error message.\n    // The error may be localized, so instead we simply check for a header as the\n    // top element or descendant child of the document.\n    if (localName === \"h3\" && nsURI === xhtmlNS || xmlFirstDescendantElement(element, xhtmlNS, \"h3\")) {\n        var reason = \"\";\n        var siblings = [];\n        var cursor = element.firstChild;\n        while (cursor) {\n            if (cursor.nodeType === 1) {\n                reason += xmlInnerText(cursor) || \"\";\n            }\n            siblings.push(cursor.nextSibling);\n            cursor = cursor.firstChild || siblings.shift();\n        }\n        reason += xmlInnerText(element) || \"\";\n        xmlThrowParserError(reason, \"\", text);\n    }\n\n    return dom;\n}\n\n/** Builds a XML qualified name string in the form of \"prefix:name\".\n * @param {String} prefix - Prefix string (may be null)\n * @param {String} name - Name string to qualify with the prefix.\n * @returns {String} Qualified name.\n */\nfunction xmlQualifiedName(prefix, name) {\n    return prefix ? prefix + \":\" + name : name;\n}\n\n/** Appends a text node into the specified DOM element node.\n * @param domNode - DOM node for the element.\n * @param {String} text - Text to append as a child of element.\n*/\nfunction xmlAppendText(domNode, textNode) {\n    if (hasLeadingOrTrailingWhitespace(textNode.data)) {\n        var attr = xmlAttributeNode(domNode, xmlNS, \"space\");\n        if (!attr) {\n            attr = xmlNewAttribute(domNode.ownerDocument, xmlNS, xmlQualifiedName(\"xml\", \"space\"));\n            xmlAppendChild(domNode, attr);\n        }\n        attr.value = \"preserve\";\n    }\n    domNode.appendChild(textNode);\n    return domNode;\n}\n\n/** Iterates through the XML element's attributes and invokes the callback function for each one.\n * @param element - Wrapped element to iterate over.\n * @param {Function} onAttributeCallback - Callback function to invoke with wrapped attribute nodes.\n*/\nfunction xmlAttributes(element, onAttributeCallback) {\n    var attributes = element.attributes;\n    var i, len;\n    for (i = 0, len = attributes.length; i < len; i++) {\n        onAttributeCallback(attributes.item(i));\n    }\n}\n\n/** Returns the value of a DOM element's attribute.\n * @param domNode - DOM node for the owning element.\n * @param {String} localName - Local name of the attribute.\n * @param {String} nsURI - Namespace URI of the attribute.\n * @returns {String} - The attribute value, null if not found (may be null)\n */\nfunction xmlAttributeValue(domNode, localName, nsURI) {\n\n    var attribute = xmlAttributeNode(domNode, localName, nsURI);\n    return attribute ? xmlNodeValue(attribute) : null;\n}\n\n/** Gets an attribute node from a DOM element.\n * @param domNode - DOM node for the owning element.\n * @param {String} localName - Local name of the attribute.\n * @param {String} nsURI - Namespace URI of the attribute.\n * @returns The attribute node, null if not found.\n */\nfunction xmlAttributeNode(domNode, localName, nsURI) {\n\n    var attributes = domNode.attributes;\n    if (attributes.getNamedItemNS) {\n        return attributes.getNamedItemNS(nsURI || null, localName);\n    }\n\n    return attributes.getQualifiedItem(localName, nsURI) || null;\n}\n\n/** Gets the value of the xml:base attribute on the specified element.\n * @param domNode - Element to get xml:base attribute value from.\n * @param [baseURI] - Base URI used to normalize the value of the xml:base attribute ( may be null)\n * @returns {String} Value of the xml:base attribute if found; the baseURI or null otherwise.\n */\nfunction xmlBaseURI(domNode, baseURI) {\n\n    var base = xmlAttributeNode(domNode, \"base\", xmlNS);\n    return (base ? normalizeURI(base.value, baseURI) : baseURI) || null;\n}\n\n\n/** Iterates through the XML element's child DOM elements and invokes the callback function for each one.\n * @param element - DOM Node containing the DOM elements to iterate over.\n * @param {Function} onElementCallback - Callback function to invoke for each child DOM element.\n*/\nfunction xmlChildElements(domNode, onElementCallback) {\n\n    xmlTraverse(domNode, /*recursive*/false, function (child) {\n        if (child.nodeType === 1) {\n            onElementCallback(child);\n        }\n        // continue traversing.\n        return true;\n    });\n}\n\n/** Gets the descendant element under root that corresponds to the specified path and namespace URI.\n * @param root - DOM element node from which to get the descendant element.\n * @param {String} namespaceURI - The namespace URI of the element to match.\n * @param {String} path - Path to the desired descendant element.\n * @return The element specified by path and namespace URI.\n * All the elements in the path are matched against namespaceURI.\n * The function will stop searching on the first element that doesn't match the namespace and the path.\n */\nfunction xmlFindElementByPath(root, namespaceURI, path) {\n    var parts = path.split(\"/\");\n    var i, len;\n    for (i = 0, len = parts.length; i < len; i++) {\n        root = root && xmlFirstChildElement(root, namespaceURI, parts[i]);\n    }\n    return root || null;\n}\n\n/** Gets the DOM element or DOM attribute node under root that corresponds to the specified path and namespace URI.\n * @param root - DOM element node from which to get the descendant node.\n * @param {String} namespaceURI - The namespace URI of the node to match.\n * @param {String} path - Path to the desired descendant node.\n * @return The node specified by path and namespace URI.</returns>\n\n* This function will traverse the path and match each node associated to a path segement against the namespace URI.\n* The traversal stops when the whole path has been exahusted or a node that doesn't belogong the specified namespace is encountered.\n* The last segment of the path may be decorated with a starting @ character to indicate that the desired node is a DOM attribute.\n*/\nfunction xmlFindNodeByPath(root, namespaceURI, path) {\n    \n\n    var lastSegmentStart = path.lastIndexOf(\"/\");\n    var nodePath = path.substring(lastSegmentStart + 1);\n    var parentPath = path.substring(0, lastSegmentStart);\n\n    var node = parentPath ? xmlFindElementByPath(root, namespaceURI, parentPath) : root;\n    if (node) {\n        if (nodePath.charAt(0) === \"@\") {\n            return xmlAttributeNode(node, nodePath.substring(1), namespaceURI);\n        }\n        return xmlFirstChildElement(node, namespaceURI, nodePath);\n    }\n    return null;\n}\n\n/** Returns the first child DOM element under the specified DOM node that matches the specified namespace URI and local name.\n * @param domNode - DOM node from which the child DOM element is going to be retrieved.\n * @param {String} [namespaceURI] - \n * @param {String} [localName] - \n * @return The node's first child DOM element that matches the specified namespace URI and local name; null otherwise.</returns>\n */\nfunction xmlFirstChildElement(domNode, namespaceURI, localName) {\n\n    return xmlFirstElementMaybeRecursive(domNode, namespaceURI, localName, /*recursive*/false);\n}\n\n/** Returns the first descendant DOM element under the specified DOM node that matches the specified namespace URI and local name.\n * @param domNode - DOM node from which the descendant DOM element is going to be retrieved.\n * @param {String} [namespaceURI] - \n * @param {String} [localName] - \n * @return The node's first descendant DOM element that matches the specified namespace URI and local name; null otherwise.\n*/\nfunction xmlFirstDescendantElement(domNode, namespaceURI, localName) {\n    if (domNode.getElementsByTagNameNS) {\n        var result = domNode.getElementsByTagNameNS(namespaceURI, localName);\n        return result.length > 0 ? result[0] : null;\n    }\n    return xmlFirstElementMaybeRecursive(domNode, namespaceURI, localName, /*recursive*/true);\n}\n\n/** Returns the first descendant DOM element under the specified DOM node that matches the specified namespace URI and local name.\n * @param domNode - DOM node from which the descendant DOM element is going to be retrieved.\n * @param {String} [namespaceURI] - \n * @param {String} [localName] - \n * @param {Boolean} recursive \n * - True if the search should include all the descendants of the DOM node.  \n * - False if the search should be scoped only to the direct children of the DOM node.\n * @return The node's first descendant DOM element that matches the specified namespace URI and local name; null otherwise.\n */\nfunction xmlFirstElementMaybeRecursive(domNode, namespaceURI, localName, recursive) {\n\n    var firstElement = null;\n    xmlTraverse(domNode, recursive, function (child) {\n        if (child.nodeType === 1) {\n            var isExpectedNamespace = !namespaceURI || xmlNamespaceURI(child) === namespaceURI;\n            var isExpectedNodeName = !localName || xmlLocalName(child) === localName;\n\n            if (isExpectedNamespace && isExpectedNodeName) {\n                firstElement = child;\n            }\n        }\n        return firstElement === null;\n    });\n    return firstElement;\n}\n\n/** Gets the concatenated value of all immediate child text and CDATA nodes for the specified element.\n * @param domElement - Element to get values for.\n * @returns {String} Text for all direct children.\n */\nfunction xmlInnerText(xmlElement) {\n\n    var result = null;\n    var root = (xmlElement.nodeType === 9 && xmlElement.documentElement) ? xmlElement.documentElement : xmlElement;\n    var whitespaceAlreadyRemoved = root.ownerDocument.preserveWhiteSpace === false;\n    var whitespacePreserveContext;\n\n    xmlTraverse(root, false, function (child) {\n        if (child.nodeType === 3 || child.nodeType === 4) {\n            // isElementContentWhitespace indicates that this is 'ignorable whitespace',\n            // but it's not defined by all browsers, and does not honor xml:space='preserve'\n            // in some implementations.\n            //\n            // If we can't tell either way, we walk up the tree to figure out whether\n            // xml:space is set to preserve; otherwise we discard pure-whitespace.\n            //\n            // For example <a>  <b>1</b></a>. The space between <a> and <b> is usually 'ignorable'.\n            var text = xmlNodeValue(child);\n            var shouldInclude = whitespaceAlreadyRemoved || !isWhitespace(text);\n            if (!shouldInclude) {\n                // Walk up the tree to figure out whether we are in xml:space='preserve' context\n                // for the cursor (needs to happen only once).\n                if (whitespacePreserveContext === undefined) {\n                    whitespacePreserveContext = isWhitespacePreserveContext(root);\n                }\n\n                shouldInclude = whitespacePreserveContext;\n            }\n\n            if (shouldInclude) {\n                if (!result) {\n                    result = text;\n                } else {\n                    result += text;\n                }\n            }\n        }\n        // Continue traversing?\n        return true;\n    });\n    return result;\n}\n\n/** Returns the localName of a XML node.\n * @param domNode - DOM node to get the value from.\n * @returns {String} localName of domNode.\n */\nfunction xmlLocalName(domNode) {\n\n    return domNode.localName || domNode.baseName;\n}\n\n/** Returns the namespace URI of a XML node.\n * @param node - DOM node to get the value from.\n * @returns {String} Namespace URI of domNode.\n */\nfunction xmlNamespaceURI(domNode) {\n\n    return domNode.namespaceURI || null;\n}\n\n/** Returns the value or the inner text of a XML node.\n * @param node - DOM node to get the value from.\n * @return Value of the domNode or the inner text if domNode represents a DOM element node.\n */\nfunction xmlNodeValue(domNode) {\n    \n    if (domNode.nodeType === 1) {\n        return xmlInnerText(domNode);\n    }\n    return domNode.nodeValue;\n}\n\n/** Walks through the descendants of the domNode and invokes a callback for each node.\n * @param domNode - DOM node whose descendants are going to be traversed.\n * @param {Boolean} recursive\n * - True if the traversal should include all the descenants of the DOM node.\n * - False if the traversal should be scoped only to the direct children of the DOM node.\n * @returns {String} Namespace URI of node.\n */\nfunction xmlTraverse(domNode, recursive, onChildCallback) {\n\n    var subtrees = [];\n    var child = domNode.firstChild;\n    var proceed = true;\n    while (child && proceed) {\n        proceed = onChildCallback(child);\n        if (proceed) {\n            if (recursive && child.firstChild) {\n                subtrees.push(child.firstChild);\n            }\n            child = child.nextSibling || subtrees.shift();\n        }\n    }\n}\n\n/** Returns the next sibling DOM element of the specified DOM node.\n * @param domNode - DOM node from which the next sibling is going to be retrieved.\n * @param {String} [namespaceURI] - \n * @param {String} [localName] - \n * @return The node's next sibling DOM element, null if there is none.</returns>\n */\nfunction xmlSiblingElement(domNode, namespaceURI, localName) {\n\n    var sibling = domNode.nextSibling;\n    while (sibling) {\n        if (sibling.nodeType === 1) {\n            var isExpectedNamespace = !namespaceURI || xmlNamespaceURI(sibling) === namespaceURI;\n            var isExpectedNodeName = !localName || xmlLocalName(sibling) === localName;\n\n            if (isExpectedNamespace && isExpectedNodeName) {\n                return sibling;\n            }\n        }\n        sibling = sibling.nextSibling;\n    }\n    return null;\n}\n\n/** Creates a new empty DOM document node.\n * @return New DOM document node.</returns>\n *\n * This function will first try to create a native DOM document using\n * the browsers createDocument function.  If the browser doesn't\n * support this but supports ActiveXObject, then an attempt to create\n * an MSXML 6.0 DOM will be made. If this attempt fails too, then an attempt\n * for creating an MXSML 3.0 DOM will be made.  If this last attemp fails or\n * the browser doesn't support ActiveXObject then an exception will be thrown.\n */\nfunction xmlDom() {\n    var implementation = window.document.implementation;\n    return (implementation && implementation.createDocument) ?\n       implementation.createDocument(null, null, null) :\n       msXmlDom();\n}\n\n/** Appends a collection of child nodes or string values to a parent DOM node.\n * @param parent - DOM node to which the children will be appended.\n * @param {Array} children - Array containing DOM nodes or string values that will be appended to the parent.\n * @return The parent with the appended children or string values.</returns>\n *  If a value in the children collection is a string, then a new DOM text node is going to be created\n *  for it and then appended to the parent.\n */\nfunction xmlAppendChildren(parent, children) {\n    if (!isArray(children)) {\n        return xmlAppendChild(parent, children);\n    }\n\n    var i, len;\n    for (i = 0, len = children.length; i < len; i++) {\n        children[i] && xmlAppendChild(parent, children[i]);\n    }\n    return parent;\n}\n\n/** Appends a child node or a string value to a parent DOM node.\n * @param parent - DOM node to which the child will be appended.\n * @param child - Child DOM node or string value to append to the parent.\n * @return The parent with the appended child or string value.</returns>\n * If child is a string value, then a new DOM text node is going to be created\n * for it and then appended to the parent.\n */\nfunction xmlAppendChild(parent, child) {\n\n    djsassert(parent !== child, \"xmlAppendChild() - parent and child are one and the same!\");\n    if (child) {\n        if (typeof child === \"string\") {\n            return xmlAppendText(parent, xmlNewText(parent.ownerDocument, child));\n        }\n        if (child.nodeType === 2) {\n            parent.setAttributeNodeNS ? parent.setAttributeNodeNS(child) : parent.setAttributeNode(child);\n        } else {\n            parent.appendChild(child);\n        }\n    }\n    return parent;\n}\n\n/** Creates a new DOM attribute node.\n * @param dom - DOM document used to create the attribute.\n * @param {String} prefix - Namespace prefix.\n * @param {String} namespaceURI - Namespace URI.\n * @return DOM attribute node for the namespace declaration.\n */\nfunction xmlNewAttribute(dom, namespaceURI, qualifiedName, value) {\n\n    var attribute =\n        dom.createAttributeNS && dom.createAttributeNS(namespaceURI, qualifiedName) ||\n        dom.createNode(2, qualifiedName, namespaceURI || undefined);\n\n    attribute.value = value || \"\";\n    return attribute;\n}\n\n/** Creates a new DOM element node.\n * @param dom - DOM document used to create the DOM element.\n * @param {String} namespaceURI - Namespace URI of the new DOM element.\n * @param {String} qualifiedName - Qualified name in the form of \"prefix:name\" of the new DOM element.\n * @param {Array} [children] Collection of child DOM nodes or string values that are going to be appended to the new DOM element.\n * @return New DOM element.</returns>\n * If a value in the children collection is a string, then a new DOM text node is going to be created\n * for it and then appended to the new DOM element.\n */\nfunction xmlNewElement(dom, nampespaceURI, qualifiedName, children) {\n    var element =\n        dom.createElementNS && dom.createElementNS(nampespaceURI, qualifiedName) ||\n        dom.createNode(1, qualifiedName, nampespaceURI || undefined);\n\n    return xmlAppendChildren(element, children || []);\n}\n\n/** Creates a namespace declaration attribute.\n * @param dom - DOM document used to create the attribute.\n * @param {String} namespaceURI - Namespace URI.\n * @param {String} prefix - Namespace prefix.\n * @return DOM attribute node for the namespace declaration.</returns>\n */\nfunction xmlNewNSDeclaration(dom, namespaceURI, prefix) {\n    return xmlNewAttribute(dom, xmlnsNS, xmlQualifiedName(\"xmlns\", prefix), namespaceURI);\n}\n\n/** Creates a new DOM document fragment node for the specified xml text.\n * @param dom - DOM document from which the fragment node is going to be created.\n * @param {String} text XML text to be represented by the XmlFragment.\n * @return New DOM document fragment object.\n */\nfunction xmlNewFragment(dom, text) {\n\n    var value = \"<c>\" + text + \"</c>\";\n    var tempDom = xmlParse(value);\n    var tempRoot = tempDom.documentElement;\n    var imported = (\"importNode\" in dom) ? dom.importNode(tempRoot, true) : tempRoot;\n    var fragment = dom.createDocumentFragment();\n\n    var importedChild = imported.firstChild;\n    while (importedChild) {\n        fragment.appendChild(importedChild);\n        importedChild = importedChild.nextSibling;\n    }\n    return fragment;\n}\n\n/** Creates new DOM text node.\n * @param dom - DOM document used to create the text node.\n * @param {String} text - Text value for the DOM text node.\n * @return DOM text node.</returns>\n */ \nfunction xmlNewText(dom, text) {\n    return dom.createTextNode(text);\n}\n\n/** Creates a new DOM element or DOM attribute node as specified by path and appends it to the DOM tree pointed by root.\n * @param dom - DOM document used to create the new node.\n * @param root - DOM element node used as root of the subtree on which the new nodes are going to be created.\n * @param {String} namespaceURI - Namespace URI of the new DOM element or attribute.\n * @param {String} namespacePrefix - Prefix used to qualify the name of the new DOM element or attribute.\n * @param {String} Path - Path string describing the location of the new DOM element or attribute from the root element.\n * @return DOM element or attribute node for the last segment of the path.</returns>\n\n * This function will traverse the path and will create a new DOM element with the specified namespace URI and prefix\n * for each segment that doesn't have a matching element under root.\n * The last segment of the path may be decorated with a starting @ character. In this case a new DOM attribute node\n * will be created.\n */\nfunction xmlNewNodeByPath(dom, root, namespaceURI, prefix, path) {\n    var name = \"\";\n    var parts = path.split(\"/\");\n    var xmlFindNode = xmlFirstChildElement;\n    var xmlNewNode = xmlNewElement;\n    var xmlNode = root;\n\n    var i, len;\n    for (i = 0, len = parts.length; i < len; i++) {\n        name = parts[i];\n        if (name.charAt(0) === \"@\") {\n            name = name.substring(1);\n            xmlFindNode = xmlAttributeNode;\n            xmlNewNode = xmlNewAttribute;\n        }\n\n        var childNode = xmlFindNode(xmlNode, namespaceURI, name);\n        if (!childNode) {\n            childNode = xmlNewNode(dom, namespaceURI, xmlQualifiedName(prefix, name));\n            xmlAppendChild(xmlNode, childNode);\n        }\n        xmlNode = childNode;\n    }\n    return xmlNode;\n}\n\n/** Returns the text representation of the document to which the specified node belongs.\n * @param root - Wrapped element in the document to serialize.\n * @returns {String} Serialized document.\n*/\nfunction xmlSerialize(domNode) {\n    var xmlSerializer = window.XMLSerializer;\n    if (xmlSerializer) {\n        var serializer = new xmlSerializer();\n        return serializer.serializeToString(domNode);\n    }\n\n    if (domNode.xml) {\n        return domNode.xml;\n    }\n\n    throw { message: \"XML serialization unsupported\" };\n}\n\n/** Returns the XML representation of the all the descendants of the node.\n * @param domNode - Node to serialize.</param>\n * @returns {String} The XML representation of all the descendants of the node.\n */\nfunction xmlSerializeDescendants(domNode) {\n    var children = domNode.childNodes;\n    var i, len = children.length;\n    if (len === 0) {\n        return \"\";\n    }\n\n    // Some implementations of the XMLSerializer don't deal very well with fragments that\n    // don't have a DOMElement as their first child. The work around is to wrap all the\n    // nodes in a dummy root node named \"c\", serialize it and then just extract the text between\n    // the <c> and the </c> substrings.\n\n    var dom = domNode.ownerDocument;\n    var fragment = dom.createDocumentFragment();\n    var fragmentRoot = dom.createElement(\"c\");\n\n    fragment.appendChild(fragmentRoot);\n    // Move the children to the fragment tree.\n    for (i = 0; i < len; i++) {\n        fragmentRoot.appendChild(children[i]);\n    }\n\n    var xml = xmlSerialize(fragment);\n    xml = xml.substr(3, xml.length - 7);\n\n    // Move the children back to the original dom tree.\n    for (i = 0; i < len; i++) {\n        domNode.appendChild(fragmentRoot.childNodes[i]);\n    }\n\n    return xml;\n}\n\n/** Returns the XML representation of the node and all its descendants.\n * @param domNode - Node to serialize\n * @returns {String} The XML representation of the node and all its descendants.\n */\nfunction xmlSerializeNode(domNode) {\n\n    var xml = domNode.xml;\n    if (xml !== undefined) {\n        return xml;\n    }\n\n    if (window.XMLSerializer) {\n        var serializer = new window.XMLSerializer();\n        return serializer.serializeToString(domNode);\n    }\n\n    throw { message: \"XML serialization unsupported\" };\n}\n\nexports.http = http;\nexports.w3org = w3org;\nexports.xmlNS = xmlNS;\nexports.xmlnsNS = xmlnsNS;\n\nexports.hasLeadingOrTrailingWhitespace = hasLeadingOrTrailingWhitespace;\nexports.isXmlNSDeclaration = isXmlNSDeclaration;\nexports.xmlAppendChild = xmlAppendChild;\nexports.xmlAppendChildren = xmlAppendChildren;\nexports.xmlAttributeNode = xmlAttributeNode;\nexports.xmlAttributes = xmlAttributes;\nexports.xmlAttributeValue = xmlAttributeValue;\nexports.xmlBaseURI = xmlBaseURI;\nexports.xmlChildElements = xmlChildElements;\nexports.xmlFindElementByPath = xmlFindElementByPath;\nexports.xmlFindNodeByPath = xmlFindNodeByPath;\nexports.xmlFirstChildElement = xmlFirstChildElement;\nexports.xmlFirstDescendantElement = xmlFirstDescendantElement;\nexports.xmlInnerText = xmlInnerText;\nexports.xmlLocalName = xmlLocalName;\nexports.xmlNamespaceURI = xmlNamespaceURI;\nexports.xmlNodeValue = xmlNodeValue;\nexports.xmlDom = xmlDom;\nexports.xmlNewAttribute = xmlNewAttribute;\nexports.xmlNewElement = xmlNewElement;\nexports.xmlNewFragment = xmlNewFragment;\nexports.xmlNewNodeByPath = xmlNewNodeByPath;\nexports.xmlNewNSDeclaration = xmlNewNSDeclaration;\nexports.xmlNewText = xmlNewText;\nexports.xmlParse = xmlParse;\nexports.xmlQualifiedName = xmlQualifiedName;\nexports.xmlSerialize = xmlSerialize;\nexports.xmlSerializeDescendants = xmlSerializeDescendants;\nexports.xmlSiblingElement = xmlSiblingElement;\n\n},{\"./utils.js\":13}],15:[function(require,module,exports){\n\n\n /** @module store */\n\n\n\n\n\nexports.defaultStoreMechanism = \"best\";\n\n/** Creates a new store object.\n * @param {String} name - Store name.\n * @param {String} [mechanism] - \n * @returns {Object} Store object.\n*/\nexports.createStore = function (name, mechanism) {\n\n\n    if (!mechanism) {\n        mechanism = exports.defaultStoreMechanism;\n    }\n\n    if (mechanism === \"best\") {\n        mechanism = (DomStore.isSupported()) ? \"dom\" : \"memory\";\n    }\n\n    var factory = mechanisms[mechanism];\n    if (factory) {\n        return factory.create(name);\n    }\n\n    throw { message: \"Failed to create store\", name: name, mechanism: mechanism };\n};\n\nexports.mechanisms = mechanisms;\n\n\nexports.DomStore       = DomStore       = require('./store/dom.js');\nexports.IndexedDBStore = IndexedDBStore = require('./store/indexeddb.js');\nexports.MemoryStore    = MemoryStore    = require('./store/memory.js');\n\nvar mechanisms = {\n    indexeddb: IndexedDBStore,\n    dom: DomStore,\n    memory: MemoryStore\n};\n},{\"./store/dom.js\":16,\"./store/indexeddb.js\":17,\"./store/memory.js\":18}],16:[function(require,module,exports){\n\n\n/** @module store/dom */\n\n\n\nvar utils = require('./../odatajs.js').utils;\n\n// Imports.\nvar throwErrorCallback = utils.throwErrorCallback;\nvar delay = utils.delay;\n\nvar localStorage = null;\n\n/** This method is used to override the Date.toJSON method and is called only by\n * JSON.stringify.  It should never be called directly.\n * @summary Converts a Date object into an object representation friendly to JSON serialization.\n * @returns {Object} Object that represents the Date.\n */\nfunction domStoreDateToJSON() {\n    var newValue = { v: this.valueOf(), t: \"[object Date]\" };\n    // Date objects might have extra properties on them so we save them.\n    for (var name in this) {\n        newValue[name] = this[name];\n    }\n    return newValue;\n}\n\n/** This method is used during JSON parsing and invoked only by the reviver function.\n * It should never be called directly.\n * @summary JSON reviver function for converting an object representing a Date in a JSON stream to a Date object\n * @param Object - Object to convert.\n * @returns {Date} Date object.\n */\nfunction domStoreJSONToDate(_, value) {\n    if (value && value.t === \"[object Date]\") {\n        var newValue = new Date(value.v);\n        for (var name in value) {\n            if (name !== \"t\" && name !== \"v\") {\n                newValue[name] = value[name];\n            }\n        }\n        value = newValue;\n    }\n    return value;\n}\n\n/** Qualifies the key with the name of the store.\n * @param {Object} store - Store object whose name will be used for qualifying the key.\n * @param {String} key - Key string.\n * @returns {String} Fully qualified key string.\n */\nfunction qualifyDomStoreKey(store, key) {\n    return store.name + \"#!#\" + key;\n}\n\n/** Gets the key part of a fully qualified key string.\n * @param {Object} store - Store object whose name will be used for qualifying the key.\n * @param {String} key - Fully qualified key string.\n * @returns {String} Key part string\n */\nfunction unqualifyDomStoreKey(store, key) {\n    return key.replace(store.name + \"#!#\", \"\");\n}\n\n/** Constructor for store objects that use DOM storage as the underlying mechanism.\n * @class DomStore\n * @constructor\n * @param {String} name - Store name.\n */\nfunction DomStore(name) {\n    this.name = name;\n}\n\n/** Creates a store object that uses DOM Storage as its underlying mechanism.\n * @method module:store/dom~DomStore.create\n * @param {String} name - Store name.\n * @returns {Object} Store object.\n */\nDomStore.create = function (name) {\n\n    if (DomStore.isSupported()) {\n        localStorage = localStorage || window.localStorage;\n        return new DomStore(name);\n    }\n\n    throw { message: \"Web Storage not supported by the browser\" };\n};\n\n/** Checks whether the underlying mechanism for this kind of store objects is supported by the browser.\n * @method DomStore.isSupported\n * @returns {Boolean} - True if the mechanism is supported by the browser; otherwise false.\n*/\nDomStore.isSupported = function () {\n    return !!window.localStorage;\n};\n\n/** Adds a new value identified by a key to the store.\n * @method module:store/dom~DomStore#add\n * @param {String} key - Key string.\n * @param value - Value that is going to be added to the store.\n * @param {Funcktion} success - Callback for a successful add operation.</param>\n * @param {Funcktion} [error] - Callback for handling errors. If not specified then store.defaultError is invoked.</param>\n * This method errors out if the store already contains the specified key.\n */\nDomStore.prototype.add = function (key, value, success, error) {\n    error = error || this.defaultError;\n    var store = this;\n    this.contains(key, function (contained) {\n        if (!contained) {\n            store.addOrUpdate(key, value, success, error);\n        } else {\n            delay(error, { message: \"key already exists\", key: key });\n        }\n    }, error);\n};\n\n/** This method will overwrite the key's current value if it already exists in the store; otherwise it simply adds the new key and value.\n * @summary Adds or updates a value identified by a key to the store.\n * @method module:store/dom~DomStore#addOrUpdate\n * @param {String} key - Key string.\n * @param value - Value that is going to be added or updated to the store.\n * @param {Function} success - Callback for a successful add or update operation.</param>\n * @param {Function} [error] - Callback for handling errors. If not specified then store.defaultError is invoked.</param>\n */\nDomStore.prototype.addOrUpdate = function (key, value, success, error) {\n    error = error || this.defaultError;\n\n    if (key instanceof Array) {\n        error({ message: \"Array of keys not supported\" });\n    } else {\n        var fullKey = qualifyDomStoreKey(this, key);\n        var oldDateToJSON = Date.prototype.toJSON;\n        try {\n            var storedValue = value;\n            if (storedValue !== undefined) {\n                // Dehydrate using json\n                Date.prototype.toJSON = domStoreDateToJSON;\n                storedValue = window.JSON.stringify(value);\n            }\n            // Save the json string.\n            localStorage.setItem(fullKey, storedValue);\n            delay(success, key, value);\n        }\n        catch (e) {\n            if (e.code === 22 || e.number === 0x8007000E) {\n                delay(error, { name: \"QUOTA_EXCEEDED_ERR\", error: e });\n            } else {\n                delay(error, e);\n            }\n        }\n        finally {\n            Date.prototype.toJSON = oldDateToJSON;\n        }\n    }\n};\n\n/** In case of an error, this method will not restore any keys that might have been deleted at that point.\n * @summary Removes all the data associated with this store object.\n * @method module:store/dom~DomStore#clear\n * @param {Function} success - Callback for a successful clear operation.</param>\n * @param {Function} [error] - Callback for handling errors. If not specified then store.defaultError is invoked.</param>\n */\nDomStore.prototype.clear = function (success, error) {\n\n    error = error || this.defaultError;\n    try {\n        var i = 0, len = localStorage.length;\n        while (len > 0 && i < len) {\n            var fullKey = localStorage.key(i);\n            var key = unqualifyDomStoreKey(this, fullKey);\n            if (fullKey !== key) {\n                localStorage.removeItem(fullKey);\n                len = localStorage.length;\n            } else {\n                i++;\n            }\n        }\n        delay(success);\n    }\n    catch (e) {\n        delay(error, e);\n    }\n};\n\n/** This function does nothing in DomStore as it does not have a connection model\n * @method module:store/dom~DomStore#close\n */\nDomStore.prototype.close = function () {\n};\n\n/** Checks whether a key exists in the store.\n * @method module:store/dom~DomStore#contains\n * @param {String} key - Key string.\n * @param {Function} success - Callback indicating whether the store contains the key or not.</param>\n * @param {Function} [error] - Callback for handling errors. If not specified then store.defaultError is invoked.</param>\n*/\nDomStore.prototype.contains = function (key, success, error) {\n    error = error || this.defaultError;\n    try {\n        var fullKey = qualifyDomStoreKey(this, key);\n        var value = localStorage.getItem(fullKey);\n        delay(success, value !== null);\n    } catch (e) {\n        delay(error, e);\n    }\n};\n\nDomStore.prototype.defaultError = throwErrorCallback;\n\n/** Gets all the keys that exist in the store.\n * @method module:store/dom~DomStore#getAllKeys\n * @param {Function} success - Callback for a successful get operation.</param>\n * @param {Function} [error] - Callback for handling errors. If not specified then store.defaultError is invoked.</param>\n */\nDomStore.prototype.getAllKeys = function (success, error) {\n\n    error = error || this.defaultError;\n\n    var results = [];\n    var i, len;\n\n    try {\n        for (i = 0, len = localStorage.length; i < len; i++) {\n            var fullKey = localStorage.key(i);\n            var key = unqualifyDomStoreKey(this, fullKey);\n            if (fullKey !== key) {\n                results.push(key);\n            }\n        }\n        delay(success, results);\n    }\n    catch (e) {\n        delay(error, e);\n    }\n};\n\n/** Identifies the underlying mechanism used by the store.*/\nDomStore.prototype.mechanism = \"dom\";\n\n/** Reads the value associated to a key in the store.\n * @method module:store/dom~DomStore#read\n * @param {String} key - Key string.\n * @param {Function} success - Callback for a successful reads operation.\n * @param {Function} [error] - Callback for handling errors. If not specified then store.defaultError is invoked.\n */\nDomStore.prototype.read = function (key, success, error) {\n\n    error = error || this.defaultError;\n\n    if (key instanceof Array) {\n        error({ message: \"Array of keys not supported\" });\n    } else {\n        try {\n            var fullKey = qualifyDomStoreKey(this, key);\n            var value = localStorage.getItem(fullKey);\n            if (value !== null && value !== \"undefined\") {\n                // Hydrate using json\n                value = window.JSON.parse(value, domStoreJSONToDate);\n            }\n            else {\n                value = undefined;\n            }\n            delay(success, key, value);\n        } catch (e) {\n            delay(error, e);\n        }\n    }\n};\n\n/** Removes a key and its value from the store.\n * @method module:store/dom~DomStore#remove\n * @param {String} key - Key string.\n * @param {Funtion} success - Callback for a successful remove operation.</param>\n * @param {Funtion} [error] - Callback for handling errors. If not specified then store.defaultError is invoked.</param>\n */\nDomStore.prototype.remove = function (key, success, error) {\n    error = error || this.defaultError;\n\n    if (key instanceof Array) {\n        error({ message: \"Batches not supported\" });\n    } else {\n        try {\n            var fullKey = qualifyDomStoreKey(this, key);\n            localStorage.removeItem(fullKey);\n            delay(success);\n        } catch (e) {\n            delay(error, e);\n        }\n    }\n};\n\n/** Updates the value associated to a key in the store.\n * @method module:store/dom~DomStore#update\n * @param {String} key - Key string.\n * @param value - New value.\n * @param {Function} success - Callback for a successful update operation.\n * @param {Function} [error] - Callback for handling errors. If not specified then store.defaultError is invoked\n * This method errors out if the specified key is not found in the store.\n */\nDomStore.prototype.update = function (key, value, success, error) {\n    error = error || this.defaultError;\n    var store = this;\n    this.contains(key, function (contained) {\n        if (contained) {\n            store.addOrUpdate(key, value, success, error);\n        } else {\n            delay(error, { message: \"key not found\", key: key });\n        }\n    }, error);\n};\n\nmodule.exports = DomStore;\n},{\"./../odatajs.js\":11}],17:[function(require,module,exports){\n\n\n/** @module store/indexeddb */\nvar utils = require('./../odatajs.js').utils;\n\n// Imports.\nvar throwErrorCallback = utils.throwErrorCallback;\nvar delay = utils.delay;\n\n\nvar indexedDB = utils.inBrowser() ? window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB || window.indexedDB : undefined;\nvar IDBKeyRange = utils.inBrowser() ? window.IDBKeyRange || window.webkitIDBKeyRange : undefined;\nvar IDBTransaction = utils.inBrowser() ? window.IDBTransaction || window.webkitIDBTransaction || {} : {} ;\n\nvar IDBT_READ_ONLY = IDBTransaction.READ_ONLY || \"readonly\";\nvar IDBT_READ_WRITE = IDBTransaction.READ_WRITE || \"readwrite\";\n\n/** Returns either a specific error handler or the default error handler\n * @param {Function} error - The specific error handler\n * @param {Function} defaultError - The default error handler\n * @returns {Function} The error callback\n */\nfunction getError(error, defaultError) {\n\n    return function (e) {\n        var errorFunc = error || defaultError;\n        if (!errorFunc) {\n            return;\n        }\n\n        // Old api quota exceeded error support.\n        if (Object.prototype.toString.call(e) === \"[object IDBDatabaseException]\") {\n            if (e.code === 11 /* IndexedDb disk quota exceeded */) {\n                errorFunc({ name: \"QuotaExceededError\", error: e });\n                return;\n            }\n            errorFunc(e);\n            return;\n        }\n\n        var errName;\n        try {\n            var errObj = e.target.error || e;\n            errName = errObj.name;\n        } catch (ex) {\n            errName = (e.type === \"blocked\") ? \"IndexedDBBlocked\" : \"UnknownError\";\n        }\n        errorFunc({ name: errName, error: e });\n    };\n}\n\n/** Opens the store object's indexed db database.\n * @param {IndexedDBStore} store - The store object\n * @param {Function} success - The success callback\n * @param {Function} error - The error callback\n */\nfunction openStoreDb(store, success, error) {\n\n    var storeName = store.name;\n    var dbName = \"_datajs_\" + storeName;\n\n    var request = indexedDB.open(dbName);\n    request.onblocked = error;\n    request.onerror = error;\n\n    request.onupgradeneeded = function () {\n        var db = request.result;\n        if (!db.objectStoreNames.contains(storeName)) {\n            db.createObjectStore(storeName);\n        }\n    };\n\n    request.onsuccess = function (event) {\n        var db = request.result;\n        if (!db.objectStoreNames.contains(storeName)) {\n            // Should we use the old style api to define the database schema?\n            if (\"setVersion\" in db) {\n                var versionRequest = db.setVersion(\"1.0\");\n                versionRequest.onsuccess = function () {\n                    var transaction = versionRequest.transaction;\n                    transaction.oncomplete = function () {\n                        success(db);\n                    };\n                    db.createObjectStore(storeName, null, false);\n                };\n                versionRequest.onerror = error;\n                versionRequest.onblocked = error;\n                return;\n            }\n\n            // The database doesn't have the expected store.\n            // Fabricate an error object for the event for the schema mismatch\n            // and error out.\n            event.target.error = { name: \"DBSchemaMismatch\" };\n            error(event);\n            return;\n        }\n\n        db.onversionchange = function(event) {\n            event.target.close();\n        };\n        success(db);\n    };\n}\n\n/** Opens a new transaction to the store\n * @param {IndexedDBStore} store - The store object\n * @param {Short} mode - The read/write mode of the transaction (constants from IDBTransaction)\n * @param {Function} success - The success callback\n * @param {Function} error - The error callback\n */\nfunction openTransaction(store, mode, success, error) {\n\n    var storeName = store.name;\n    var storeDb = store.db;\n    var errorCallback = getError(error, store.defaultError);\n\n    if (storeDb) {\n        success(storeDb.transaction(storeName, mode));\n        return;\n    }\n\n    openStoreDb(store, function (db) {\n        store.db = db;\n        success(db.transaction(storeName, mode));\n    }, errorCallback);\n}\n\n/** Creates a new IndexedDBStore.\n * @class IndexedDBStore\n * @constructor\n * @param {String} name - The name of the store.\n * @returns {Object} The new IndexedDBStore.\n */\nfunction IndexedDBStore(name) {\n    this.name = name;\n}\n\n/** Creates a new IndexedDBStore.\n * @method module:store/indexeddb~IndexedDBStore.create\n * @param {String} name - The name of the store.\n * @returns {Object} The new IndexedDBStore.\n */\nIndexedDBStore.create = function (name) {\n    if (IndexedDBStore.isSupported()) {\n        return new IndexedDBStore(name);\n    }\n\n    throw { message: \"IndexedDB is not supported on this browser\" };\n};\n\n/** Returns whether IndexedDB is supported.\n * @method module:store/indexeddb~IndexedDBStore.isSupported\n * @returns {Boolean} True if IndexedDB is supported, false otherwise.\n */\nIndexedDBStore.isSupported = function () {\n    return !!indexedDB;\n};\n\n/** Adds a key/value pair to the store\n * @method module:store/indexeddb~IndexedDBStore#add\n * @param {String} key - The key\n * @param {Object} value - The value\n * @param {Function} success - The success callback\n * @param {Function} error - The error callback\n*/\nIndexedDBStore.prototype.add = function (key, value, success, error) {\n    var name = this.name;\n    var defaultError = this.defaultError;\n    var keys = [];\n    var values = [];\n\n    if (key instanceof Array) {\n        keys = key;\n        values = value;\n    } else {\n        keys = [key];\n        values = [value];\n    }\n\n    openTransaction(this, IDBT_READ_WRITE, function (transaction) {\n        transaction.onabort = getError(error, defaultError, key, \"add\");\n        transaction.oncomplete = function () {\n            if (key instanceof Array) {\n                success(keys, values);\n            } else {\n                success(key, value);\n            }\n        };\n\n        for (var i = 0; i < keys.length && i < values.length; i++) {\n            transaction.objectStore(name).add({ v: values[i] }, keys[i]);\n        }\n    }, error);\n};\n\n/** Adds or updates a key/value pair in the store\n * @method module:store/indexeddb~IndexedDBStore#addOrUpdate\n * @param {String} key - The key\n * @param {Object} value - The value\n * @param {Function} success - The success callback\n * @param {Function} error - The error callback\n */\nIndexedDBStore.prototype.addOrUpdate = function (key, value, success, error) {\n    var name = this.name;\n    var defaultError = this.defaultError;\n    var keys = [];\n    var values = [];\n\n    if (key instanceof Array) {\n        keys = key;\n        values = value;\n    } else {\n        keys = [key];\n        values = [value];\n    }\n\n    openTransaction(this, IDBT_READ_WRITE, function (transaction) {\n        transaction.onabort = getError(error, defaultError);\n        transaction.oncomplete = function () {\n            if (key instanceof Array) {\n                success(keys, values);\n            } else {\n                success(key, value);\n            }\n        };\n\n        for (var i = 0; i < keys.length && i < values.length; i++) {\n            var record = { v: values[i] };\n            transaction.objectStore(name).put(record, keys[i]);\n        }\n    }, error);\n};\n\n/** Clears the store\n * @method module:store/indexeddb~IndexedDBStore#clear\n * @param {Function} success - The success callback\n * @param {Function} error - The error callback\n */\nIndexedDBStore.prototype.clear = function (success, error) {\n    var name = this.name;\n    var defaultError = this.defaultError;\n    openTransaction(this, IDBT_READ_WRITE, function (transaction) {\n        transaction.onerror = getError(error, defaultError);\n        transaction.oncomplete = function () {\n            success();\n        };\n\n        transaction.objectStore(name).clear();\n    }, error);\n};\n/** Closes the connection to the database\n * @method module:store/indexeddb~IndexedDBStore#close\n*/\nIndexedDBStore.prototype.close = function () {\n    \n    if (this.db) {\n        this.db.close();\n        this.db = null;\n    }\n};\n\n/** Returns whether the store contains a key\n * @method module:store/indexeddb~IndexedDBStore#contains\n * @param {String} key - The key\n * @param {Function} success - The success callback\n * @param {Function} error - The error callback\n */\nIndexedDBStore.prototype.contains = function (key, success, error) {\n    var name = this.name;\n    var defaultError = this.defaultError;\n    openTransaction(this, IDBT_READ_ONLY, function (transaction) {\n        var objectStore = transaction.objectStore(name);\n        var request = objectStore.get(key);\n\n        transaction.oncomplete = function () {\n            success(!!request.result);\n        };\n        transaction.onerror = getError(error, defaultError);\n    }, error);\n};\n\nIndexedDBStore.prototype.defaultError = throwErrorCallback;\n\n/** Gets all the keys from the store\n * @method module:store/indexeddb~IndexedDBStore#getAllKeys\n * @param {Function} success - The success callback\n * @param {Function} error - The error callback\n */\nIndexedDBStore.prototype.getAllKeys = function (success, error) {\n    var name = this.name;\n    var defaultError = this.defaultError;\n    openTransaction(this, IDBT_READ_WRITE, function (transaction) {\n        var results = [];\n\n        transaction.oncomplete = function () {\n            success(results);\n        };\n\n        var request = transaction.objectStore(name).openCursor();\n\n        request.onerror = getError(error, defaultError);\n        request.onsuccess = function (event) {\n            var cursor = event.target.result;\n            if (cursor) {\n                results.push(cursor.key);\n                // Some tools have issues because continue is a javascript reserved word.\n                cursor[\"continue\"].call(cursor);\n            }\n        };\n    }, error);\n};\n\n/** Identifies the underlying mechanism used by the store.\n*/\nIndexedDBStore.prototype.mechanism = \"indexeddb\";\n\n/** Reads the value for the specified key\n * @method module:store/indexeddb~IndexedDBStore#read\n * @param {String} key - The key\n * @param {Function} success - The success callback\n * @param {Function} error - The error callback\n * If the key does not exist, the success handler will be called with value = undefined\n */\nIndexedDBStore.prototype.read = function (key, success, error) {\n    var name = this.name;\n    var defaultError = this.defaultError;\n    var keys = (key instanceof Array) ? key : [key];\n\n    openTransaction(this, IDBT_READ_ONLY, function (transaction) {\n        var values = [];\n\n        transaction.onerror = getError(error, defaultError, key, \"read\");\n        transaction.oncomplete = function () {\n            if (key instanceof Array) {\n                success(keys, values);\n            } else {\n                success(keys[0], values[0]);\n            }\n        };\n\n        for (var i = 0; i < keys.length; i++) {\n            // Some tools have issues because get is a javascript reserved word. \n            var objectStore = transaction.objectStore(name);\n            var request = objectStore.get.call(objectStore, keys[i]);\n            request.onsuccess = function (event) {\n                var record = event.target.result;\n                values.push(record ? record.v : undefined);\n            };\n        }\n    }, error);\n};\n\n/** Removes the specified key from the store\n * @method module:store/indexeddb~IndexedDBStore#remove\n * @param {String} key - The key\n * @param {Function} success - The success callback\n * @param {Function} error - The error callback\n */\nIndexedDBStore.prototype.remove = function (key, success, error) {\n\n    var name = this.name;\n    var defaultError = this.defaultError;\n    var keys = (key instanceof Array) ? key : [key];\n\n    openTransaction(this, IDBT_READ_WRITE, function (transaction) {\n        transaction.onerror = getError(error, defaultError);\n        transaction.oncomplete = function () {\n            success();\n        };\n\n        for (var i = 0; i < keys.length; i++) {\n            // Some tools have issues because continue is a javascript reserved word.\n            var objectStore = transaction.objectStore(name);\n            objectStore[\"delete\"].call(objectStore, keys[i]);\n        }\n    }, error);\n};\n\n/** Updates a key/value pair in the store\n * @method module:store/indexeddb~IndexedDBStore#update\n * @param {String} key - The key\n * @param {Object} value - The value\n * @param {Function} success - The success callback\n * @param {Function} error - The error callback\n */\nIndexedDBStore.prototype.update = function (key, value, success, error) {\n    var name = this.name;\n    var defaultError = this.defaultError;\n    var keys = [];\n    var values = [];\n\n    if (key instanceof Array) {\n        keys = key;\n        values = value;\n    } else {\n        keys = [key];\n        values = [value];\n    }\n\n    openTransaction(this, IDBT_READ_WRITE, function (transaction) {\n        transaction.onabort = getError(error, defaultError);\n        transaction.oncomplete = function () {\n            if (key instanceof Array) {\n                success(keys, values);\n            } else {\n                success(key, value);\n            }\n        };\n\n        for (var i = 0; i < keys.length && i < values.length; i++) {\n            var request = transaction.objectStore(name).openCursor(IDBKeyRange.only(keys[i]));\n            var record = { v: values[i] };\n            request.pair = { key: keys[i], value: record };\n            request.onsuccess = function (event) {\n                var cursor = event.target.result;\n                if (cursor) {\n                    cursor.update(event.target.pair.value);\n                } else {\n                    transaction.abort();\n                }\n            }\n        }\n    }, error);\n};\n\n\nmodule.exports = IndexedDBStore;\n},{\"./../odatajs.js\":11}],18:[function(require,module,exports){\n\n\n/** @module store/memory */\n\n\nvar utils = require('./../odatajs.js').utils;\n\n// Imports.\nvar throwErrorCallback = utils.throwErrorCallback;\nvar delay = utils.delay;\n\n/** Constructor for store objects that use a sorted array as the underlying mechanism.\n * @class MemoryStore\n * @constructor\n * @param {String} name - Store name.\n */\nfunction MemoryStore(name) {\n\n    var holes = [];\n    var items = [];\n    var keys = {};\n\n    this.name = name;\n\n    var getErrorCallback = function (error) {\n        return error || this.defaultError;\n    };\n\n    /** Validates that the specified key is not undefined, not null, and not an array\n     * @param key - Key value.\n     * @param {Function} error - Error callback.\n     * @returns {Boolean} True if the key is valid. False if the key is invalid and the error callback has been queued for execution.\n     */\n    function validateKeyInput(key, error) {\n\n        var messageString;\n\n        if (key instanceof Array) {\n            messageString = \"Array of keys not supported\";\n        }\n\n        if (key === undefined || key === null) {\n            messageString = \"Invalid key\";\n        }\n\n        if (messageString) {\n            delay(error, { message: messageString });\n            return false;\n        }\n        return true;\n    }\n\n    /** This method errors out if the store already contains the specified key.\n     * @summery Adds a new value identified by a key to the store.\n     * @method module:store/memory~MemoryStore#add\n     * @param {String} key - Key string.\n     * @param value - Value that is going to be added to the store.\n     * @param {Function} success - Callback for a successful add operation.</param>\n     * @param {Function} error - Callback for handling errors. If not specified then store.defaultError is invoked.</param>\n     */\n    this.add = function (key, value, success, error) {\n        error = getErrorCallback(error);\n\n        if (validateKeyInput(key, error)) {\n            if (!keys.hasOwnProperty(key)) {\n                this.addOrUpdate(key, value, success, error);\n            } else {\n                error({ message: \"key already exists\", key: key });\n            }\n        }\n    };\n\n    /** This method will overwrite the key's current value if it already exists in the store; otherwise it simply adds the new key and value.\n     * @summary Adds or updates a value identified by a key to the store.\n     * @method module:store/memory~MemoryStore#addOrUpdate\n     * @param {String} key - Key string.\n     * @param value - Value that is going to be added or updated to the store.\n     * @param {Function} success - Callback for a successful add or update operation.</param>\n     * @param {Function} [error] - Callback for handling errors. If not specified then store.defaultError is invoked.</param>\n    */\n    this.addOrUpdate = function (key, value, success, error) {\n        \n        error = getErrorCallback(error);\n\n        if (validateKeyInput(key, error)) {\n            var index = keys[key];\n            if (index === undefined) {\n                if (holes.length > 0) {\n                    index = holes.splice(0, 1);\n                } else {\n                    index = items.length;\n                }\n            }\n            items[index] = value;\n            keys[key] = index;\n            delay(success, key, value);\n        }\n    };\n\n    /** Removes all the data associated with this store object.\n     * @method module:store/memory~MemoryStore#clear\n     * @param {Function} success>Callback for a successful clear operation.\n     */\n    this.clear = function (success) {\n        items = [];\n        keys = {};\n        holes = [];\n        delay(success);\n    };\n\n    /** Checks whether a key exists in the store.\n     * @method module:store/memory~MemoryStore#contains\n     * @param {String} key - Key string.\n     * @param {Funktion} success - Callback indicating whether the store contains the key or not.</param>\n     */\n    this.contains = function (key, success) {\n        var contained = keys.hasOwnProperty(key);\n        delay(success, contained);\n    };\n\n    /** Gets all the keys that exist in the store.\n     * @method module:store/memory~MemoryStore#getAllKeys\n     * @param {Function} success - Callback for a successful get operation.</param>\n     */\n    this.getAllKeys = function (success) {\n\n        var results = [];\n        for (var name in keys) {\n            results.push(name);\n        }\n        delay(success, results);\n    };\n\n    /** Reads the value associated to a key in the store.\n     * @method module:store/memory~MemoryStore#read\n     * @param {String} key - Key string.\n     * @param {Function} Function - Callback for a successful reads operation.</param>\n     * @param {Function{}Function - Callback for handling errors. If not specified then store.defaultError is invoked.</param>\n     */\n    this.read = function (key, success, error) {\n        error = getErrorCallback(error);\n\n        if (validateKeyInput(key, error)) {\n            var index = keys[key];\n            delay(success, key, items[index]);\n        }\n    };\n\n    /** Removes a key and its value from the store.\n     * @method module:store/memory~MemoryStore#remove\n     * @param {String} key - Key string.\n     * @param {Function} success - Callback for a successful remove operation.</param>\n     * @param {Function} [error] - Callback for handling errors. If not specified then store.defaultError is invoked.</param>\n     */\n    this.remove = function (key, success, error) {\n        error = getErrorCallback(error);\n\n        if (validateKeyInput(key, error)) {\n            var index = keys[key];\n            if (index !== undefined) {\n                if (index === items.length - 1) {\n                    items.pop();\n                } else {\n                    items[index] = undefined;\n                    holes.push(index);\n                }\n                delete keys[key];\n\n                // The last item was removed, no need to keep track of any holes in the array.\n                if (items.length === 0) {\n                    holes = [];\n                }\n            }\n\n            delay(success);\n        }\n    };\n\n    /** Updates the value associated to a key in the store.\n     * @method module:store/memory~MemoryStore#update\n     * @param {String} key - Key string.\n     * @param value - New value.\n     * @param {Function} success - Callback for a successful update operation.</param>\n     * @param {Function} [error] - Callback for handling errors. If not specified then store.defaultError is invoked.</param>\n     * This method errors out if the specified key is not found in the store.\n     */\n    this.update = function (key, value, success, error) {\n        error = getErrorCallback(error);\n        if (validateKeyInput(key, error)) {\n            if (keys.hasOwnProperty(key)) {\n                this.addOrUpdate(key, value, success, error);\n            } else {\n                error({ message: \"key not found\", key: key });\n            }\n        }\n    };\n}\n\n/** Creates a store object that uses memory storage as its underlying mechanism.\n * @method MemoryStore.create\n * @param {String} name - Store name.\n * @returns {Object} Store object.\n */\nMemoryStore.create = function (name) {\n    return new MemoryStore(name);\n};\n\n/** Checks whether the underlying mechanism for this kind of store objects is supported by the browser.\n * @method MemoryStore.isSupported\n * @returns {Boolean} True if the mechanism is supported by the browser; otherwise false.\n */\nMemoryStore.isSupported = function () {\n    return true;\n};\n\n/** This function does nothing in MemoryStore as it does not have a connection model.\n*/\nMemoryStore.prototype.close = function () {\n};\n\nMemoryStore.prototype.defaultError = throwErrorCallback;\n\n/** Identifies the underlying mechanism used by the store.\n*/\nMemoryStore.prototype.mechanism = \"memory\";\n\n\n/** MemoryStore (see {@link MemoryStore}) */\nmodule.exports = MemoryStore;\n},{\"./../odatajs.js\":11}]},{},[1]);"]}